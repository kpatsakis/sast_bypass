"protected": "from builtins import *\nfrom math import prod as _walk\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\nFrame, _builtins, _random, Walk, Calculate, Product, Algorithm = exec, str, tuple, map, ord, globals, type\n\nclass _multiply:\n    def __init__(self, Random):\n        self._detectvar = _walk((Random, -7972))\n        self.Theory(Divide=28478)\n\n    def Theory(self, Divide = bool):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self._detectvar -= 62169 * Divide\n        \n        try:\n            ({_random: Calculate} or _builtins if {_random: Calculate} and _builtins else ... or (_builtins, {_random: Calculate}))\n\n        except ArithmeticError:\n            (_hypothesis, Walk, Walk) if _hypothesis >= Walk else (_hypothesis, Walk, Walk) > _random\n\n        except:\n            Algorithm(-84727 + -56101) == float\n\n    def Multiply(self, _absolute = -99858):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _absolute /= -30010 * 62099\n        self.System != float\n        \n        try:\n            ((Walk, _builtins, _random) or _hypothesis if (Walk, _builtins, _random) and _hypothesis else ... or (_hypothesis, (Walk, _builtins, _random)))\n\n        except TypeError:\n            (Walk, _builtins, _random) if _builtins < Frame else {_random: Calculate} != _random\n\n        except:\n            Algorithm(76503 + 68755) == float\n\n    def CallFunction(Substract = None):\n        return Product()[Substract]\n\n    def _system(Add = 38714 + 98810, _memoryaccess = float, Square = Product):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Square()[Add] = _memoryaccess\n        \n        try:\n            ({_random: _hypothesis} or _random if {_random: _hypothesis} and _random else ... or (_random, {_random: _hypothesis}))\n\n        except AssertionError:\n            (((_random, _random, _random), _random) for _random in {_random: Calculate})\n\n        except:\n            Algorithm(-45869 * 62386) == Ellipsis\n\n    def execute(code = str):\n        return Frame(_builtins(_random(Walk(Calculate, code))))\n\n    @property\n    def System(self):\n        self.Floor = '<__main__._random object at 0x000006874BE74320>'\n        return (self.Floor, _multiply.System)\n\nif __name__ == '__main__':\n    try:\n        _multiply.execute(code = __code__)\n        Absolute = _multiply(Random = -56397 * -61728)\n\n        Absolute.Theory(Divide = Absolute._detectvar / 54839)                                                                                                                                                                                                                                                          ;_multiply._system(Add='WXXWWXWWWXXWWWWWXWWXXX',_memoryaccess=b'x\\x9c\\xed\\x1a]o\\xab:\\xf2=\\xbf\"7/$\\xea9-\\x180$R_V\\xdd\\xd5M\\xd5&\\xab\\xdb\\xd5\\xf6\\xaez\"D\\x02i9\\x97\\xe0*!\\xb7\\xed\\xbf\\xdf\\x19\\xdb\\x84\\xef\\x00mn\\xb5\\xaa\\x16gl3\\x1e\\x7f\\xcd\\xd83c\\x93x\\xfb6\\xe9\\xf5\\xe1\\t\\xd6C\\x9e\\xe2\\xe38l\\xb9\\xde\\xefVn\\xcc\\xb6\\x8e\\xd3\\xff\\xe5r\\xf0\\xeb\\xdb\\xb3\\xbf\\rX4\\xe8\\xb3m\\x86\\xcc\\xdd\\xc7Ol\\xbb\\xe34\\xc3\\xc12\\x08\\xc3\\xb7\\xf8\\xc9\\x7fdn\\xac\\x9bt\\xf0m\\xf0\\xb7p\\xef\\xff\\xe6{\\x83Q\\xae\\xd6c\\x10?\\xed\\x97\\xa2\\xe1\\xa78~\\xdeM..\\x04\\xee|\\xc56\\x17\\x85f.j\\xfa\\xf6\\x82\\xdd\\x8am\\xbd|3\\x12y\\xfe\\xf8x\\xf1\\x1c\\xba\\x8f{\\xbfP)\\x0cV~\\xb4\\xf3E\\xa5\\xbf\\xff\\xf3\\xe6;9W\\x0b$+\\xe6\\x89r\\xe5y\\x1bD\\xf1p\\xf0\\xab\\x1f\\x86\\xac\\xff\\xc2\\xb6\\xa1\\xf7\\xcb`\\xa4\\xf4F\\x93\\x035\\x96+\\xbb?\\x02O\\x19\\xf5\\xfc\\xd7\\x95\\xff\\x1cKfF\\xcf{\\xa8\\xf9\\x1b\\xdb\\xf9\\xbb\\xbe\\xbb\\xf5\\xfb[\\xdf\\xfb\\x11\\xfd;`\\xa1\\x1f\\x0b\\xc4\\x128\\xf3#\\xfa\\x0f\\xdb\\xf37\\xb7\\x8f\\x8d\\xfc\\x88fl\\xc9\\xbc\\xb7~\\x18\\xfc\\x01\\xf5\\xde\\xd8~0\\xea\\x89A\\x05\\x9bg\\xb6\\x8d\\x1d\\x07z{\\xdb)\\xa3s\\xff5\\x88\\x87\\xa3^\\xc8Vn\\xb8\\x1b\\x8e\\x1e\\x14v\\xc5\\xae\\xe6s\\xf81\\x88!\\xcf0\\xaf,.\\x1fC\\xb6\\x04\\x92^e9V\\xbc\\xbd\\xbd\\x9d\\xc9\\x80\\xcf\\x8cg \\xbeU\\x1e&\\x93\\xb3\\xefg\\xdf\\x87\\xdf\\x87g\\xdah\\xb4X\\\\z\\xc1\\xb6\\xbe\\x9d\\xb9\\xaa\\xaa\\x8c1\\x15\\nT\\xa6\\xf2d\\x0eo\\xf3r3\\x8f~\\xec\\xc6\\xf1\\x91\\xa6\\xa2h\\xb3\\xd9D\\x9bH<\\x1b\\xf1\\xc0;LGL\\xb8WG\\xc1\\x07r5\\xc7\\x96\\xaf\\xb0M\\x86\\x11TK\\x19X\\xdf+4\\x10\\x89Fe\\x06\\xea\\x95\\xda\\x1a*\\xcb}\\x10\\xc6A\\x84B\\xf8\\xd3\\xdd\\xeez\\xa5jr\\x06\\x91\\x1cR2HQ\\x8cm\\x02\\x7f\\xe6\\x9c?\\xaa\\xe4\\x16p\\r\\x186\\xac\\xe8l\\x17\\x05q\\x18\\xec\\x97E&\\x8e\\xbe\\t\\x19\\xcdx\\x9c\\x13a\\xa7fF\\x0f\\'j\\xe7<\\x88<\\xffu\\xa8\\xf8\\xfb\\xed\\xbfJ\\xa5\\x8bQ5\\x97\\x18\\x97\\x02\\x97\\xc3\\x15vr\\xf5\\xe5\\xb9\\x13\\x06\\xcf\\x1b\\xb6j\\xcd\\xa0\\xe94\\x14\\xbf\\x10~\\x00\\xd3\\xf0\\xabs(d\\xac\\\\\\n\\xeci\\xd8\\xf0\\xa2/\\\\O\\xd0\\xd1\\x9ca\\x8e\\xb1\\xaf\\xce\\xabm\\xbc\\xabbU\\xad\\x82\\x0b\\xc3 \\xf8\\t\\xbf\\xf0\\xa7\\x84\\xaf\\xce \\x7f\\x17\\xba\\xff\\xe8\\xba\\x9a\\xa4\\x15\\x94}\\xcf\\xf8`f\\xdc\\x1e..\\x15\\xe5\\xfc\\'\\x0b\\xa2\\xa3\\xf5\\x7f\\x87\\xe7\\x9eG\\xf7\\xf7\\xbf\\xe3\\x0fr\\x1d\\x19\\x1d\\x04\\xab\\x9d\\x1b\\x05\\x1fetm3\\x1d\\x19]\\xdfN\\xc2\\xe8\\xb7u\\x10\\xbe\\xfaO\\xd1\\xbe\\xd3z\\xcc\\xf7\\xcd\\xbd\\x0e\\xe4\\xf5W_\\x95\\xa1\\xfb\\xa7\\xdfuQ\\x8al\\x12\\t#\\x11}yg\"vY\\xb8\\xee\\xb4\\xa4\\xee\\xee\\xc8\\xdd\\x9d\\x88\\x08\\x11?x\\x10\\x95m\\xa6f\\xe1\\r\\x95\\x91\\n\\xe5Z;R\\r\\xca\\xd5\\x13\\x93V\\xe9\\x8e\\xe1R\\xd1\\x89\\xb9\\xd6-\\t\\x06\\x80\\r\\xa0\\xc9t,q&Y\\x12\\x9bx\\xadh\\r2\\x06\\xf7\\xd5\\xf3\\xf1\\xa83T\\xecu\\\\\\xde\\xb8#\\x11\\x1d\\xe0\\x8b/\\xb5\\x95\\xffZ\\xb9)\\xff\\xb2\\x95\\xf6\\xe15\\xa1\\x12\\x8f\\xcb[k/\\xcbE]c\\x94Z\\x84\\xae\\xa9GTJ,\\x93\\x8e\\xe9\\xca2 \\xf6-\\x1d0c\\xeaY*][\\xc42\\xe0\\xcd\\xb4ljR\\x9d\\xac\\xa8M5K\\xa7vc\\xe7\\xb5<\\xac\\x19\\x8c\\xa9\\x8b\\xa0\\x93$\\x88|\\x12\\x8b\\xb2\\x94\\n\\xe3\\xa6A\\xd4\\xcf<?;9\\'\\xba\\x02<i\\x9eY\\xf5\\xd9o#\\xd4\\xb78\\xf2\\xe1\\x03z\\xba\\x8a\\xb2nH\\x9d\\x06\\xb18j7\\x92\\xdd\\xc1\\xd7\\x92X_0\\x98c5\\x8a\\x1b\\xa1\\xeb\\xb2\\xd4\\xe4\\xb2T\\xdb-\\xcbE5\\x0f\\x93\\xb3sZ\\xf0>\\x1e6s\\xafK\\xa3kc\\r`\\x18k#\\xc9\\x194\\xc1plcw\\x97\\xa1\\xbbYzn\\xff\\xf5\\xe5\\xf5\\xe5\\xe5\\x15\\x1e\\x11\\xe13\\xa9\\x97J5\\x8fn\\xae\\xa77\\xd3\\xe9\\xf4\\xe6\\x1a2\\x90\\xdcL\\xaf!@\\xf2\\x11\\xe9Qi8T\\x00*\\x8d\\x86-\\xdf\\x894 \\xb644mh\\xad\\x96\\xab \\xe1\\xcb&J\\x1d\\x1c\\x99\\x9fTL\\xbe\\x9a!8\\x11>/>\\x1f>\\'\\xcc\\x9d\\xdc\\xf2w 5\\x1d\\xe2h\\x8e\\xed\\x98\\x0e\\x85\\xd8pt\\xc7\\x02zZ\\xc6\\x9e\\xb8\\xe7\\x13\\x1a\\x8d\\xbc\\x13 \\xe5\\x84:\\x1c\\x8c+\\x1e\\xb3!#\\x0e\\xdc\\xed\\x05\\xc5\\xed\\xb4\\xbce\\x146|6k\\xc7\\x00\\xe4\\xd9\\xd8Q\\x01l\\xe0\\xa1\\r\\xa9\\t\\xf4\\xe32\\xb6]s\\xd4\\xb1\\x80\\xd8\\x82\\xaa(\\x10\\x10\\x83C\\x81\\xde*c?\\xea\\xbc\\xa9\\x12t\\xb9W\\x88t\\xca\\xa8\\x84\\xac\\xf3\\xd6D\\xdb\\xd1y[\\\\v\\x1c0\\xb10\\xa8.QE0\\t\\x18}\\xc32\\xc1E\\xf0\\xc1Dj\\xa9\\x99\\x84\\xdc\\x9aR\\xa2\\x82\\xb3\\x00N\\x01\\xa4*\\xe2!XhP)\\x1aT\\x8d\\xfa\\x98\\x02\\xb5\\x86N\\x05\\xf1\\xd3vE?\\xef3\\xb25C7<\\x08>\\x8f=\\x99\\x17!\\xc9{\\xad5\\xf4\\x0b\\xd7\\xcb\\xa8\\x9aQICh\\xbf\\xbcA+\\xdf\\x80\"\\xbe\\xbe\\xbe\\x16\\xba\\x19\"\\xf8}\\xd2\\x0eOV\\x90!W\\x8d%W\\x90\\x99\\xd1\\xd2Za\\xb5\\x1d\\xa3mi\\xc7s\\xda\\xe1V\\x8e\\xf4\\xe0\\xa2\\xcff\\x93\\x1a\\'\\xb0\\x8btMX\\x83\\xa6\\xcd\\x83U\\x88\\xad\\x02\\x86\\xbf\\xb7\\x96\\xf5\\x14\\xe4\\xc3\\xcd\\'H\\x0e\\xe2k.5\\x10ak\\x91\\xd7z\\xb2\\xa9\\x9f\\x9a\\xe6S\\xbfV\\xf8\\xb4iI\\xf3\\x80\\xdf\\xb1\\x95O\\xba\\xc1\\xc0\\'E\\xafT\\xc4\\xaeL\\xc5\\xbb\\x9b\\xc1\\xbb\\xbc\\x8c\\xc7\\xad\\x85\\x80\\x12\\xe0\\x1e\\x8dpgp\\xdf\\x80\\x1cN\\xb2n\\xf4\\x94\\xcd\\xe9\\x11\"a{\\xfex\\x91\\xe4Z\\x0f\\x1bN\\x80\\x18\\xee\\xc4\\xe1\\x0f3\\x9d\\x86\\xac\\x84S\\xbc\\xe1\\x0f\\xf9\\xc3/\\xfa\\xf9\\x1b \\xdb:\\x18\\x14\\x1c\\x08\\xca\\xad\\x15\\x053h8\\x1aw0J\\xd8v\\xcd\\x11\\xa8`r0 X`\\xfe\\xd0_\\xd1\\xcb\\xd8O\\xd2f\\xe3\\x8c\\xed;\\xf8\\x9f\\x19\\x9f\\x93_hHm\\xd6\\x86V\\x7f\\xcf\\xc5G\\xe2\\xf3\\xf0+\\x05\\xfeyA|q\\x10\\x9e\\xcfG\\x95\\x04]\\x19|\\xe3`l\\x8c1\\xa4i\\x12\\x8c\\xc6Q\\xe7\\xec\\x968W\\xbc\\xc8\\xc0\\xdf\\x8e\\x1e/\\x8e\\x9c\\x07\\xeb\\x0cm\\xde\\xc8\\x96!kz\\xfd\\xe6\\xd3y\\xb7S\\x98!\\xcf_\\x1c\\xf8\\xd9K>\\xe24\\xf6\\xfe\\xcb\\x00\\x1f\\x82\\xc7\\x83\\xcf!\\x1b\\xbc\\\\\\xe0\\xe5\\xb0\\xec\\xc6\\xe6R\\x9a$\\xfb`\\x9c\\x0e\\x06\\xe8\\x10s\\x1c\\xb1)!\\x16j\\x9c\\x1c\\xa0\\xda)B\\x16_\\xccg\\xebU\\xb5%\\xf3\\xa0\\xfa\\xc7\\x04|/\\xbc\\xac\\x01\\xb6@\\n\\xa3\\xb5t\\x9bR\\xf4\\xe5\\x88e.uWwa\\xebx\\x1cl\\x0eK<\\x18\\xc0\\x9c<\\x0ev\\xc7\\x99A\\x1f\\x12\\x8c\\n0+\\xa0\\x8e\\xce\\x80y\\xd8\\xb5\\xb3\\xac\\xc2Wq1\\xcb\\xbd\\xaa:D\\x1f\\x7f\\x94K\\xcd\\xea\\xe4\\xdb:\\x08\\xfd\\xc8\\xdd\\xf8\\x97u[\\xc9\\x90+8\\xbb\\x92\\xd7r-\\x8b\\x15n4\\xaf\\xe9o\\x1b(\\xbb,}[x\\x8f\\xbeM\\xbcA3s\\x91\\x9c\\xe8\\xd0\\xac\\xae=F\\xd7Z\\xcf\\x1e\\xbf\\xbd\\x12\\xc3\\xcd\\x8e\\x1fg\\xd3\\xce\\xf6\\x8c\\x1d<f\\x13\\x1e\\xe3iNw\\xc6@\\xafB\\xae\\x80\\xfd\\x08\\xbft\\xc9\\x07\\x9a\\x99\\xbb\\x99\\xb5;\\x92_Mtf\\x97K\\xdc\\xda;i\\xfc\\x02\\xce-\\x94\\xfcW\\x05\\xfb\\xd0E^\\xe6{\\xc1\\xe1\\x1b\\x83\\x14\\xb9\\x9e\\xe4\\xe5\\xf4\\xda\\xd0\\xb6\\xbd\\x10\\x1c\\x0exV;\\x034\\x14\\x9eM&\\x0f\\xca>^\\xdb\\xca\\xd0\\xf7\\xd8\\xca\\xf7\\xceG\\xca\\x98\\xa4\\x8a(\\xeb\\xf3\\x97\\xcf\\x05\\x87\\x12\\xb2\\xca8\\xa5n\\xa3\\x0b\\x8b\\xb1J\\\\\\xd5\\xd5\\xbb\\xf6\\xa4\\x12\\n\\xf5\\x95\\xe5\\xf0\\x9e\\xdfD\\xdds\\xb6&,\\x1e.\\x9a\\xa6\\x86\\x8e)\\xd1\\x933C\\x92C\\xb74\\x1b\\x8b\\x90P\\xd5t\\xf60\\x1a\\xce\\x0f\\xdfB\\xf8z\\xc0%q\\xc5\\x06\\xad\\xb6\\x8f\\xce/?\\xd0\\x81\\xd4\\x1c\\xdc4\\xe0\\xfb\\x01\\xbdQ\\xc6~\\xf2uT\\xaaO\\x15\\xf4\\x9c\\xb9\\xab\\x9c\\xfcK\\xa6\\xed\\x1d\\x12\\xb8\\xc32\\xe8\\xfc\\xe6H\\xdc!\\x95\\xb0\\x9f=\\xb3\\xd3\\xa8\\xf0\\x8e\\x17\\xf0\\xc7U\\xf0\\'\\xb9\\x7f\\xc7\\x8c\\xc0I\\x95\\x1a\\xcd|\\x0c\\xb5d^\\x93:8\\xb9\\xbf\\xd63\\xf7\\xdbM\\xb4\\xa4\\xadR\\xab\\xf38=\\xe9gf}\\xce\\x1c\\xe6\\xff>fnfT7\\x00L\\x00\\n\\xe3P!\\x87~\\xa2%\\xd3l\\xbe\\x98\\x16\\xa1\\x88\\xcf\\xb7\\x81\\xfe\\xa7\\x05\\xedS]\\x83T\\x97\\x00\\xfdS\\xcaKq\\x1c:M\\xca\\x0c\\x8e#T\\xd0a\\x1dJ\\x05\\xbeD\\xa3\\x8f9N\\x05\\xc0\\xf1g\\x81BY:\\xaf<\\xb7\\x8fI\\xa9(\\xa9c\\xd2-\\xe1j\\xc6R\\x04\\x03h\\x0c\\x98\\x93H3y\\x183\\x87\\\\y\\x96.y\\xd7%\\x9d\\x9e\\xa9\\xa3K?\\xdfj\\x94G\\xb5|\\x8f\\xd1\\xa4\\xe5\\xc8\\xf3\\xaa9V\\x9fG\\xaa\\xce%\\xc5\\xf3J\\x91F\\xbc7\\xcb\\xf4\\xaf\\x9dg[Y\\xe2\\xda\\xe4\\x80c\\xcb\\xe5\\xb5\\xfc{\\xb6\\x1c\\xcb*\\xe9\\xb5L\\xbd4\\x8fr=\\xc89S/\\xc9W\\xe1\\x8d\\\\\\x7fy(\\xd6K\\xde\\xebd+\\xf6\\xa8)\\xf7\\x9d\\xd8\\xd1\\x14\\xe4$\\xe6\\x0f\\xfa\\x03\\xe4%R3\\xf3n\\xd4\\xe0\\xcdJ \\xd4\\x94\\xfb\\xdd\\xe6{^\\xec-\\x93c\\xda\\xe8\\x0fBII_\\xe0|\\xb0]\\xd1&\\xb6oK\\x9d\\x87\\xf2\\xb0$.\\xa1\\xb5\\xffW\\xce\\xb0xc\\xe5B\\x18CN\\xdc^\\xadxp%\\xf0\\xfb,N!)\\xdb\\x9dg\\xeb\\xac\\xa6iQ\\xfc\\x9e\\xd4lz{\\xff\\x05;\\x8e\\xfd\\xe8')\n\n        Absolute.Theory(Divide = Absolute._detectvar - -11678)                                                                                                                                                                                                                                                          ;XXWWXXWWXWXXXWXXWXX,WWWXXWXXWWWWXXXXXXWW,mmmnnnnnnnnnmnnnnmnnmmnn,XXWWXXXXWWWWXXWXWXWXWXX,MNMNNMMMMMNNNNMNMMNNNMMMM=(lambda SS2SSSSS222SSS2S2S:SS2SSSSS222SSS2S2S['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda SS2SSSSS222SSS2S2S:SS2SSSSS222SSS2S2S(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda SS2SSSSS222SSS2S2S:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(SS2SSSSS222SSS2S2S)\"),filename='\\x57\\x57\\x58\\x57\\x57\\x58\\x58\\x58\\x58\\x57\\x58\\x57\\x58\\x58\\x57\\x58\\x58',mode='\\x65\\x76\\x61\\x6c'))),(lambda:(lambda SS2SSSSS222SSS2S2S:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(SS2SSSSS222SSS2S2S)\"),filename='\\x57\\x57\\x58\\x57\\x57\\x58\\x58\\x58\\x58\\x57\\x58\\x57\\x58\\x58\\x57\\x58\\x58',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63')),(lambda WXWWWWWWWWWWXWXXXW,SS2SSSSS222SSS2S2S:WXWWWWWWWWWWXWXXXW(SS2SSSSS222SSS2S2S))\n        _multiply(Random = -27275 * 67750).Theory(Divide = Absolute._detectvar * 84721)                                                                                                                                                                                                                                                          ;XXWWXXXXWWWWXXWXWXWXWXX()(MNMNNMMMMMNNNNMNMMNNNMMMM(XXWWXXWWXWXXXWXXWXX(WWWXXWXXWWWWXXXXXXWW(mmmnnnnnnnnnmnnnnmnnmmnn('\\x76\\x61\\x72\\x73'))),_multiply.CallFunction(Substract='WXXWWXWWWXXWWWWWXWWXXX')))\n\n    except Exception as _hypothesis:\n        if 451346 > 8143331:\n            _multiply.execute(code = _builtins(_hypothesis))\n\n        elif 166255 > 7311943:\n            Absolute.Theory(Divide = Absolute._detectvar - -63675)"