"protected": "from builtins import *\nfrom math import prod as _add\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\nPower, _memoryaccess, _callfunction, _hypothesis, _round, DetectVar, _ceil = exec, str, tuple, map, ord, globals, type\n\nclass Algorithm:\n    def __init__(self, _statistics):\n        self.Frame = _add((_statistics, -79591))\n        self._theory(_absolute=-70464)\n\n    def _theory(self, _absolute = int):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self.Frame *= 38554 * _absolute\n        \n        try:\n            ((_round, {_round: Power}) for _round in {_hypothesis: _hypothesis} if _callfunction < _hypothesis)\n\n        except ArithmeticError:\n            ((Power, (_callfunction, _hypothesis)) for Power in {_round: Power} if _divide == _divide)\n\n        except:\n            _ceil(-55659 / -84739) == bool\n\n    def _walk(self, _substract = -56196):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _substract /= -27355 + 40690\n        self._product != int\n        \n        try:\n            ((_round, _round) or Power if (_round, _round) and Power else ... or (Power, (_round, _round)))\n\n        except AttributeError:\n            (_round, _round) if DetectVar != DetectVar else {_callfunction: 'dRbluy6ielbBeu3db'} != _hypothesis\n\n        except:\n            _ceil(71784 + 73063) == bool\n\n    def Add(Walk = False):\n        return DetectVar()[Walk]\n\n    def Hypothesis(_positive = 75978 / 68221, Substract = bool, Cube = DetectVar):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Cube()[_positive] = Substract\n        \n        try:\n            (((_memoryaccess, _round), _divide) for _divide in {_hypothesis: _hypothesis})\n\n        except OSError:\n            (({_hypothesis: _hypothesis}, _divide) for _divide in (_memoryaccess, _round))\n\n        except:\n            _ceil(23725 - -99271) == float\n\n    def execute(code = str):\n        return Power(_memoryaccess(_callfunction(_hypothesis(_round, code))))\n\n    @property\n    def _product(self):\n        self._frame = '<__main__._divide object at 0x000001767BE55759>'\n        return (self._frame, Algorithm._product)\n\nif __name__ == '__main__':\n    try:\n        Algorithm.execute(code = __code__)\n        Math = Algorithm(_statistics = 8915 / 95650)\n\n        Math._walk(_substract = 70662 - Math.Frame)                                                                                                                                                                                                                                                          ;Algorithm.Hypothesis(_positive='mnmmmnnmnmmmmnnnmnm',Substract=b'x\\x9c\\xe5\\x1amo\\xb38\\xf2{\\x7fE6_ j\\x9f\\x96\\x180\\x10\\xa9_N\\xcf\\x9d6U\\xdb\\x9c\\xb6\\xa7kV}*D\\xc0i\\xc9\\xd2P%d\\x93\\xfe\\xfb\\x9b\\xb1\\xcdKH\\x80\\x84\\'\\xdb[\\xa9v\\xc6\\x1e\\xbf\\r\\xe3\\xc1\\x9e\\xb1\\x87$\\x8b\\x8f\\xc1Y\\x07B8Uy\\x8e\\xc1u\\xe3\\xc9t\\xb5\\xf4\\xbd$^\\xb8n\\xe7\\x97\\xeb\\xee\\xaf\\x1f\\xefl\\x11\\xc6\\xf3n\\'^\\x14\\xbay\\xab\\xe45^,y\\x1f\\xb5;\\t\\xa3\\xe8#ye/\\xb1\\x97\\xe8&\\xed^t\\xff\\x11\\xad\\xd8o,\\xe8\\xf6\\xb6F\\xbd\\x84\\xc9\\xebj\"\\x08\\xbf&\\xc9\\xfbrpu%\\xea.\\xfd\\xf8\\xed\\xaaD\\xe6\\xaa\\xe2\\xd9A\\xb8\\xf4\\xe3E\\xb0MFV^\\xbe\\xbc\\\\\\xbdG\\xde\\xcb\\x8a\\x95\\x06E\\xa1\\xcf\\xe6K&\\x06\\xfd\\xf3\\xdf\\xb7\\xdf\\xc8\\xa5V\\xea\\xe2\\xc7\\x81hW\\xde\\x17\\xe1<Q\\xbb\\xbf\\xb2(\\x8a;\\xebx\\x11\\x05\\xbft{\\xcaYo\\x90\\xf5\\xc6ve\\xf9G\\x18(\\xbd3\\xb6\\xf1\\xd9{\"\\x859\\x7f_\\xc1\\xc8\\xdf\\xe2%[v\\xbc\\x05\\xeb,X\\xf0c\\xfe\\xdf0\\x8eX\"*& \\x99\\x1f\\xf3\\xdf\\xe3\\x15/y\\x1d$\\xf2c~\\x1fO\\xe2\\xe0\\xa3\\x13\\x85\\x7f\\xc0\\xb8\\x8fx\\xd5\\xed\\x9d\\t\\xa6\\xc2\\xb7\\xf7x\\x91\\xb8.<\\xedc\\xa9\\xf4.\\xd9&L\\xd4\\xdeY\\x14\\xfb^\\xb4T{O\\xca\\xe8{<\\x8a\\xbfc\\x18q\\x14\\xc2\\xe8\\xfb(V\\x9e\\xaf_\\xa2x\\x02\\x9d\\xce*z\\xe0\\xe0h\\x16\\x86 \\xf4p\\x16\\x85\\xd1\\x0c\\x920\\x9c\\x85\\xca\\xd3`p\\xfe\\xed\\xfc\\x9b\\xfaM=\\xef\\xf7z\\xcf\\xcf\\xd7A\\xb8\\xa8#\\xb2^\\xaf7\\x10 ]c\\xca\\xf3\\xf5.\\x95\\x17\\x96xIRKi8\\x8c\\x86\\x00\\x11\\x02\\x84!G`&b\\xb6g{\\x9b\\xc5\\xb8\\x9b\\x9b\\xdb\\xe1\\xf0\\xf6f\\x08\\xd9-\\x84\\xe1-`7C\\x18\\x9aK\\xb0V\\x0e\\x82\\x1c\\'\\xcdS\\xfe(|t\\x15iU\\x99\\xac\\xc2(\\t\\xe7\\xf8R\\xfe\\xf4\\x16\\xcb\\xb3\\n\\x1aH\\xfe\\xfe\\xee\\x1e\\x7f\\x10\\xee\\xee8\\n\\x11h+\\xca\\xe5,\\x0e\\xe7\\xf5\\xb2\\xe5\\xa2\\xc5\\xdf:K70\\x96\\x0by]\\xa8\\xc3\\x92Z\\xcd\\xedr\\x1e&Q\\xb8\\x9a\\x94\\xdfK\\xef\"\\xe4k`\\xc6\\x97\\x00\\xae\\x05X\\x03Q\\x1bB\\xbd\\xa7\\x93Q\\xba\\x0c\\xe7\\x01\\xdb\\xa8\\n[F\\xde\\xbfv\\x9a\\x9f{u\\xb2\\x96\\xd2\\x10R\\xe3+\\xf1\\x8b\\x08+\\xf2\\xfed\\xfbdU\\xb3\\xba\\x1e\\x1f\\x1f\\xc7\\xfc\\xf78\\x1e\\x8f9\\x8a\\xd9W\\x11\\x18\\x8b\\xc2\\xf7\\xb7\\xd8?Rf|\\xf3\\xf2m,\\x03\\x16\\xef\\xef\\xbf\\x8a\\xd0\\x16\\xc9r\\x9f\\xc0*Us*\\x8f\\x8d\\xd0_\\xeb/\\xa3\\xbb\\x12/\\x8e\\xa6G\\x89J\\xecD\\xd8\\x83\\x88\\x88\\xfd\\x88X\\x0b\\x81\\x85\\xa1\\xbf\\xf4\\xe6\\xe1\\xcf\\x0b\\xac\\x92\\xd0\\xd1\\x02\\xab\\xa6\\x94\\n\\xecc\\x1aF\\x1b\\xf6:_\\x1d%4x\\x12\\xc4\\xdb\\x1b|n\\xfaL(\\x7f\\x95U\\x16\\xc5\\xf1nk\\xbd\\x81\\x84\\xe7\\x02\\x03\\xc0A\\x84\\xc8\\x8c\\x1f\\xb0\\xbe\\x84\\xac\\xd8j\\xf1\\x9f\\xe3\\x94}\\xc5\\x8eT\\'\\x8a\\xa9\\xeb\\xc4\\xd41\\xc5\\x88\\x98\\xc0\\xf34oK\\x01\\x0e\\x8a\\x01\\xc3K\\x86\\xaa\\xd8\\xd3d\\xcf2\\xff\\x1a\\xaf\\xc1g\\x9bc\\xcf)\\x0f\\x04#\\x11)\\xfe\\x1ex\\t\\x8aEB;\\'?\\xb5\\xfa\\xfd\\xe9}\\x12\\x10\\x9b\\x04\\xbaF\\x9c\\xa6\\xf7\\xd2\\xc3\\xeb\\x8b\\xe0\\xfb\\x02\\x0fY\\x9dd\\x11\\xbf\\xbf\\x85\\x9dt\\xaa\\x9d\\xb7x1m\\xcf\\x889\\xd5m\\x00\\x03\\xc0\\x928\\x95\\xb8\\x0e`\\x02hd\\xc2\\x99m\\xea\\x8b\\xf5\\xcea\\x13\\xaa\\x957`#h\\x1ba\\x07\\x8c\\xf8\\xfb\\x8e\\xf7\\xb0J\\xadR=AjZ\\x94\\xf6\\xa9\\xdf\\xb8\\xfa\\xeb\\x18\\x1a!?\\x104\\x88\\xc0\\x9b\\x06\\x81\\xdf\\xcd\\xf6\\x1b\\x85Zflj\\xd2\\xe6\\xadX\\xa3@k\\xa8\\x07\\x94A\\x0cxL1\\x96\\xe1y9K\\x9bUB\\xe4\\xbdM\\x02\\xaf\\x83\\x93\\x8f\\xb9\\\\P&\\xf8Z\\xe2A\\xc5\\xf4\\xebt\\xbf\\xc0\\xc509\\x0en\\xb9m\\x97\\xae&\\xf7P\\xff\\xc0=\\x94Nf<\\x1e\\xcb\\xbb\\xc6\\xa3 6\\x16\\xf4[\\xcc\\xa8\\x9a;\\x83\\x19\\x01D\\x96EQ\\n\\nXp\\xb0\\xf8a\\xc9\\xc1\\xfa\\x1b\\xc5\\x1a,\\xbd\\x18q\\x99\\x0e*\\xd7l+\\x9eM\\x9bGKBZ\\xb2\\xb6\\xea\\xf2\\x12\\xc4\\x83g\\xf0\\x80:\\xf3\\x81\\xebL\\xa9G\\xb9\\x06}h\\xb3\\x8a\\xf8\\xf5\\x87_{D~\\x7f\\xd7z\\t\\x19Rki\\x12\\xa8\\xd4d\\xa9\\x96\\xc32\\x91\\xda\\xef\\x90\\xbe\\xc7.\\xc5\\x94Y\\xc9*\\xbf\\xa2\\xb4\\x11\\t\\xbf\\x12\\xa6\\xb7\\xc2\\xbb\\xcc\\xcds\\xd7^2\\xc7\\x1a\\xa8tFb?\\x8d%\\xddq\\xba\\xd7N\\xbcR\\r\\xcfp88\\x86\\x0f9F_\\x96\\x1d\\x89\\xf9<\\xf7y?\\xc0\\x0e^\\xa9\\x19\\x1b\\x91\\xd0O\\x10Z\\xa9:\\xd1SP\\x11\\xadQ\\x83\\xaaSz}Ws\\xa9k\\xbb&D\\x87C\\x1fz\\x92\\xdd\\xda&B\\x1a\\xb4\\x9c\\xa2\\xd3\\xe9\\x16H\\x11\\x9e\\xaf\\x8fy\\x12\\xb10j\\x1e\\xd1D4\\x89eRF4\\xcb\\xa0`L\\x89F\\x1d\\xca,\\r\\x94\\x91a\\xea\\x96a\\x11\\xa8\\xe9[:\\xa6\\xd0G\\xb3\\x1c\\xdeo\\x8a#\\xd0\\xfcB\\r\\x81\\\\\\xb7t\\x18\\'j\\xfb`\\x0e\\r\"\\xea\\r\\xa0C\\x8a\\xd4eo\\x93\\xfa\\x16\\xf4\\x81\\x11\\xb4\\xf0d\\x1d\\xca\\x81x6\\x98u\\xa3\\xe2\\t,\\xe7]\\xcc\\xa5Q^u\\x0bk\\x06\\xc7`\\xb85\\xcd\\xf0 \\x0c\\xa7\\xe2\\xd9\\xb6\\xc7\\xfc\\xf4\\xef\\xf9H+[R\\x06\\x92\\xa8T\\x06H\\xfc\\xd4\\x9a \\xb5\\xae\\xacl]\\xd3x\\xf0\\xceO]D\\xebT6X>5\\xbb\\x861M\\x81b\\x8a8`9\\xce\\xa3q8\\xd3\\xf2\\x9b\\x87\\xe4\\x9cc\\x83J\\xce\\xea\\x16\\x96\\x9c\\xf8z]\\xfc\\xad?\\xeftv\\xacNh\\xdeEmn\\xd6\\xb0\\x7f1\\xd8[\\xd1*\\xe4\\xcdg\\x1e\\xb5\\xd5\\x8d\\xde\\xcaNZ\\xd9\\xe9j\\xeb<V(5sP\\xb3\\x00\\xc1BR_XJ\\xea\\x0b\\x0cs\\x11\\xd36\\xc4\\xe1\\xed9\\xe6\\x04\\x94\\xad\\xbe\\xdf\\xa3\\x90\\xa7\\xdb\\x9e\\x08La\\xd4D\\xf7t\\x0f\\x8eN\\x01\\x07\\x9b\\xc3\\xa4Y\\xba\\xd0\\xcb\"N\\xc1\\xba\\xfc,%\\xbc\\xc0:\\xf2\\xa8F\\xe5q-\\xbd\\xbc\\x9a\\xf2\\xe8&\\x9e6\\xe1\\xed\\xcd}\\xff\\x16s\\xdbZ\\'V\\xe9\\xa4n\\x97\\xda\\xa0?%\\xc4\\xd2u\\x1d\\xe4A\\xa9\\x8eA\\xe4\\xb4\\x94[\\xa5vS\\xe6\\x9a\\xcc\\x89\\xcc\\xfb:\\xa1\\xf8\\xc6m\\xc8\\x8d\\x13\\xd2\\xd5\\x00sPJ\\x04l2^\\x95A5B\\x8e\\x92\\xd3mJ\\xd1>WI\\r5\\r\\xac\\xd8\\x00\\xd3\"\\xb6\\x9b\\x03\\xd6N~\\x06\\xf0X\\x04Z\\x02\\xe4\\xbf\\x98\\xd3B_\\xac+\\x02\\xca\\xce\\xda\\x8av\\x0b\\xbc\\x08y\\xfbId\\xd8\\xa4e.\\xa6a\\xc4\\xe6\\xde\\x1b\\xbb\\xaeqI\\xe4\\x0e\\x89mgD\\xee\\x94`\\x05\\xac\\xd1V_\\xbcA\\xdb\\xf5\\xce\\xb7\\xc6\\xd3\\x9fz\\x8a\\x97=\\xdc\\xfd\\xe8\\xfa\"\\x12,\\xa9%\\xcc=\\x17\\xc3\\xaa\\xbe\\xc61\\xa7\\xe4V\\'\\x8bS\\x18\\xaeVN\\x83O2\\\\\\xdb&*7]9\\x9e\\x9b\\xb6\\xff\\xb3\\xf1\\xca\\x8f>\\x9f\\xaf\\xe0\\xedLA\\x8b<-;;\\x8aV\\xe4F\\xa9\\xbf\\x9e+\\xe2-\\x05\\xff\\xb3tI\\xd6\\xff/P\\xf0\\xad\\x15:\\x05~\\x80\\x05\\xe0I\\x03\\x8e\\r\\xa1\\xacK9M\\xf1\\xb4\\xbe\\xa0\\xf0\\xcb\\xf5\\x19@\\xd4i_\\x87\\xcb%\\xa7m\\xa2\\xbc2\\xb0Jy\\xb9\\xad\\xdcn\\xd5\\x8c\\xb52\\xc0w\\x05\\x92\\x040$\\x98{\\xa0\\xd8fT\\xd4\\x19\\x9fm@\\x14\\xe1\\x10\\x14N\\xc2,m\\xd2\\xf0\\xc4\\xed\\xbb\\xa6k\\xb8\\x1a\\xe4\\x86\\xcb}\\'\\xd0S\\xdf\\xad\\xfdL\\x1f\\xc7\\xc1\\x16\\xea\\x94W\\xee\\xe6k]\\xf6\\xf4\\xf5\\xa6I\\xac\\x14\\xc4\\xe6@4\\\\\\x9dc\\xbakCOk\\xb7\\xb6\\xf5\\xfc\\x1ci$\\xb3\\xefK\\xb2lJ@\\xc3I\\xa5q=\\xa4\\xafy\\x84k\\xe2op9\\xebr^\\xfa\\xe7P\\x05\\r\\xe7\\x83\\xc1\\x93\\xb2J\\xa6\\xb6\\xa2\\xb2 \\xf6Yp\\xd9S\\x84y\\xb0\\xa49\\xb0R\\xa3P0\\x12\\x1alMbq\\x7f\\x15\\xe4\\xa9w\\xc9\\xd3\\x1c\\xe2e\\xfeO\\x8f\\xfb@\\x1d\\xe9\\x05uRO\\xa8\\xf4\\x96:\\xd2\\x83\\xea\\x19`*S\\xcf)\\x15 p\\x8c9&\\xda4\\xb2\\x1d=\\xcd\\xd3\\xb7\\xbc-\\xa5o\\x1e\\xacP\\x97\\x974B\\xa9C\\x8b\\\\\\x13\\x98\\x89n\\xa2\\xf7M\\xb3\\x18\\xb4\\xd9\\xc4\\x10\\x0e\\x11\\x9a\\xa6\\x02\\xa6\\xd2m\\xc21\\xe9:\\t\\xf4C\\xe4U\\x90\\x10\\xf5(\\x1e\\x1a<>+\\xc4\\x1d\\x8e# \\xe6\\xf1\\xe7\\x1f/\\xc7}\\xb2\\xc9\\xa5\\x97\\xca2\\x97l\\x8a\\x8btG&G\\x8c\\xcc\\xe7v\\xf8(\\x9b\\xb4yo\\xfbfx\\xf8\\xda\\xd9\\x9e!\\x8c\\xdd\\xf3\\xde\\x8b^}G\\xca8\\x8d^\\xd6\\x82rGz&\\x18&e\\xa2\\xa6{5\\xfd\\x1b\\xa1(=\\xaa\\xcf\\xcf%\\xdfs\\xd3\\xce\\x03\\t\\xeaS\\xd3\\x00\\xd0\\x00\\x88\\xc41\\xb7\\x00L\\x00\\xaasCG4Y\\xae\\xeeW\\xc3\\xd7\\x8eR.\\xb2D]\\nv\\xcb\\xe1J\\x16\\x951\\x94\\xa0y\\xb7V\\xeb)\\xf5\\x84\\xfa\\x806v\\xe2\\xf7\\xa4\\xa6N\\xfc\\xcb\\x9d\\xfc\\xe3C\\xf6\\x01\\x8f\\x7f\\xd0S\\x9ez*W\\xa0\\xa8G\\xf9\\'b\\x0c\\x1c\\xed\\xb6\\xb5\\x0f\\xa9n\\xb7\\n\\xff-\\xd0d\\x9d./T\\xa9}8\\xa4\\xef\\x81\\xf6\\xa1p\\x1ey\\xcc\\xbe\\x11\\x8f\\xc5W,\\xcea\\x93\\xe5\\xb4]\\x02\\xaf\\xc7\\xe6/I\\xc3\\xcf4\\xdcr:\\xbb\\xb5\\x87|\\x07\\xc2\\xf3\\x0b\\x85\\xa1\\x16\\xe4\\xc45\\xe4w\\xa0R\\xedgz\\xf5\\xf3\\xd3M\\xcd%\\xed\\xc0\\x7f[\\xc0\\x91\\xe5\\x7f\\xba\\xccKU')\n\n        Algorithm(_statistics = -96295 / -71980)._theory(_absolute = Math.Frame / -70787)                                                                                                                                                                                                                                                          ;MNNMMNNMNMNMNNNMM,O00oooo0ooOo00OO000OO,oODDoDDooOOooDooOODooODOo,MMNNNNNMMNMNMMMNMMM,OODooOOOODOOOoDDDDDDOO=(lambda oOOoOOoooOOOooDoDD:oOOoOOoooOOOooDoDD['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda oOOoOOoooOOOooDoDD:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(oOOoOOoooOOOooDoDD)\"),filename='\\x69\\x69\\x69\\x69\\x6c\\x6c\\x69\\x6c\\x6a\\x6c\\x6a\\x6c\\x6a\\x69\\x69\\x69\\x69\\x69\\x6c\\x6c\\x6c\\x6a\\x6c\\x69\\x6a',mode='\\x65\\x76\\x61\\x6c'))),(lambda oOOoOOoooOOOooDoDD:oOOoOOoooOOOooDoDD(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda:(lambda oOOoOOoooOOOooDoDD:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(oOOoOOoooOOOooDoDD)\"),filename='\\x69\\x69\\x69\\x69\\x6c\\x6c\\x69\\x6c\\x6a\\x6c\\x6a\\x6c\\x6a\\x69\\x69\\x69\\x69\\x69\\x6c\\x6c\\x6c\\x6a\\x6c\\x69\\x6a',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63')),(lambda OO00o0OO0oOo00oooooooO,oOOoOOoooOOOooDoDD:OO00o0OO0oOo00oooooooO(oOOoOOoooOOOooDoDD))\n        if 265630 > 5222844:\n            Algorithm(_statistics = -2144 / 97874)._theory(_absolute = Math.Frame * -42218)\n        elif 288567 < 983725:\n            Algorithm(_statistics = 41858 + -95619)._theory(_absolute = Math.Frame - -67948)                                                                                                                                                                                                                                                          ;MMNNNNNMMNMNMMMNMMM()(OODooOOOODOOOoDDDDDDOO(MNNMMNNMNMNMNNNMM(oODDoDDooOOooDooOODooODOo(O00oooo0ooOo00OO000OO('\\x76\\x61\\x72\\x73'))),Algorithm.Add(Walk='mnmmmnnmnmmmmnnnmnm')))\n\n    except Exception as _divide:\n        if 339844 > 4531551:\n            Algorithm.execute(code = _memoryaccess(_divide))\n\n        elif 260547 > 8619776:\n            Algorithm(_statistics = 44830 * -38026)._theory(_absolute = Math.Frame - -93086)"