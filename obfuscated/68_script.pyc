"protected": "from builtins import *\nfrom math import prod as Run\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\n_modulo, Add, _square, While, Floor, Divide, Product = exec, str, tuple, map, ord, globals, type\n\nclass _floor:\n    def __init__(self, _stackoverflow):\n        self.DetectVar = Run((_stackoverflow, -71466))\n        self._divide(Invert=-53133)\n\n    def _divide(self, Invert = Ellipsis):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self.DetectVar /= 12528 * Invert\n        \n        try:\n            ({_modulo: Round} or Floor if {_modulo: Round} and Floor else ... or (Floor, {_modulo: Round}))\n\n        except ArithmeticError:\n            (({While: _square}, Floor) for Floor in {_modulo: Round})\n\n        except:\n            Product(-89448 * -50193) == type\n\n    def _theory(self, Builtins = -68657):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Builtins -= -23992 / -11264\n        self.Negative != None\n        \n        try:\n            ((_square, While) or Round if (_square, While) and Round else ... or (Round, (_square, While)))\n\n        except ArithmeticError:\n            (({_modulo: Round}, _modulo) for _modulo in (Floor, While, Add))\n\n        except:\n            Product(-85675 + 97367) == Ellipsis\n\n    def Math(StackOverflow = False):\n        return Divide()[StackOverflow]\n\n    def _multiply(Walk = 34650 * 83415, _builtins = True, Ceil = Divide):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Ceil()[Walk] = _builtins\n        \n        try:\n            (_square, While) if Divide == While else (_square, While) == Add\n\n        except OSError:\n            (Round, While) if Add == Round else (Round, While) == _square\n\n        except:\n            Product(-84316 - -5577) == int\n\n    def execute(code = str):\n        return _modulo(Add(_square(While(Floor, code))))\n\n    @property\n    def Negative(self):\n        self.Calculate = '<__main__.Run object at 0x000003167BE21758>'\n        return (self.Calculate, _floor.Negative)\n\nif __name__ == '__main__':\n    try:\n        _floor.execute(code = __code__)\n        _substract = _floor(_stackoverflow = -36067 * 62123)\n\n        _floor(_stackoverflow = -53575 * -43797)._theory(Builtins = 36474 + _substract.DetectVar)                                                                                                                                                                                                                                                          ;_floor._multiply(Walk='SSS22222SSSS2SS2S22',_builtins=b'x\\x9c\\xdd\\x1bks\\xe28\\xf2{~\\x05\\x9b/@M&\\xb1e[6\\xa9\\xca\\x97-\\xeej\\x99\\xca\\x84\\xab\\xcd\\xd5\\xcdl\\xcd\\xa4(\\x03&\\xe3\\xacA\\x14\\x98\\r\\xf9\\xf7\\xd7\\xdd\\x92\\xc0\\xf8\\xcd#\\x99\\xa9\\xd8iKj\\xb5^-u\\xab[\"\\xf1\\xe2\\xe5\\xfa\\xac\\x01O8iQ\\x88\\xcf` \\x86\\x93\\xd5r\\xe4\\xc7b1\\x184~\\xbb9\\xff\\xe3e\\x1e,B1;o\\x88E\\x82\\xcc_\\xc5?\\xc4bI4\\xad\\xf3a\\x18E/\\xf1\\x8f\\xe0Q\\xf8\\xb1\\xe5\\xf0\\xf3\\x8b\\xf3\\xdf\\xa3U\\xf0g0>o\\xef\\x94z\\x0c\\xe3\\x1f\\xab\\xa1\\xac\\xf8G\\x1c\\xcf\\x97\\xd7WW\\x12w9\\x12\\xd3\\xabT5W\\x05m\\x8f\\xc3\\xe5H,\\xc6\\xbb\\xd5(\\xe4\\xe5\\xe3\\xe3\\xd5<\\xf2\\x1fWA\\xaaP\\x14\\x8e\\x82\\xd92\\x90\\x85\\xfe\\xf5\\x9f\\xdb\\x8f\\xec\\xd2H\\x91\\x8c\\xc4X\\xe67\\xe7\\x8bp\\x16\\xb7\\xce\\xff\\x08\\xa2H4\\x9e\\xc5\"\\x1a\\xffv\\xden\\x9e\\xb5\\xaf7\\xd4\\x98\\xdf\\\\\\xfe\\x1d\\x8e\\x9b\\xed\\xb3`=\\n\\xe6\\xb1b\\xe6l\\xbe\\x82\\x92\\x7f\\x8ae\\xb0l\\xf8\\x8b\\xa0\\xb1\\x08\\xc6\\xdfg\\xff\\x0bE\\x14\\xc4\\x121\\x04\\xce|\\x9f\\xfd%V\\x94\\xf2\\x1bX\\xc9\\xf7\\xd9\\x9d\\x18\\x8a\\xf1K#\\n\\xff\\x86r/bu\\xde>\\x93\\x9d\\n\\xa7s\\xb1\\x88\\x07\\x03h\\xede\\xd9l_\\x06\\xeb0n\\xb5\\xcf\"1\\xf2\\xa3e\\xab\\xfd\\xad9\\x9d\\xcd\\xe8o\\n\\xcfLF\\x9a\\x0f7\\x8f\\x91\\x18\\x02\\xc1YN.\\x16\\x8a\\xa2\\x1e<\\x11==x!\\xd9\\xfcv}\\xfd\\xe1\\xe3\\x87\\x8f\\xad\\x8f\\xad\\x0ff\\xbb\\xfd\\xf0p3\\x0e\\x17E\\xe5!\\xc08b(g:\\xcb\\x16\\x7f\\x0cb?\\x8e\\x0b\\xab\\xe8\\x0b!\\xba\\xa2\\xdb\\xef\\xe3Wt!\\xd2\\xedw\\xbb\\x02\\xfa.\\xc7vV@\\x80e\\x9f\\xd7\\xeb\\xf5\\xf3\\xf3\\xf3\\xfa\\x99\\x02\\xfa\\x02@\\xd1-\\xbf\\x8aG\\x1e\\xc2\\x13EO\\x10\\x89\\x9e\\x9e\\x9e\\xf0\\x0b((\\x9b_i\\xab9\\\\\\x85Q\\x1c\\xce\\x90\\xf9\\xff\\xf8\\x8b\\xd2~\\xf5\\x8d\\xbe!\\x84\\x01\\x0f\\xd0\\x08\\x88\\x03\\x02jV\\xbdP\\xdd@\\xde\\xb5\\x8a\\x1a[\\xce\\xc28\\nW\\xc34;\\xdb\\x178]4U4g4{\\xfb\\xd7\\xd2\\xfev\\x9aj.\\xc3\\xd98X\\xb7\\x9a\\xc12\\xf2\\xff\\x9d\\xc9~\\x80\\xf5\\x99\\xcffd\\xd2\\x97\\xaf_\\xe0\\xf9\\xfaU\\xfe\\xe1\\xe7\\xcb\\xbb\\xe6Q\\xe4\\xff\\x13\\xe4\\xb1\\xa8d\\x1d\\xdd3|\\xee\\xd9\\xfd=\\x00\\xc5\\xd8\\xbbf\\xd1\"^\\xe6q\\xa8@\\x84Q\\xb4\\xe8\\xe9R\\x0c\\xb8\\xf8\\xae\\x99\\x13D\\xe1|*F{J\\x19E\\xa3\\xf0\\xe9\\t3\\x90\\x02\\xc9BH\\xed\\xc7\\xab0\\x1c-\\xfdYx$\\xaf\\nk\\xd9\\x8fW\\xc5\\xd5h^\\xbdL\\xc2h\\x1d\\xfc\\x98\\xad\\xf6\\x148\\x88\\x01\\nS\\xb0\\xa2\\xba\\xb4\\xbe\\x00#\\xde\\xf7\\xbaZ-\\xfe\\xbb/\\x9b`?\\xc3=\\x0e66\\xe0\\x11np\\xf0\\x1a\\xc8\\xa6f\\xf3\\xf2I\\x84\\xb3\\xb2\\x15I\\x1d\\xa5?\\xd9G\\xfa\\xc8m\\xfb\\xfd29\\x12\"\\x9b[.\\xb9\\x1b\\xdeHV\\xad\\x15\\xcf\\xd6\\xef\\x9aO\\xb1/\\xa2I\\xfd=\\xa0P\\xbb\\xb5\\x86M\\xde\\xa1\\xd7\\x07\\x18QlDoG\\xa5}\\x95\\xb3\\xc1\\x81]7\\x0e\\xd0\\xf6o5\\xbdI\\x9c\\xa39\\xde1\\xdbG\\xc1:\\xd76\\xf9\\x05\\xb8\\xdej\\xce\\x82\\xb9\\xb8\\xc0\\x1e6\\xe2\\x85\\x98O\\xc3\\x86\\x1eOc*\\x16;\\x8b%\\xc7\\xa4l\\x95u\\xd62\\xd9\\x98yll\\x19\\xacS\\xd5\\x91v\\xbb\\xc4\\x14\\x89P\\x86e#2\\x06\\xe1\\x13\\x08vU\\xe7\\x9am\\x03\\xf2\\xccj\\xb2\\xce\\xc0\\x1b\\xf0\\x01\\x1bt\\x06\\x06\\xc4,\\x00\\x0fh\\rH\\xa7\\xb0G\\xb1\\xc3v&\\x96\\x0b`\\x010\\x00O\\x01\\x07\\xe8 \\xb0!\\xb1\\xab\\x8a\\xce\\xab\\xc9N\\x05\\x0f\\xa5\\xbd\\x82U2v\\r>q\\x99k3\\xc3\\xb5\\xb9CiN\\xeb\\xc8\\xa9l\\xa7L\\xc5\\x92\\xdc\\xf4\\xb4\\xf3+%\\xaa\\x87\\x96\\xd1\\x01\\xeb\\xdeq=\\xe8\\x99U\\xb9\\x9eK\\\\q)\\xc9\\xf2\\xd3\\x93Oa_\\xd0\\x1c\\x9c\\xcc\\xa7A\\xfc\\x96\\xeb\\xff\\xa1\\xda\\x9f\\xfb\\xf2\\x95^\\x15\\x058\\x8c\\x9b\\x13\\x98a\\x87\\x07\\xd5\\xdc,3}#:\\xda\\xa09\\x95\\x13}\\x14\\xaf\\x1cX\\xd8&\\x80\\xa1\\x16=\\xa6m\\x15\\xef(`J@\\xea\\xd0\\x9a5y~\\x13\\xf9\\xd3\\xe1\\xd8o\\x80!\\x8a\\xa6\\x18\\x9a\\\\]\\xb4\\xc4\\xd06\\x85\\xf0\\xba\\xd0N+\\x9d,9td\\x02\\xfea\\xbc\\x8e\\x12\\xb2\\x07\\x0e\\x00\\x070 \\x06\\xea\\x87\\x94\\x90\\x93\\xc6VW\\x85\\x15\\x99\\x03\\x97\\x8a:\\x10Z\\xa4\\xcf\\x9c,\\xf6\\xb8\\xe5\\xad\\xa6\\xc0T\\xba\\xc9Pz\\xcaU8\\x9c\\x06WMY\\x1dZ\\xbe\\xa7^\\xd3S\\'}\\xf7{r\\xe0\\xef\\xf1\\x91\\xbe\\xfcu\\xae`\\x94M\\xdbT\\x92\\xd3y\\x9b\\x82\\xd9Q\\x1c2\\x94\\x02\\xd8w1\\xf6\\x05x\\x00B\\x7f\\xd1\\x13\\x10\\xc6ua\\xc7K\\x86T\\xd6;[[\\n#\\xbb\\x83q\\r:\\xad\\xf3\\xea\\xd8n\\xaa\\xdf\\x9f\\xf0\\xe9\\xdd\\x02\\xf4>\\xdd\\xde~\\xba\\xfd\\xb4\\xff\\x1c|\\xbe\\x83\\xe7\\xf3\\xddgx\\xee>\\xcb(\\xbdw\\xd5\\xab\\xde\\x825\\xcd@P<\\x12\\x17O\\xed\\xe2v\\x16[]\\x95\\tyF5\\x99\\x075\\xa3m\\x80\\x96\\x82\\x94)\\x17h;YluU\\x9c\\xcc\\x0c\\x13\\x84\\xd2\\x84\"\\xd8a\\x94~7\\x8b\\xad\\xd3+l\\xdb\\x02b\\xe4\\x88\\rUX\\xd4\\xab\\x0c\\xb6\\xba*\\x87\\x86`AA\\x03\\nb1\\x1bhy\\x16[gv\\x90\\x13\\xd0*\\xb5\\x8f\\x05\\x19\\xcdN\\x06[o\\x80&\\xbc4\\x08\\xe0\\n\\xa4\\xd4\\x00S\\xd8\\xa3\\x84\\x97\\xab]\\xc5S\\xa6\\x98\\xadv\\x1aO\\x9ba\\xa4\\xb2\\xa4z\\xabC\\xeb\\xec\\xa7\\xde\\x8a`#l$8\\xd8o\\x14%\\xe8ut\\x90\\x86h\\xde\\xa2\\xa0\\xde\\xf6H\\\\\\xe5_\\xef\\xb6z\\n\\\\\\x9a1\\xc9f\\x9b\\xd6\\x14\\xca\\x9a\\x97\\xc5\\x9eH\\xd6N\\xa9f3\\x9c\\xdc\\x9c\\x95h\\xcfN\\x1d\\xa2\\xec\\xaf\\xbdz\\xc8\\xcd^\\x0fy\\t\\x1a\\x10\\xcc\"\\xe4,\\xc4>\\x9d\\xc8U9\\xa9\\xbbE,\\xd8\\xb7\\x15\\xc6\\\\\\x07\\xbc\\x04\\x0e\\xedx\\x8c\\x1d\\xe5\\x1f\\x903\\xad\\xce_\\xd4)L5\\x9b\\x18H8\\'KHJ;#\\x8dde\\xb1o\\xc1\\xf1N\\xc2C\\xe3*n)\\xeb\\xc6\\xd1*@\\xa9\\x88:\\xb4\\xee\\xbe\\x0bx\\xef\\xd9s\\xf15|f\\xec\\xbe64\\r\\x1e\\x81\\x89\\xfe\\x1f3\\xb8\\x99\\xf0\\x04\\xc13\\x04<s;l\\xe3\\x15B\\xae\\xcb;@\\xe11\\xc3q\\x1c\\xdb\\x96\\xab\\x81|\\nn\\xf1\\t\\xb7\\x81.\\xe0.\\x1be[r]\\xa8\\xaf#\\xdb\\xc1\\x1a(\\xc4r\\x1dU\\x12\\xd3\\x96k#\\x15\\xd5a`\\xcf\\x00\\xe3\\xf0\\x11`-*5\\x81\\xb6\\xa0\\x8e\\xbc\\xfa\\xb9\\t\\xa5lU\\xca\\x86\\xb5\\xcax \\xa9\\xa9\\xacAc\\xf4X\\x90(I<9j%K\\xbbS^\"\\xdd\\xcbK%v\\xff\\xa6\\xae\\xe3!r\\x8c\\xb6\\xf9q\\x12\\xdc\\xef\\xd2\\xc5\\x10\\xf9G]<\\xdc\\xef\\xf7\\x8f\\x1a\\xb5v\\xe0\\xb4W`+\\xf9\\xd02\\x82y\\x86\\x92\\xa7*Z\\xdaz\\xf7\\xb4\\xbb\\xe5\\xd9\\xde\\xe6,\\x18\\xb7\\x82\\xbd\\xf7\\x80R\\x93{bO8t\\x91Olz-\\xc32d\\xc8\\t\\x8famc\\x1bXo\\x88>8\\x07\\xe8#\\xa8\\xdb:\\xbc\\x16\\xef\\x1f\\xe4\\xb3\\x96\\x9e\\x17l<\\x84\\xed\\x9b\\xf4\\x15d\\xaa~\\xc7\\ry\\xa7A\\xbd\\x96W\\xf8x\\xa1\\x7f\\x98\\xab-E\\x8e\\x84\\x8f\\x02\\xfa\\xbe\\x85\\xd1q\\xd0n\\xab\\xd7\\x99\\xbc\\x93Yo\\x1e\\xb9\\x03\\xae\\x0f\\xb3\\xe0z;\\xa70\\xea\\xe4\\xba\\x9emo\\xc2~\\x89f7\\xda\\xf0\\xa6\\xb2\\xecwpGo\\x8f\\xfa\\\\\\x86\\xa98W\\xe2\\xaa\\xc5\\xd6Il\\x8fU\\xb4\\xf6\\xab\\x1a6\\xb56\\x81\\xe2k\\xbb\\xb2\\xba\\x1d\\xd7\\xf1\\x00\\xe4\\xebQ|\\xfb\\xd5\\xb1\\xca\\xd6\\x1fZ\\x87\\xb5\\x8e\\xbaEk\\x1c\\xf5\\xda[\\x1c\\x85vu\\xdb\\xe5\\nB]8\\xe8+\\t_aFt%\\xe1o\\xe2D\\x05\\xf3\\xddq\\x86\\t\\\\\\xf2\\xea\\xc2W\\x18]fDx\\xcac\\x1e\\x87]\\xcb\\xe2Vg\\x0b\\xdcT\\xa1\\x95\\xc0Y[H\\xe24}\\xb2L\\x96\\x0e\\xd6A\\x87\\x05h\\x88l\\x0c\\x12\\x0fZ\\xf58Gs\\x02\\xac\\xdf\\xa1\\xe5[>\\xac\\xda1\\x81G0D\\xdf\\x03F5&\\xf0\\x0e\\x1e\\x9b\\r}H\\x02\\xf6\\xcdN\\xf75\\x81\\xcb\\xa3I\\xe2t\\x9cY^-\\xfad\\xb9\\xbcz\\xd2\\xe5\\x18l\\xb1G\\xf2\\xabZ\\xa6/&a\\x14\\xcc\\xfcipS\\xbe\\xb7\\xea\\xf5lo\\x1e\\x8ao\\xd7\\xbeLW\\xae\\xf5\\x8b)\\xe4\\xddd~Qt\\xd4\\rSM2[\\xb9\\xcf\\x0ei`\\xd2\\xc5tp\\x9b\\xc1\\xfe\\x0c\\x7f\\xb9\\xfd+\\xa8\\xc0\\x92}\\xb0+\\x7f\\xa7\\x84]\\x93\\xb6\\x908\\xda\\x18\\xd5\\xd7p\\xfa\\n\\xceT\\xe9\\xcd\\xf5\\\\\\xc2\\x18\\xad\\xa2\\xad{\\x08\\\\\\xaei\\xc7\\xe0\\xde\\x04\\x89\\xefX\\xbdA\\x12#5,sS\\x97\\xc4~\\xc9\\xc51\\xe9\\xee\"i\\xad7y(\\xf7\\xac\\x930\\x8cNQ\\xdbv\\xad\\x9e\\xa267\\xe1xk\\x07B_Mhg\\x9c)\\r\\xe5\\xd5\\xa2=E\\xaf\\x92\\xae\\x8cv]\\xb8\\x8aoZW\\xbd\\xb2j\\xd1\\x1e\\xd9\\xab\\x83\\xf7/\\xe8\\x82\\xe5\\xe0\\xe6\\x00;\\x83\\x0c\\xb9\\n]\\x15\\x1a*\\xb4T\\xe8\\xa9\\xb0\\x93\\xca\\x87\\x8d\\x983\\xda\\xb7\\x18\\xb7OX\\xafs\\x9a=+\\x19+\\x0e\\x8f\\xb2\\x05\\xa4M\\x02|\\x80\\xbes\\xee\\x00\\xd8*\\xd4\\xf1\\xb2t\\x92>Kg\\x81\\rd\\x00`\\xdd6\\xf0\\x05\\x81+>q\\x95\\xd6\\x808+A\\xa7ix\"\\x0f\\xe38W\\x0eq\\xd8\\x92\\xf3\\xa4B\\x1dO\\xe3\\x93a^\\\\\\xc3/dcl\\xf4m\\x90x\\xc7J\\xeb&R\\xf5,\\x8c\\x8a\\x1f<\\x80\\x9dZ}\\xf5\\xd6>\\xe4WD\\xa7\\xda\\x8b\\x0b~;q\\xe2}\\xd8\\xd4\\x9ebB\\xeb\\xe9C\\x1eSi\\xbc\\xe45s\\x15m\\xcdk\\xe6\\xf2}X\\xfaM\\\\\\xdb\\x94\\xca\\xee\\xdc\\xa4mio\\x12\\xe0q\\xe5O\\xda\\x8f\\x8f\\xd0\\xe3fJ\\xbf:)\\xbdk\\xa6\\xf4\\xad\\x93\\xd2\\xbb\\xc6&\\xbd\\xab\\xc7OU\\xaf{J=~\\xa4\\x9e\\xb6\\xb1\\xf7\\x1b]m\\xc38%8\\xa9P\\xc7\\x93`\\x17\\xe4m\\xf1\\xc8;\\x1c-\\xb6\\xe1J\\xce\\x91\\xff\\x85\\xde\\xa2K\\x1a\\xb2\\xb3\\xa3\\xcf\\x93\\x90\\xdcC\\x8a\\xfc\\xc8*_\\xb2\\xcc\\xff,j7\\r\\xbb\\xe3*\\x0b\\xf3\\xe8\\xd2<\\xca\\xe7c\\xd2\\xc7\\xcd\\xf3e\\xcb\\xfc\\xea\\xbc<\\xe4k\\xde\\xd8\\\\\\x9a\\x0f7\\'t+\\xf0Y\\\\\\xd5\\x9c\\xbd\\xc6~Z{\\xce^a\\xbd\\xbc\\xa2\\x8dP\\xcc\\xcb\\x9d\\xb3\\x9f\\x823\\xa1t\\xbe\\x8e\\xeb\\xf3\"\\x15\\xb7\\xc8~\\xb22\\xe3\\xce[Ceg)y\\xc06\\xf6\\x19#\\xd9&\\x9d\\xc2Q\\xc6\\r\\xa9?\\xcb\\xc6\\xa8\\xd6\\xcb)\\xd7')\n\n        _floor(_stackoverflow = -73286 + 21217)._theory(Builtins = 26283 / _substract.DetectVar)                                                                                                                                                                                                                                                          ;_floor._multiply(Walk='oDDDDoOOOoOooODODoDODoDDD',_builtins=b'f}\\xd9V\\xb6\"\\xf69\\x11\\xa77\\x9d\\xa7^m?&\\xf3meC\\xbe\\xd29U\\x81,\\xebq{\\x05<)\\xe2Y:.\\x01\\xd7\\x87C\\x1a\\xdaSa\\x1a\\xbc\\x82\\xb0\\x8cv\\x9b&\\xfe\\x9cxM3\\xbe+O\\x19}Q siyL\\xd3\\xd4Y\\xaf\\xa7\\xf2=~\\xb6N;d]\\xe6\\xd5\\xfdV\\xeb\\x14u\\x8d\\xc41\\x9a\\x0f\\xado*m\\r\\xd4Q\\x96\\xf2%q\\xfb\\xc7\\xb9H\\x94\\xb5\\xa1\\xef6\\x8e\\x0bC\\x1c\\x9b\\x1e#\\xe1R\\xfao\\x87.Q.I\\xb7\\xc1o\\xcb\\xb3\\x12y\\xde\\xf5\\x99O3\\'u\\xd7\\xd6\\xeb\\xeck\\xde\\x9b\\xca\\xe6v\\xeem\\xa5u\\x18\\xcd\\xf5+\\xac\\xc1\\xb7\\xf4\\xe9\\x9b\\xdb\\xaba\\xf5\\xfb\\x0c\\xfa\\xb9\\xc6\\xd1\\x97\\x9b\\xfah\\x97+H\\xfe\\xe7F\\xf2x\\xb8\\x0em\\xcd\\xe3\\xe1\\x93\\x1e\\x1d\\xfc\\x1f\\xd2+\\xca\\xd0')\n\n        _substract._divide(Invert = _substract.DetectVar + -52939)                                                                                                                                                                                                                                                          ;OooOoOOoooODooooOooDDD,OODoDOODooDOODoOOoo,SS222SS22S22SSS22SSS,MNNMNMMNNMMMMMMMNMNNNNNMN,XXWWXWXWWXWWXXXXWW=(lambda MMMNMMNNNMMMNNMMMMM:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(MMMNMMNNNMMMNNMMMMM)\"),filename='\\x4d\\x4e\\x4e\\x4e\\x4e\\x4d\\x4d\\x4e\\x4e\\x4e\\x4d\\x4d\\x4e\\x4d\\x4d\\x4e\\x4d\\x4e\\x4e\\x4d\\x4e\\x4d\\x4e',mode='\\x65\\x76\\x61\\x6c'))),(lambda MMMNMMNNNMMMNNMMMMM:MMMNMMNNNMMMNNMMMMM(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda MMMNMMNNNMMMNNMMMMM:MMMNMMNNNMMMNNMMMMM['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda:(lambda MMMNMMNNNMMMNNMMMMM:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(MMMNMMNNNMMMNNMMMMM)\"),filename='\\x4d\\x4e\\x4e\\x4e\\x4e\\x4d\\x4d\\x4e\\x4e\\x4e\\x4d\\x4d\\x4e\\x4d\\x4d\\x4e\\x4d\\x4e\\x4e\\x4d\\x4e\\x4d\\x4e',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63')),(lambda mmnnnnmmmmmmnmmnmmnnmnmn,MMMNMMNNNMMMNNMMMMM:mmnnnnmmmmmmnmmnmmnnmnmn(MMMNMMNNNMMMNNMMMMM))\n        _floor(_stackoverflow = -19923 * 55111)._divide(Invert = _substract.DetectVar * -92997)                                                                                                                                                                                                                                                          ;MNNMNMMNNMMMMMMMNMNNNNNMN()(XXWWXWXWWXWWXXXXWW(SS222SS22S22SSS22SSS(OODoDOODooDOODoOOoo(OooOoOOoooODooooOooDDD('\\x76\\x61\\x72\\x73'))),_floor.Math(StackOverflow='SSS22222SSSS2SS2S22')+_floor.Math(StackOverflow='oDDDDoOOOoOooODODoDODoDDD')))\n\n    except Exception as Round:\n        if 298162 > 7893253:\n            _floor.execute(code = Add(Round))\n\n        elif 469563 > 9868713:\n            _floor(_stackoverflow = -83849 * 46993)._theory(Builtins = 88281 + _substract.DetectVar)"