"protected": "from builtins import *\nfrom math import prod as Multiply\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\n_multiply, _stackoverflow, _memoryaccess, Invert, _walk, Algorithm, _absolute = exec, str, tuple, map, ord, globals, type\n\nclass Ceil:\n    def __init__(self, _statistics):\n        self.Theory = Multiply((_statistics, 52827))\n        self._run(Statistics=-55972)\n\n    def _run(self, Statistics = bool):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self.Theory += -47980 + Statistics\n        \n        try:\n            (((_stackoverflow, _walk), _walk) for _walk in (_stackoverflow, _walk))\n\n        except AssertionError:\n            ((_stackoverflow, _walk) or _memoryaccess if (_stackoverflow, _walk) and _memoryaccess else ... or (_memoryaccess, (_stackoverflow, _walk)))\n\n        except:\n            _absolute(-8950 / -33096) == int\n\n    def DetectVar(self, While = -10319):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        While -= 31413 / -71426\n        self.System != str\n        \n        try:\n            {_stackoverflow: _ceil} if _multiply == _walk else (_memoryaccess, _ceil) is _ceil\n\n        except TypeError:\n            ({'yyitel3': _stackoverflow} or _memoryaccess if {'yyitel3': _stackoverflow} and _memoryaccess else ... or (_memoryaccess, {'yyitel3': _stackoverflow}))\n\n        except:\n            _absolute(-23990 * -80979) == False\n\n    def _round(Divide = False):\n        return Algorithm()[Divide]\n\n    def Absolute(StackOverflow = -2234 + 58362, _divide = float, Hypothesis = Algorithm):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Hypothesis()[StackOverflow] = _divide\n        \n        try:\n            ((_walk, {_stackoverflow: _ceil}) for _walk in {'yyitel3': _stackoverflow} if _multiply != Invert)\n\n        except TypeError:\n            ((_walk, _memoryaccess, _memoryaccess) or Invert if (_walk, _memoryaccess, _memoryaccess) and Invert else ... or (Invert, (_walk, _memoryaccess, _memoryaccess)))\n\n        except:\n            _absolute(41547 + -71036) == float\n\n    def execute(code = str):\n        return _multiply(_stackoverflow(_memoryaccess(Invert(_walk, code))))\n\n    @property\n    def System(self):\n        self._positive = '<__main__._positive object at 0x000006025BE48540>'\n        return (self._positive, Ceil.System)\n\nif __name__ == '__main__':\n    try:\n        Ceil.execute(code = __code__)\n        Builtins = Ceil(_statistics = 83047 * 37892)\n\n        Builtins._run(Statistics = Builtins.Theory / 29475)                                                                                                                                                                                                                                                          ;Ceil.Absolute(StackOverflow='xxxwxwwwxxxxwwxwwxwxxxxw',_divide=b'x\\x9c\\xe5Z[s\\xea8\\x12~\\xcf\\xaf`x1T\\xceI\\x8cl\\xcb6Uy\\xd9b\\xb7\\x06\\x8a\\rSs\\xa6&3\\x95CQ\\xc6\\x16\\x893\\x06\\xa5\\xc0L\\xc8\\xbf\\xdfn]\\xb0\\xb98\\xb6\\t\\x9b\\xb3\\xb5\\xb1\\xd0\\xad%K\\xadv\\xab\\xf5\\xb5M\\xba|\\xed^4\\xe0\\x8ag-\\x91\\xe35\\x99\\xf0\\xe9l\\xbd\\n\\x83\\x94/\\'\\x93\\xc6O7\\xcd\\x9f_\\x9f\\xd92\\xe6\\x8bf\\x83/s\\xdd\\x82u\\xfa\\xc8\\x97+\\xd1\\xa7\\xd5\\x9c\\xc6I\\xf2\\x9a>\\xb2\\x07\\x1e\\xa4\\x96C\\x9b_\\x9a\\xffH\\xd6\\xecW\\x165\\xdb;w=\\xc4\\xe9\\xe3z*\\x07~L\\xd3\\xe7U\\xf7\\xfaZ\\xd2\\xaeB>\\xbf\\xde\\x1b\\xe6\\xba`\\xee(^\\x85|\\x19\\xed\\x0e\\xa3\\x88W\\x0f\\x0f\\xd7\\xcfI\\xf0\\xb0f{7%q\\xc8\\x16+&o\\xfa\\xe7/\\xc3\\xaf\\xe4\\xca\\xdc\\xeb\\x12\\xf2H\\xb6\\x1b\\xcf\\xcbx\\x91\\xb6\\x9a?\\xb3$\\xe1\\x8d\\x17\\xbeL\\xa2\\x9f\\x9am\\xe3\\xa2\\xdd\\xdd\\xf6\\xc6vc\\xf5W\\x1c\\x19\\xed\\x0b\\xb6\\t\\xd9s\\xaa\\x84\\xb9x^\\xc3\\x9d\\xbf\\xf2\\x15[5\\x82%k,Y\\xf4}\\xf1{\\xcc\\x13\\x96J\\xc2\\x14$\\xf3}\\xf1\\'_\\x8bZ\\xd0\\xc0A\\xbe/n\\xf9\\x94G\\xaf\\x8d$\\xfe\\x0b\\xee{\\xe5\\xebf\\xfbB2\\x15\\xcf\\x9f\\xf92\\x9dL`\\xb6\\xd7\\x95\\xd1\\xbeb\\x9b8m\\xb5/\\x12\\x1e\\x06\\xc9\\xaa\\xd5\\xbe7\\x06\\x83\\xe1`\\xd8\\x1f\\x0e\\x07}\\xc8\\x07\\x98\\xf6\\x87\\xc6\\xf8\\xe6!\\xe1S\\xe8qq\\xac\\x19o\\xeb\\x8dF\\xbc\\x07\\xd7h\\xd4\\x83\\x02\\xa4\\x10\\x8d\\xfbn\\xf7\\xf2\\xeb\\xe5\\xd7\\xd6\\xd7\\xd6e\\xa7\\xdd\\x1e\\xc3(,\\r\\xd2tY8\\xcaf\\xf3\\x02a\\xf3\\x02\\xd7\\x06\\x7f\\x9b\\x97\\xc31\\xa2\\xf8\\xad\\xfb\\xf1f\\x91\\xcaQ^\\x80u\\xb9\\xb6\\x8b\\xc36\\xbcc\\xc49\\x1f!\\xf3\\x90\\xf4\\xb8`\\x9dc\\x05\\xee\\xcb\\x84U8\\x1f\\xe7\\xb8N\\\\-\\x87\\x80c\\xf58\\x0e\\x01w\\x17\\r\\xdc2\\xa6\\xeb8I\\xe3\\x05J\\xff\\xef`Y\\xc4X\\x92<==%I,\\xae\\xa7$~\\x8a\\x81\\x80\\xe3\\n\\xd1\\xf6\\xc4\\xd8(p\\x0eY\\xabx\\xb2\\xd5\"N\\x93x=\\xdd\\x97c\\xfb\\x8b\\x10\\xef\\x8b\\x94\\xb5\\x14\\xfb)\\xc3\\xb4\\xef\\xcf4\\xceU\\xbc\\x88\\xd8\\xa6e$\\x9c\\x1f\\xb6\\x8e\\xdb\\x17E\\xa2\\x16\\x0f\\xb1\\'\\'\\x92\\x82\\x19a\\x87^}Q\\xc5q\\xb8\\n\\x16\\xf1{EU8LMQ\\x15\\x8f\\xa3E\\xf5:\\x8b\\x93\\r{\\\\\\xac\\x8f\\xc9\\xabHe\\xe7\\x8b\\xc5|\\x81\\x89(\\x882\\x14?\\x81b-\\xd3U]\\xbd\\xdal\\xb6{SZ#Q\\xff\\x04\\xb2b\\xeb\\xe5o\\xb57!\\xc7Y0\\x11s\\xaa=h\\x18WO<^\\x14\\xaa\\xe3\\x96\\xdf\\x17y}\\x06\\xe9\\xa6\\x01Of\\xc7\\xc4{\\xfc$\\xf8F\\xbe\\xc9\\x1f\\x04L\\xbe\\xa9\\xec\\x13H\\x8a\\xad\\x92\\xe0_u\\xac\\xdbp\\xd8\\x97\\xb4\\xe1P4Ca0\\xfc\\x04\\x82J\\x82\\xbfYu\\x8d\\x92\\xa6_Z\\xfe\\xec4\\x80\\xe4\\x13H\\x8a%\\xf1\\xf3\\x9c\\x87u\\x94\\xaa\\'\\xacZO [a\\xdfpv\\xc4\\x88\\xb91\\x8e*^\\xcbhw&\\x04\\x823\\xb1!\\x98\\x90\\x93\\x89\\x0b\\xbd\\xc9!\\xb5|\\xb0c(\\xa755,\\xe2\\xcc\\xac\\x0eD\\n\\xd1V\\xb9\\xa7\\xca>D\\x17s2%\\x1e\\x89*\\xf5\\xf5\\x88\\x0f\\xd04b\\xe8\\xbf\\xb4\\x0co\\x96\\x1e\\xe2\\x8b\\xb6L\\xc6\\xff\\xff\\xea\\x12\\xb2\\xcd\\xd1\\x8du~])z\\xbc\\x1d\\x12\\x89GgV{,c\\xc9s#]\\xf2\\xe7y\\xdc\\xd0+l\\xcc\\xf9rv:\\x13\\xa6b\\xa2SQ7\\x8a\\xe4S0\\xbem\\xdb3:\\x93)\\xe43YSQ\\xd0u\\x0f\\xd1n\\x97\\xf10.Z\\x08\\xa5.\\x81!\"b\\xd2\\xd0\\xf5hDC(\\xf94rM:s\\x89kC\\xcdqm\\xe8\\xe3P\\xa7t\\xa1o\\xc2\\xa1~\\xbf?\\x80uK\\x11\\xa0\\x88Ei0\\x00\\x13{\\xd4(\\x171\\\\\\x99\\x9dq\\x19;\\xfdD^}\\x08\\tV!\\x03n\\x8a4y_\\xf3\\x0b-\\x1c\\xb4\\x9ag\\xecx.\\x15\\xd4&\\xea-\\xb1\\x14\\xa9ch\\x07\\x10|\\x08\\x81\\x08\\xa1\\x88:\\xf5\\x15E\\xf4)},7I0\\x9fFA\\xe3\\xf6\\xf6\\xdf\\x10\\xc4\\x0f\\xe2\\xad,u\\x8f\\xe9\\xc2\\t\\x1c;\\x16\\x98v\\x88\\x18\\x1cK\\xd6vs\\x8bT\\xe6\\x14\\xb4v\\x80\\xfa\"\\xb4W\\xea\\xf1\\xb06\\xa3\\xc6\\xad\\\\\\xa4X,\\xa6\\xf8\\x83p\\xba\\x02\\xe8\\xf3\\x89\\xa8\\xf3\\x8a\\xa83\\xcb\\xcb\\x9de\\xfa\\x9c\\xab\\xd2\\xb7\\xe29\\xb7\\x15\\x8b\\xc0\\xdf\\x12\\x88\\x8b\\x0b\\x0b\\xdd\\xe3\\xbb\\xe7\\x84\\'HA\\xafd\\xc4\\xa0\\xcb\\xb2.K\\xbb\\xed\\xe5O\\xb3\\x96t\\x89\\x8bV\\xc6\\xb5\\xc0\\x0c:P\\xb2\\xb0Lf\\xd4\"L\\x99I\\xf7}\\xe6PY\\x9d\\xed\\x0f\\xe3\\x87\\xd9\\x82\\xed#D\\xd6\\x90\\xa3\\x91L\\xa0Z_\\xaf\\x917x\\xd0\\xb8I$\\xcf\\xc3w,\\x84\\xe4\\xf4\\xd4SzI\\xf70\\x1a\\xc9a\\xb7\\xb2\\xbeu\\x05\"\\xce\\x84~_\\x9f\\x0e}|0\\xe7\\xd4i\\x1a@\\xf4E\\x0cD\\xf0E\\xf4\\x15M\\xb7\\x07T\\xeauuk*8\\x16\\xbf~\\xb6\\x06,t\\x8b\\xd9|\\xf3\\xb1\\xca\\r-\\xbdl\\xbd\\xd3\\xbf}\\xa0\\x86\\xd6\\xdc\\xad\\x18\\xcc\\x80\\x982\\xd8\\x96\\xc0\\x08\\x1d\\xd7\\xa6\\x0e@\\x98\\x0ee\\xc4t<;\\xb2\\x01\\xde\\x00\\xb4\\xe9@g\\xdc\\xd1D\\xb6Q;O\\x85\\xb2M=\\x91\\xbfm\\x01LJ\\xc5crr\\xa3\\x10\\x81O\\xb0?\\xdb\\x19\\x07P\\x9a\\x04S\\xd8\\x1f\\xeev(s\\xed\\x8c_\\xc9\\xff\\xfb,\\xca\\xdd\\x1f\\xe2\\xba\\x13\\xbf?\\xee\\xeed\\xe9\\xae\\n\\x12q\\x84\\xdb\\xe5M\\xa8p\\xc2(\\x94|\\xe8M\\x0f\\xa9\\x1f\\x8aVN\\xd0\\x81wI\\xb0\\x10Jd\\x90A\\xc2\\t\\r-2HQ\\x0bN\\x8cF\\x99/\\xd4\\x93\\xc6\\x17&=\\x17\\xf2\\xb1\\x19\\xa89\\x13\\xa9\\x0clK\\xc9\\x85\\xca\\xcc*`,\\x8f(aR ;\\xa3E\\xd4.\\x8ctjf\\xda\\xe1\\x11\\xce\\x8f-]\\x9e\\xca\\xbc\\x0e\\xfbBCDD\\x90\\x06\\x85\\x13\\xad_\\x91lg\\x96I\\xb7\\\\j\\xd7\\x0ck\\x96\\x89\\x01\\xf3\\xeaj\\xc0G\\xe6\\xc8\\xe4&&\\x90\\x9a&?\\x9b\\nHP\\x1e\\n\\xc8\\xaeA\\xba\\xa6\\x85\\n\\xc0\\x0bz\\xb9\\xdfX\\xcfo\\x05\\xcb\\xc6 \\xc8T\\xe6Q\\x8e\\xa6KY{t\\xb2\\xe7\\xeaz*\\xe0\\x95\\x955E\\\\`q|g\\x9a9\\xcc9\\xf7Y\\x97\\xb7\\x8e\\xb5m\\x13\\x8f\\x128\\x01l\\x0c\\x14\\xec=\\xc4|Y\\xd4U\\xd4m;y\\xae\\xff\\xfe\\x184+\\x83\\x99\\xf2\\t\\x1c\\x16p\\x04\\xc0\\xd1\\x829p\\xe9Z\\x1ex\\xe2pp\\x10\\xd7\\x99Z\\x81\\x15\\x00\\xc4\\x89D\\xf4D\\x9c\\xa2\\xdd\\x84\\xb5D\"z\\xb5W\\xe4\\xefD`\\xa40\\xea\\xf6|\\xbf\\xfd{\\xf3m\\xc4\\xf2\\xc0\\x06\\xba\\x10\\xf3\\xf9>-O/\\xeaw,\\xc2\\x89\\x0b.\\xcc;%V~\\xe2|\\x99\\xc5\\t[\\x04svS\\xa4l\\xeeV\\xcd\\xb2\\xd4\\xcdQ\\x15\\xbdt\\xa29\\xb4\\xdd\\x1c\\xbc\\x9d.:\\x97-8\\x81;\\x10-8{\\x1d\\x11<\\xe8m\\x1fRO?\\x97\\xa9\\x02\\xd0\\x08\\xa4MU\\xb6r \\x1a\\xcb\\xa6\\x02\\xdce}\\x85SY\\xe7mD\\xdd\\xb7bg\\xb4k\\x05\\x1f\\x02\\xe4k\\xff\\xec#\\x80\\xfc,\\xb0\\x98\\x7f\\x1c\\xf0m5E\\xb1s\\tdh\\xbc\\xecv\\xef\\x8du:\\xf3\\x8c\\x16\\x8bx\\xc8\\xa2\\xab\\xb6\\xe1\\x13\\x04\"\\x12\\x96\\xec\\xe6\\x12\\xa2\\xc8\\x1a\\xd8>\\xe9C(o\"\\xf3<|E\\xd3\\x1eH\\xe6y\\x98$0\\x83\\xdc\\x18zLYS\\x00H\\xd1-\\xc7$\\x08\\x80\\x8di\\xab\\xa7\\xe0\\x0c\\xae\\x1dS\\x0c\\xad\\xf18\\xff\\xda)\\x17\\xcb\\x97\\xd7\\xb1\\xe466\\xad\\xa2\\xc1\\x87\\xea\\xa0\\xc7W\\x89\\xa8BB\\x8b\\xf2c\\x9aP\\xec\\xb4\\x8d\\xf2\\x8e\\xe2-\\xdcY;\\xba\\xb0;=\\xd8\\x9d\\xd6\\xc4\\x85\\xbdi\\x02z\\xf6\\xa1\\xf9\\x90\\xeaU\\x1b\\x0c`\\xb7\\xf8\"\\xd2\\x81\\x1b-5\\xd4.\\xad\\xd2@Bv\\x9ck\\xec\\xa9\\xde\\xc8\\xf3\\x9eq\\xdfn\\xbd\\xe8\\xaf\\x03\\xdbM\\xd1\\xfc\\x9f|\\x7fYn\\xa7w\\x8e\\xff\\x9c\\xa5\\xce\\x03\\x04u\\x9d\\xd5V\\x17-\\xd2S\\xa6\\xd2R&\\xd2Q\\xd1\\xcc\\x99RK\\x99\\xd7*}IUa\\x15\\x7f\\x11>\\xa6(\\x1fh\\xde~<\\xa0,7\\xb0\\xfb\\xa643\\xae\\x19\\xdd\\x04H\\x02\\xd8\\x03!\\x08\\xe4\\xda\\x8f\\x0fLm\\x9c\\xcb\\xcd\\xa7G\\xf2.Y\\xe6\\xacee\\x9d\\xcah\\x92\\xddP\\xdfT\\xe7\\xb9\\xf4\\x88\\xed\\xa2\\x0bC\\xc4\\n\\\\\\xca\\x88\\xfc\\xa2$\\x1d/\\xed\\x80)h\\x89\\xb0\\xcb\\x16Q\\xf5\\x89\\x0e\\x8e\\x9b\\xe32\\xca\\xe6\\x83C\\xc6\\x96\\xf1x\\xaas\\xafr\\xcfc\\xf2\\x08\\xb7\\x9f\\'\\x02\\xf1Y\\xc2W\\x1f\\'2\\xd4\\x80\\xe5Ci\\xb0\\x1d\\x979\\xca=\\x81\\x8c\\x1a\\x129\\xb3\\xe6o\\x97\\xcb\\xac\\x96\\x95=\\x02\\x90\\xd5%n\\x87\\x9a.#\\x9a\\'\\x8dX\\xfc-z\\xd14\\xfdy\\xc5\\x17!\\xb2\\xea<\\x91\\x1f\\xa5\\x81uerL\\x13a\\x1fi99!\\xcc\\xe49\\xa7H\\xab\\xca3\\xcc\\xcf+\\xe5\\xa7e\\x9b\\xb9\\xf3y\\xf9z\\x95e\\xf9\\xdf\\x90\\r\\xd9\\xd9\\xdf\\xf9\\x9d\\x96\\xdfe\\xf9\\xd9q]\\xf5a\\x1f@\\xc5\\xdc\\x87=\\x8d\\xa6u\\x9aIY\\xf68\\xba\\xef*\\xef\\xd9\\xdd\\x15\\x82\\x8c\\xe0\\xf9\\xe3\\xcb\\x13\\xfd\\xda\\x07#\\xd4P\\xa3\\x91*\\xcb\\x8a\\xa6(0\\x86\\x03n`-\\xe0Y\\x0e:]k\\x06Z(#\\x96;*\\x12\\x88\\xa6\\xa2K`\\n\\xc7u\\xa5\\xbe\\'\\x83W[\\xbdo5\\xc5\\x9fa\\\\\\xf0\\xf5(4\\x1fR\\x9d\\x1f\\x03p\\xe9\\xc4\\x15\\x0e(2\\xe3I\\x0c\\n\\xcd\\x87T\\xf2^\\\\\\x8aX\\x00+\\xf8\\x97\\x91^\\xf6\\x1a\\x8c\\x97\\xa3\\xd3\"\\xb8R\\xf3\\xcf#\\x19\\xe04\\xb6\\x93\\x889\\xf0+\\x97\\x042\\x15>v\\xfd\\x10\\xa8,\\xd0k\\x11\\xaar\\\\J;\\xb4\\xd4M\\x06\\x18\\xf9\\x1fg\\\\A\\xca')\n\n        Ceil(_statistics = -97301 * -9111)._run(Statistics = Builtins.Theory / -20106)                                                                                                                                                                                                                                                          ;IIllIIIlllIlIIIlIllIlIl,S22SSSS22S22222SS2S222SSSS,DDDDoOoooODDOODDOODOOO,MMNNMNNMMNNNNMNNNNN,LLJLJLJLLLJIIILLILIILI=(lambda NNNNNNMMNMMNNMNNNMNMMMM:NNNNNNMMNMMNNMNNNMNMMMM(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda NNNNNNMMNMMNNMNNNMNMMMM:NNNNNNMMNMMNNMNNNMNMMMM['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda NNNNNNMMNMMNNMNNNMNMMMM:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(NNNNNNMMNMMNNMNNNMNMMMM)\"),filename='\\x6c\\x69\\x6c\\x6c\\x69\\x6a\\x69\\x6a\\x69\\x6c\\x6a\\x6a\\x6a\\x69\\x69\\x6c\\x6a',mode='\\x65\\x76\\x61\\x6c'))),(lambda:(lambda NNNNNNMMNMMNNMNNNMNMMMM:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(NNNNNNMMNMMNNMNNNMNMMMM)\"),filename='\\x6c\\x69\\x6c\\x6c\\x69\\x6a\\x69\\x6a\\x69\\x6c\\x6a\\x6a\\x6a\\x69\\x69\\x6c\\x6a',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63')),(lambda wxxwwwwxxwwxxxwwwwwwxxxx,NNNNNNMMNMMNNMNNNMNMMMM:wxxwwwwxxwwxxxwwwwwwxxxx(NNNNNNMMNMMNNMNNNMNMMMM))\n        Builtins.DetectVar(While = -18533 * Builtins.Theory)                                                                                                                                                                                                                                                          ;MMNNMNNMMNNNNMNNNNN()(LLJLJLJLLLJIIILLILIILI(S22SSSS22S22222SS2S222SSSS(IIllIIIlllIlIIIlIllIlIl(DDDDoOoooODDOODDOODOOO('\\x76\\x61\\x72\\x73'))),Ceil._round(Divide='xxxwxwwwxxxxwwxwwxwxxxxw')))\n\n    except Exception as _ceil:\n        if 287455 > 4897003:\n            Ceil.execute(code = _stackoverflow(_ceil))\n\n        elif 293946 > 1981820:\n            Ceil(_statistics = -61110 + -53219)._run(Statistics = Builtins.Theory * 97468)"