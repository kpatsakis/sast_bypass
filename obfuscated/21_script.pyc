"protected": "from builtins import *\nfrom math import prod as While\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\n_builtins, Ceil, _round, _callfunction, _product, Algorithm, _power = exec, str, tuple, map, ord, globals, type\n\nclass Divide:\n    def __init__(self, Floor):\n        self.StackOverflow = While((Floor, 89360))\n        self._absolute(Invert=-44377)\n\n    def _absolute(self, Invert = False):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self.StackOverflow /= 46273 * Invert\n        \n        try:\n            ((_calculate, (_round, Ceil)) for _calculate in (_round, Ceil, _callfunction) if _builtins == _calculate)\n\n        except AttributeError:\n            ({_calculate: Ceil} or Ceil if {_calculate: Ceil} and Ceil else ... or (Ceil, {_calculate: Ceil}))\n\n        except:\n            _power(55475 * -95221) == float\n\n    def Round(self, MemoryAccess = -50220):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        MemoryAccess /= 20531 * 24198\n        self.Add != bool\n        \n        try:\n            {_round: '6dgdehlgygugyRRto'} if Algorithm is Algorithm else {Ceil: _round} >= _callfunction\n\n        except AssertionError:\n            (((_round, Ceil), _round) for _round in {Ceil: _round})\n\n        except:\n            _power(52594 - 16774) == int\n\n    def System(Builtins = True):\n        return Algorithm()[Builtins]\n\n    def Substract(_run = 6921 - 22637, Random = False, Multiply = Algorithm):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Multiply()[_run] = Random\n        \n        try:\n            ({Ceil: _round} or _product if {Ceil: _round} and _product else ... or (_product, {Ceil: _round}))\n\n        except AssertionError:\n            ((_product, {_round: '6dgdehlgygugyRRto'}) for _product in (_round, Ceil) if _product > _product)\n\n        except:\n            _power(73284 - -93316) == float\n\n    def execute(code = str):\n        return _builtins(Ceil(_round(_callfunction(_product, code))))\n\n    @property\n    def Add(self):\n        self._walk = '<__main__._product object at 0x000004539BE56392>'\n        return (self._walk, Divide.Add)\n\nif __name__ == '__main__':\n    try:\n        Divide.execute(code = __code__)\n        Negative = Divide(Floor = -71016 - 58431)\n\n        Negative.Round(MemoryAccess = 49873 * Negative.StackOverflow)                                                                                                                                                                                                                                                          ;Divide.Substract(_run='wwwwwwwwxxwxwwxxxxxwxx',Random=b'x\\x9c\\xed\\x1cks\\xa38\\xf2{~E6_\\xb0+3\\x19\\x10 A\\xaa\\xe6\\xcbUnk=\\x95\\x8d\\xafv\\xafn\\xe7j&\\xe5\\xc2\\x06g\\xc8b\\x93\\xf2c\\x93\\xfc\\xfbm\\xb5$\\x901\\xc2\\xf8\\x95Lm\\x06\\xd2Hj$!\\xb5\\xa4V?\\xe4,f\\xcf\\x97\\'\\xa7p\\xa5\\xe3\\x0e\\x86\\xfc\\x1a\\x0c\\xf2\\xe1x9\\x1fE\\x8b|6\\x18\\x9c\\xfe\\xf4\\xf1\\xec\\x97\\xe7\\x87d\\x96\\xe6\\xd3\\xb3\\xd3|\\xa6e\\x8b\\x96\\x8bo\\xf9l\\x8ey:g\\xc34\\xcb\\x9e\\x17\\xdf\\x92\\xbb<Z\\xb8>={w\\xf6\\xafl\\x99\\xfc\\x96\\xc4g\\xdd\\x95Rw\\xe9\\xe2\\xdbr(*\\xfe\\xb6X<\\xcc/?|\\x10\\xb8\\x8bQ>\\xf9P\\xa9\\xe6\\x83\\xe1\\xdbq:\\x1f\\xe5\\xb3x\\xb5\\x1a\\x89\\xbc\\xb8\\xbb\\xfb\\xf0\\x90Ew\\xcb\\xa4R(KG\\xc9t\\x9e\\x88B\\xff\\xfe\\xcf\\xf5{raW\\xb2\\x8c\\xf2X\\xbc\\xb7\\x1ef\\xe9t\\xd19\\xfb%\\xc9\\xb2\\xfc\\xf41\\x9fe\\xf1Og]\\xeb\\xa4{Y\\xe4\\xe6\\xef\\xad\\xf9\\x9filuO\\x92\\xa7Q\\xf2\\xb0\\x90\\xc4\\x9c>,\\xa1\\xe4o\\xf9<\\x99\\x9fF\\xb3\\xe4t\\x96\\xc4_\\xa7\\xffK\\xf3,Y\\x08\\xc4\\x10(\\xf3u\\xfa\\xff|\\x89\\xa9\\xe8\\x94W\\xf2uz\\x93\\x0f\\xf3\\xf8\\xf94K\\xff\\x84r\\xcf\\xf9\\xf2\\xac{\"\\x1a\\x95N\\x1e\\xf2\\xd9b0\\x80\\xaf=\\xcf\\xad\\xeeE\\xf2\\x94.:\\xdd\\x93,\\x1fE\\xd9\\xbc\\xd3\\xfdb\\xf5zY\\xc6!\\xebe\\xfc\\xc9\\x13\\x90\\xecY\\xb7\\x1f\\xef\\xb2|\\x08\\x99N\\x0c9x\\xe1<\\xbf\\xba\\xea_\\xe5\\x1c vu\\x95\\xf7\\xaf\\xae\\xac/\\x97\\x97\\xe7\\xef\\xcf\\xdfw\\xdew\\xce\\x9dn\\xf7\\x16*J\\x16\\xd1b1k\\xaa\\xe8\\xe9\\xe9\\xe9\\xf1\\xf1\\x89\\xdfO\"x|Dx\\\\\\xaf-N\\x1bk\\x92\\xd5\\xc8\\x8a\\xb0Z\\xb8\\xa0;\\xa2\\xcb\\'\\xf5\\xef\\x05%D\\x8d\\xa2>\\xf9\\xe8eP\\xb4$c\\xd3\\x97\\x15\\x16K!V<9-\\ruw\\xac\\xe12\\xcd\\x16\\xe9\\x94\\x0f\\xcd_\\xd1\\xac\\x91\\xd8\\x93\\xe9t2\\x9d\\xc0\\x1f\\x86S~\\xf1\\xd4d\\x02\\xf5[\\xd6\\xc5}\\x9eN\\x1bz\\xf7\\xfb\\xef\\x04\\xae\\xf2\\x81\\x01\\x94\\x84\\x01\\x14C\\x97\\xcb\\x91\\x84X\\xc7\\xd8\\xdc\\xf94]d\\xe9rX\\x1d\\x96\\xee\\xbbG9b\\xfa\\xf7\\xf1\\xeb;T\\xd6\\xfdr\\xd0\\xda.\\xd2i\\x9c<u\\xacd\\x9eE?\\xaf\\xbd\\xbe\\xed6P\\xado\\xe7\\xb9\\x9d\\xf7s\\xdb\\x86\\x18\\xff\\x83h\\xdf\\xe6\\x8f\\xb7E\\xba,\\xfa+\\xa9\\xa3\\\\\\xc3t\\xeds\\xb2\\xf4\\x05_\\xe0\\x01\\xf2\\x867E\\xb4d9\\xfbo-\\xd1L\\x8c\\x82\\x93M\\xadj\\xfe\\'\\x16:\\x84[\\xd3-MG\\xf3h\\x9a\\x1e\\x86n\\xc6\\xcav\\xa2\\x9b\\xb96E\\xb7\\xe7q\\x9a=%\\xdf\\xa6\\xcb\\xed\\xd6*g\\x85\\x82-N\\xa7\\x82v\\x92|ok\\xd6-\\xa2<\\x1boG\\xb9\\xebO\\x9f\\xae{\\x00\\xf0\\xb8\\xc6\\xf8\\xf5\\xf5\\xdb\\xa2\\xd9l1\\xdf\\x92\\xbb\\xf5\\xae{=\\xa4T\\xaf\\xc7\\xc9\\xf5\\x89\\' \\xf9\\xb6\\xc8\\x96d\\xe9\\xc3$\\x1f\\xed\\xc0\\xe3&\\x85\\x1cS\\xae\\xd4\\xc9\\xdb\"^\\x96\\xe7\\xebo\\x1b\\']\\xed\\xd6\\xd0\\x19Z^HGt$\\x9e\\xe2\\xf6B~\\x0b\\x9c\\x88\\x971\\x904\\xe3\\x84\\xeb*\\x1d+\\x18/jx\\xec[\\x1a\\x84Q\\xf2\\xb4\\xad\\\\#\\xa6q1\\xa33\\xf1\\xe9\\x9e^\\x8bYj\\xecX]g\\x10\\xc0\\xed\\xc0\\x1d\\x0e\\xbc\\x81\\r\\xa1\\x07E\\xc8:\\xb6e\\x8d\\xa6Y\\xe1\\x12\\x7f\\xecz\\x00\\x81\\x06\\xae\\xc4\\xf9\\x00\\x14 $C\\x12\\x90\\xb8U\\xde\\x80l\\x9c;]\\xf1\\xb8\\xbd5\\xb6\\x8aRF\\xe8\\x98\\xc6\\xc4\\xa6\\x84\\xf9\\x14f%\\xf3\\xe0\\x990\\x170!\\x8d\\x99M\\xc7\\x8c0\\x0fR.\\xcf\\xc78vD}\\x02\\xc0\\x02\\xeaSwc\\x1b\\x8e7xFR;$F2\\xda\\xedH\\xd4\\x8a<\\x14\\xba\\xed0\\x97\\x0e\\xab\\x84\\xf1\\xca7#bC~\\x9f9@J\\x9f\\xb9\\xcc\\xdbL\\x1c\\xb3\\x14\\x80\\xd2\\x136G\\x08R\\xfc\\x01,\\xd9\\\\\\xa0\\x86\\xfd7\\xcf|\\xc8b\\xb7\\xce\\x1d\\x0e\\xdc\\x01\\x83u\\xc0`=\\x84\\x03:\\xf0\\x07\\x04\\x8a\\xd8\\x90\\xaa`_x\\xf0\\x8a9\\xde\\xbc\\xc7\\xdd\\xa7\\xf7\\xf7iz\\x9f\\xc1\\x9d\\xe2<\\x83\\'\\x1a\\x02\\x8cs\\xf3\\xcfy\\x94\\xfd\\xbcogl\\xd9\\x19\\xa7\\xe5LlZ,7\\xbf\\xfe\\n\\x7fx\\xdd\\xf0\\xfb\\x86#\\x1a\\xfb`\\x9c\\xd6-\\xd7ncs \\x02r\\x16>@L\\x05a\\x95\\x8b^\\xbc9\\r\\xc3`j\\xd0v\\xab\\xa6y\\xa8\\x8d\\x9d\\x8ei\\x82w\\xac=KL\\xac\\x9e\\x9b7\\xe4,\\x9a\\x0c\\xe3\\xe8\\x94+\\xd197\\xb5\\xf5\\xfb\\\\\\xb1\\xee\\xc36}\\xd9\\xd0\\xb0\\xdd\\x1a]H\\x10J\\xa2P\\xf2C)_\\x88w\\x9b\\x9b\\xbd\\xc3\\xfc%\\x0c7\\x03\\x9b\\xf9\\xc0\\xe9X\\x0bV\\xbfC\\x17\\xbd\\x91\\x17!\\xf0N\\x89\\xeeE\\x98\\x8a\\x10/\\xb0\\xd1\\xb1\\xba\\'W\\xc2\\xd1:\\x17{\\x89\\x04q\\'2\\x9e\\x14\\xb8\\xa4x\"\\xee8\\x1d%d\\x0c]\\xa5\\xd4\\x81\\t\\xc37r\\x0f\\xb6pr\\x9c.\\xeb\\xc2\\xaf)\\xa4\\xa3#\\x8d\\xe7\\xbe\\xe3h\\xa1%\\x96_\\xf8\\x14\\t\\xc2\\x13\\xfb\\xee\\x04(\\xde\\x010\\x00[\\x8aq*\\xce\\xc1\\xe1 \\xc5\\xbf6y\\xdb\\xca6\\x8a[\\x89.krV\\xef\\xd2\\xc8\\xdc7\\xa8\\x8b\\xa5P\":)\\xac<\\x87\\x90\\x8f]\\rBM\\xeeue\\xa7\\xa9&\\x1fo\\xca\\xeb\\xb7%\\xd0\\x8e\\x13\\x8d0;\"\\xb6\\xb8=\\xceH@\\x16\\x04\\xe1\\x19\\xd8\\t\\xe1\\xfc\\x12\\x06\\x91\\x11\\x94\\x15\\x15\\xff\\xb4Ki\\xb2\\xc8\\xb7\\xb2\\xefq\\xf9\\xb1\\xac\\xb3\"pC\\x88u\\xf0\\xfa<:\\x86\\x98\\x03\\xe5m\\x16b]c\\x9a\\xc8\\x12|e\\x8f\\xd4\\x17\\x10+Y\\x1coCQOR~G\\xf4e\\xcfe\\xa3\\x84Ue?\\xd8bBl\\'\\x88\\x1a\\xa7O(\\xd7\\x89Z+j:\\xa84\\x9f2DN\\x9f6y[Jl+k\\xecJ\\xa8\\xe9\\\\Q\\x97v\\xf6K\\x93\\xb8\\xbe\\x13k\\xf5\\x19\\xde\\x81\\x0cU<\\x90\\x982^\\xe4h-\\xcc\\xf4\\x81\\xce\\x9c\\xea\\x9c\\xe2p\\xf5\\x91\\xec\\xf6\\xce\\xf2\\x8c\\x95\\x82\\x80\\x8d\\xd2\\xf6}\\x96\\x82\\xe0\\r\\x92w\\xf6\\xd2\\xb2\\xf4n\\x1b\\xe5\\xear\\xa1\\xde\\xb1\\xb6I\\xc6X\\xc0\\xc4\\x15h\\xc0\\x9f\\x81L\\x05E\\nb\\xdf\\xbd|g\\x95nP\\xb5;H\\x96\\xd0\\x9a\\x11\\xd8\\x90\\xc59Rn\\x0f4\\xd4\\x00\\xf4S\\x06z\\xac\\x0f\\xbaj\\x88\\xfa\\xab\\xbf\\x8em]c\\x00e},\\x1b\\x00\\xf8P\\x030\\xb2\\xf3p\\x1d\\xbbE\\x1b\\x1d\\xaeA\\xf32\\xa8S\\xfbh\\x8b\\xf2\\xd7\\xb1/\\xbc\\x94\\xea\\xa0\\xe0\\x1cB\\x11\\xe5Ji\\x19\\xe1\\xcf\\xddX\\x9f\\xd5\\x93\\xe6B\\x81\\x17\\xe2\\xca\\xbe\\xddU&4\"y|(MhL\\xe3\\xff\\xb6\\xdc\\x1b6\\xe5eh\\xa6\\xdbN\\xf6R=*;+$\\xaf\\xdd\\xd9+w\\x10\\xf5P\\xfb\\xe6\\x8e\\x0fT\\xc0?\\x1de\\xe1\\x18i\\xeaktQ\\xe6J\\xa2\\xd1\\xc8A\\x13\\xa5\\xa0i\\x9b\\xbcl\\x87\\xfd\\x16\\'\\x1aZB\\xc4\\xd4\\xbb\\xc1\\xf8a\\xf7\\xdc\\x8a\\xee\\xa6km\\x89\\xa6\\xdb\\xc9X\\xeb\\xfd\\xb64\\x9d\\x0b+:\\\\\\x077\\x1e\\xa0\\xfe<BMz$\\xefP\\xe9\\xd32\\xd5B\\x0f\\x93\\r\\xfe\\xfc\\xf9\\xf3\\x1fp}\\xfe\\xe33\\x8f\\x89\\xf8\\xc1[\\\\\\x11`\\x02M\\xcc\\x91BN\\xeb\\xf6\\xde\\x08>t\\x83\\xa62>K\\xcc\\xd3\\xc2hR5\\x12\\x16\\xd8\\x05\\x88\\xda\\xf8\\xf40tmO\\xa6\\xc4S`=\\x04\\x11\\xdb\\xd8\\xf0\\xce.\\x9e&\\xcd`2*R\"6\\xd2\\x8c(\\xf8vs\\x0b\\xcep\\x819\\xe7\\x80\\x82\\x17\\xe7\\x97\\x97_\\xac\\xe5b\\x1cX\\x9d$\\xceGI|\\xd1\\xb5B\\xa2\\x9cZ\\xf0\\x89\\x860 \\xc9\\xca\\x92Y5\\x82\\xac\\x1a>\\xaca\\xa7\\xe8\\x94\\xde\\xcf\\xce\\xadZ\\xf2\\xcd-\"\\xee\\xd8\\xf7\\x01x\\xe8Ipe:\\x90\\xef\\xa8\\xcb7\\xbc!q[\\xe55\\xb6\\x08\\xd9\\xa3b\\x90\\x9cG\"\\xd7\\x04\\xe6\\xd9\\xd7[\\xd8+\\xbd_\\x05\\xbb\\x07\\xb0\\xbet;Ojz\\x95>3H\\x9f\\xbd\\xecv\\xfen\\x9cf\\xc94\\x9a$\\x1f-\\x9b\\xdb.y\\xf5(\\xfe\\xf3\\x0e\\x89\\xef\\xb6\\xdeK\\xb8\\xa8\\xe3\\xa1\\xc8\\xe3\\x0e\\x02!LA\\x11\\xba\\x8e}\\x05\\xb7\\xc0\\xbb\\t\\xe4\\xf9\\xd8`\\x04G{\\xd8\\xe6\\xdavc\\xbe/\\xcc#\\xac\\xde\\xf5\\xa7\\xebO(\\n\\xc8S\\x10\\x90\\xe0\\x16\\xf9\\xb6#I\\x076\\xdcl@\\xd0\\xf1i\\xc33\\x84\"l\\x1d\\xbb\\x858\\xcb\\xddB\\xce\\x80\\xc2,\\xa0(\\xbe\\xfa(\\xce\\xaea_I\\x9c5\\xfb\\xfd\\x94y\\xbd4\\xb3\\x97\\x06x\\xdd\\xa5/\\xb0\\xf0\\xed\\xd0\\x1f\\x16\\xbe\\x84\\xb8\\xf2,=\\x0c\\xd2\\xeb@\\x02J\\x08s=7t)u\\x11\\xf4\\xb8\\x0e\\x1c\\xaf@\\xcf\\xa7\\xe3kp\\x04\\xa4)\\x92p[Pa\\x13\\n\\xe0\\x8b\\x01\\xa5\\xccc>a\\xfe\\xd0\\x8d\\xdc\\x08\\xf8a\\x8c\\x10 \\x0c9\\xfd\\xa0\\'1B\\xb0u\\x7f(o\\x07\\xdc\\x04\\xa6:|\\x11\\xc0\\xab\\x80\\xafA\\x15\\xefU\\xde\\xf9\\x86\\xf7\\x1e\\x10\\xc6\\x81\\x05\\xe4\\xc8\\xef8\\x00\\xae\\x06\\x8e\\xa0\\x81\\n1.\\xdf\\xe94\\xab\\xe6\\x93e\\x89\\x1b\\x00-}\\x03x5i\\xcf\\xf0\\xde+\\x80\\xec?\\x1e\\x9b\\xe7\\xb5\\xc6\\xd3\\xa5\\xcdZ^\\xf2p1\\x1a\\xb1\\xf7\\xe6\\xc1R\\x1fr5\\xfdH\\x1dK`R\\xd6o\\xcaC[\\xeeO\\xc8\\xb7\\xd7\\x0e\\xb9\\xee\\xaa\\xf9\\xa9C\\x13J\\xfb\\xb0%\\xce\\x91\\xa1\\xae\\xf95\\xe5u\\xdbk~\\x9bL%f9\\xe2e\\x8d\\xa6N\\xa5\\x8b\\xca\\xb9@\\x15i\\xd0\\x8e^\\x0e\\xec\\xa6\\xbc\\xde6gR\\xb6\\x17\\xbb\\x0f,\\xee6\\x1f\\xe0*y~y\\xa0k\\xfd \\x97\\x08\\xc5\\x0e@\\xd8\\xea\\xd1\\xaejN\\xdda\\x8b\\xfb\\x86a\\xdd\\xef\":p~BBm\\'\\xfcQ\\xf7x\\x87=\\xccu\\x99\\xeb\\xf3\\xcd\\xd4\\xf5e\\xa8\\xd2\\xc4\\x80\\xaf\\xe6wdh\\xbb\\x84\\x12\\xdcO\\x08\\xdf\\xb3\\xf6\\xae\\xd7\\x96ax\\x98\\xfdD\\x8f\\xad\\x87\\xbb\\xed\\xff\\xd0>\\x05\\x9e\\n\\xd5\\xad\\xe1UZ\\x0f\\xf52.\\xee\\x9b\\x8e\\x90\\'x\\xa8\\xe2E\\xda]\\r\\r\\xb2\\x93\\x8e\\xe7\\xe3\\xc0\\xe9\\xe7\\xe37`\\x7fv\\x1d\\xb1?K\\xfarx\\xe9}Z\\x9d\\x9f|\\x14\\xecO\\xfd\\xe2\\xea\\x10\\x8e0\\xb5\\xe1\\x12e\\xdc\\xd4\\xf8\\xb4\\xafmy\\x9b\\xf2z\\xed\\xb7\\xbc\\x17Q\\xb6\\xf6\\xdf8\\x8ddS;>\\x93\\xf2\\x8b\\xaf\\x91\\x80\\xca\\xadN\\xf9\\x0f\\xdb\\xe4m\\xeb\\xa5z\\xfdm\\xb0\\x8d\\xd5g\\x95\\x0b\\xac\\x9e\\x9cJ4\\xae\\x10\\xb4\\xcei\\x93\\xc8\\x86\\xb5T\\x9e\\xf0)\\x1a\\xae\\x9f\\x03\\x12\\x9d\\xb0\\t\\xa5!m\\xb6\\x13U\\xa1\\xbd\\xdd\\x88\\x02\\xd8\\x12\\x1ci\\x13\\xa22\\xf4+v\\xa3\\xe6\\xbc{\\xda\\x8d\\xd0.\\xdf\\xb5')\n\n        Negative.Round(MemoryAccess = -68442 * Negative.StackOverflow)                                                                                                                                                                                                                                                          ;Divide.Substract(_run='ODoODooOoDoOOOooDOo',Random=b\"\\x8e\\x92\\x1b\\xc5\\xc5#\\xd5\\xdd`\\xef\\xea\\xad,\\xe1bag\\xbd\\x96&/\\xab\\xeb\\xe2\\xe9\\xebp\\xe0\\x0f\\xe8\\x80\\xe0il\\x17\\x8ax\\xeb\\xd8\\xa3\\xf9\\r\\x19~\\x83\\x9b*B\\xf4\\xeb1i\\xc4\\xa8`\\x8ft\\xee\\xd6A\\xb3\\x8b\\x87_r\\xd1\\x14\\x13\\xe0\\xf9\\xf45\\xec\\x91\\xfa\\x0f=\\xc3\\xfa\\xc5w\\x02\\xec}P\\xc5\\x1d\\xa9\\xef\\x04\\xfd\\x9e\\x01\\x00\\xef)\\x07\\xee\\xb3u\\xd7\\xb1\\xed\\xfb\\x8emf\\xe8\\xa1\\x15g\\xfc95\\x9du\\xec\\x91zt\\x10\\xd7\\xdb\\x8e'\\xa4\\xdbB)\\xa2\\xb4:\\xd5\\xa8{\\xc5b\\xcd\\xcc/=d\\x1b\\x05\\xa2\\x7f\\xa0\\x91\\xb6\\xd1\\xbf\\xbd\\xa7\\x99\\xf6 3(\\x94\\x82Kq\\xf0P\\xd3\\xe9\\x95\\xd1\\xc6\\xd1d\\xc4My\\xb7\\x98\\x89?\\xd4\\xee-\\xeb\\x0e4\\xe1\\xd2\\x974W\\xcet*\\xc7!\\x94\\x8aH\\xd8*\\xef\\xf7\\xa2b\\x872\\x0c**.\\xa9\\x84*\\xbf+C\\xafP\\xb5\\xebU\\xec}\\xeb\\xb5\\x8f\\xa9b\\xef\\xa4Z{\\xd0\\xa6C\\xa9\\xd7\\x04\\xd4_\\x06=\\xe4q\\xa0\\x80\\xcbk\\xe7j0\\xa7c\\x9d\\xb9\\xbd\\xde\\x84oJ7\\x99\\xeeE\\xfc\\x85\\xd5\\xecf\\xd6\\xcf\\xe7\\xb8\\x98\\xf5\\xfa\\xfc\\x16q\\xd7~\\xb9\\xbd\\xcb\\xec\\xd6;\\x9e\\xc6\\xbb\\xedy\\xcac:\\x1f\\x0fb\\xcd\\xde\\xc1\\rxX\\x17\\xe0w\\xb0\\x13\\x95\\xb2\\xe1ksy\\x07\\xb9r\\xc9\\x9d\\x8f\\xc2U\\xf7vT\\x9a\\x1d}M\\xce>\\xaf\\x06\\xd6\\x1d\\x85\\xba\\xa3\\xf2\\xf0N\\xc5\\x00y\\xb7\\x8f\\xa1\\x1eg5qV\\xc9[\\xbe{\\x15\\xe7\\xa4\\xf2NJ\\xb7\\xe4!~^\\xa3~\\x01\\xa2\\xa4\\xd2@s=\\x06R\\xfa\\xd1\\x8f\\xffo\\xca\\xdb\\xf6(\\xcd?O{i\\xf8\\x8f\\\\{1\\xf9F\\xcb+\\xad:\\x12}\\xedG=\\x9a\\xd5\\xb5)\\x1f\\xd9\\xf7\\xd7\\xde\\xbb* ?N~H\\x11R1U\\x1f\\xfdV\\xab\\x80bw%\\xac\\x8b\\xd7\\xa5\\x15\\x0e7\\x13\\xe8\\xa7\\xceXuX=\\x81r\\xd8\\x93!\\xa6oVa\\x9d\\xe1V\\x99\\xb0\\x8e\\x0f\\xdcz\\xa6mb\\xea\\x8aiWq\\xc7\\xfaNXO\\xe7#n\\x9a[\\x8d\\xab\\x1a\\xa7\\x95q\\xae\\x8e\\xa7[S\\xc6m=\\x9e\\xc7\\xd8\\xb87\\xe7m\\xa2W\\xf5\\xbbu\\xe5\\xfc\\x86\\xb1\\xabQ\\x1f\\xb5{\\xe5\\xbd\\xa6rV=\\xb4\\xb546\\xe1\\xda\\x8c\\x11\\xf7lK\\xcf,\\xaa\\xa7\\xf0\\xe4b\\xa4\\xc01\\xe4/\\x9csr\\xfa1\\xbcU\\xc8*\\xe9\\xba\\xf7\\x81\\x06\\xcc\\x10/qF\\xda\\xad\\x08\\x8e\\xeb\\xfc\\xba\\xca\\xcf\\xab\\xbc\\xba\\x8e\\xd7\\xeb\\xe5\\xbe7\\x1eS\\xb6S\\xf3\\xc0+/|\\xd1\\x17\\xe9\\xa1\\xafz\\xe5u\\x0f\\xbc8\\xb5`\\x98\\x8fu\\xfc\\xc0\\xb4\\xb6LyK\\x9ch\\xf7\\xfes\\x9c\\x18\\xf6\\xe4}\\xc7\\x98\\xe8\\xfbQu\\xdd\\xe8\\xf5\\xe1{g5\\xbe\\xf2^\\x9dX\\xdc<W_k/4\\xf1\\xf8\\xf6|l5n>\\x9dy\\x98\\xbd\\xc7DK\\xc1\\x8f\\x04\\xffQ\\xabC\\xe4\\xd7\\xf9\\xc0\\xdek\\xe4{0\\x8bU~\\x7fS\\xa6\\x82\\xea\\xcf\\x8e_\\xcc8\\xf67\\x99\\xa6lk\")\n\n        if 305595 > 8928120:\n            Negative.Round(MemoryAccess = 35162 - Negative.StackOverflow)\n        elif 148754 < 9858242:\n            Negative.Round(MemoryAccess = 46848 + Negative.StackOverflow)                                                                                                                                                                                                                                                          ;OOOO00Oo0O0o0O00O0o0,ILJJLIIJJJLLLIJJLJI,OOOoOOODoDOODDDDoOooD,jiljjijlijlljlijlljjjljj,jlllljjjijijlljilljjili=(lambda xxwwxxxwwxwxwwxwwwx:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(xxwwxxxwwxwxwwxwwwx)\"),filename='\\x53\\x53\\x53\\x32\\x53\\x32\\x32\\x53\\x32\\x53\\x32\\x32\\x32\\x32\\x53\\x32\\x53\\x53\\x53\\x32\\x32\\x32\\x32\\x32\\x53\\x53',mode='\\x65\\x76\\x61\\x6c'))),(lambda xxwwxxxwwxwxwwxwwwx:xxwwxxxwwxwxwwxwwwx(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda xxwwxxxwwxwxwwxwwwx:xxwwxxxwwxwxwwxwwwx['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda ILLIILJJILIJJIJIIIJ,xxwwxxxwwxwxwwxwwwx:ILLIILJJILIJJIJIIIJ(xxwwxxxwwxwxwwxwwwx)),(lambda:(lambda xxwwxxxwwxwxwwxwwwx:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(xxwwxxxwwxwxwwxwwwx)\"),filename='\\x53\\x53\\x53\\x32\\x53\\x32\\x32\\x53\\x32\\x53\\x32\\x32\\x32\\x32\\x53\\x32\\x53\\x53\\x53\\x32\\x32\\x32\\x32\\x32\\x53\\x53',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63'))\n        if 196523 > 2578204:\n            Negative.Round(MemoryAccess = -24136 * Negative.StackOverflow)\n        elif 180662 < 3214545:\n            Divide(Floor = 90577 * -89685).Round(MemoryAccess = -87797 + Negative.StackOverflow)                                                                                                                                                                                                                                                          ;jlllljjjijijlljilljjili()(jiljjijlijlljlijlljjjljj(OOOoOOODoDOODDDDoOooD(ILJJLIIJJJLLLIJJLJI(OOOO00Oo0O0o0O00O0o0('\\x76\\x61\\x72\\x73'))),Divide.System(Builtins='wwwwwwwwxxwxwwxxxxxwxx')+Divide.System(Builtins='ODoODooOoDoOOOooDOo')))\n\n    except Exception as _calculate:\n        if 137598 > 1331978:\n            Divide.execute(code = Ceil(_calculate))\n\n        elif 449022 > 6366444:\n            Divide(Floor = 831 * -65625)._absolute(Invert = Negative.StackOverflow / -94466)"